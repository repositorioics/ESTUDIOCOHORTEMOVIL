package com.sts_ni.estudiocohortecssfv.expedientesactivities;

import android.app.Activity;
import android.app.AlertDialog;
import android.app.ProgressDialog;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.net.Uri;
import android.os.AsyncTask;
import android.os.Bundle;
import android.support.v4.app.DialogFragment;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentPagerAdapter;
import android.support.v4.view.PagerAdapter;
import android.support.v4.view.ViewPager;
import android.support.v4.widget.DrawerLayout;
import android.support.v7.app.ActionBar;
import android.support.v7.app.ActionBarActivity;
import android.text.InputFilter;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.DatePicker;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.Spinner;
import android.widget.TextView;
import android.widget.Toast;

import com.sts_ni.estudiocohortecssfv.CssfvApp;
import com.sts_ni.estudiocohortecssfv.NavigationDrawerFragment;
import com.sts_ni.estudiocohortecssfv.R;
import com.sts_ni.estudiocohortecssfv.dto.ErrorDTO;
import com.sts_ni.estudiocohortecssfv.dto.HojaInfluenzaDTO;
import com.sts_ni.estudiocohortecssfv.dto.InfoSessionWSDTO;
import com.sts_ni.estudiocohortecssfv.dto.MedicosDTO;
import com.sts_ni.estudiocohortecssfv.dto.ResultadoListWSDTO;
import com.sts_ni.estudiocohortecssfv.dto.SeguimientoInfluenzaDTO;
import com.sts_ni.estudiocohortecssfv.helper.MensajesHelper;
import com.sts_ni.estudiocohortecssfv.tools.BuscarDialogMedico;
import com.sts_ni.estudiocohortecssfv.tools.DatePickerFragment;
import com.sts_ni.estudiocohortecssfv.tools.DecimalDigitsInputFilter;
import com.sts_ni.estudiocohortecssfv.utils.DateUtils;
import com.sts_ni.estudiocohortecssfv.utils.StringUtils;
import com.sts_ni.estudiocohortecssfv.utils.UserTask;
import com.sts_ni.estudiocohortecssfv.ws.ConsultaWS;
import com.sts_ni.estudiocohortecssfv.ws.SeguimientoInfluenzaWS;

import java.io.File;
import java.io.FileOutputStream;
import java.io.OutputStream;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;

/**
 * Controlador de la UI de Seguimiento Influenza
 */
public class SeguimientoInfluenzaActivity extends ActionBarActivity
        implements NavigationDrawerFragment.NavigationDrawerCallbacks {

    private NavigationDrawerFragment mNavigationDrawerFragment;
    public ArrayAdapter<CharSequence> adapter;
    public BuscarSeguimientoTask mBuscarSeguimientoTask;
    public GuardarSeguimientoTask mGuardarSeguimientoTask;
    public CerrarHojaSeguimientoTask mCerrarHojaSeguimientoTask;
    public AsyncTask<Void, Void, Void> mObtenerMedicosTask;
    public int mCodExp = 0;
    public int mNumSeg = 0;
    private static SeguimientoInfluenzaActivity mSeguimientoInfluenzaActivity;
    private static boolean existeDetalle;
    private static boolean esCargaInicial;
    private static String textoBusquedaMedico;
    private static ResultadoListWSDTO<MedicosDTO> RESPUESTAMEDICO;
    private static ArrayAdapter<MedicosDTO> adapterMedico1;
    private static ArrayAdapter<MedicosDTO> adapterMedico2;
    private static ArrayAdapter<MedicosDTO> adapterMedico3;
    private static ArrayAdapter<MedicosDTO> adapterMedico4;
    private static ArrayAdapter<MedicosDTO> adapterMedico5;
    private static ArrayAdapter<MedicosDTO> adapterMedico6;
    private static ArrayAdapter<MedicosDTO> adapterMedico7;
    private static ArrayAdapter<MedicosDTO> adapterMedico8;
    private static ArrayAdapter<MedicosDTO> adapterMedico9;
    private static ArrayAdapter<MedicosDTO> adapterMedico10;
    private static ArrayAdapter<MedicosDTO> adapterMedico11;
    private static ArrayAdapter<MedicosDTO> adapterMedico12;

    private static ArrayAdapter<MedicosDTO> adapterMedico13;
    private static ArrayAdapter<MedicosDTO> adapterMedico14;
    private static ArrayAdapter<MedicosDTO> adapterMedico15;
    private static ArrayAdapter<MedicosDTO> adapterMedico16;
    private static ArrayAdapter<MedicosDTO> adapterMedico17;
    private static ArrayAdapter<MedicosDTO> adapterMedico18;
    private static ArrayAdapter<MedicosDTO> adapterMedico19;
    private static ArrayAdapter<MedicosDTO> adapterMedico20;
    private static ArrayAdapter<MedicosDTO> adapterMedico21;
    private static ArrayAdapter<MedicosDTO> adapterMedico22;
    private static ArrayAdapter<MedicosDTO> adapterMedico23;
    private static ArrayAdapter<MedicosDTO> adapterMedico24;
    private static ArrayAdapter<MedicosDTO> adapterMedico25;
    private static ArrayAdapter<MedicosDTO> adapterMedico26;
    private static ArrayAdapter<MedicosDTO> adapterMedico27;
    private static ArrayAdapter<MedicosDTO> adapterMedico28;

    public static Context CONTEXT;
    public String mNombrePaciente = null;
    public String mEstudio = null;
    public String mFis = null;
    public String mFif = null;
    public ArrayList<SeguimientoInfluenzaDTO> listaSegInfluenza;
    public ArrayList<SeguimientoInfluenzaDTO> nuevaListaSegInfluenza;
    public static boolean isEmptyFIF = false;
    public static String currentUser = null;
    //public static int posicionMedico = 0;

    public static int consultorioMedico = 0;
    public static int consultorioResp = 1;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_seguimiento_influenza);

        mSeguimientoInfluenzaActivity = this;
        CONTEXT = this;
        listaSegInfluenza = new ArrayList<>();
        nuevaListaSegInfluenza = new ArrayList<>();

        mNavigationDrawerFragment = (NavigationDrawerFragment)
                getSupportFragmentManager().findFragmentById(R.id.navigation_drawer);

        final ActionBar actionBar = getSupportActionBar();
        actionBar.setDisplayShowTitleEnabled(true);
        actionBar.setDisplayOptions(ActionBar.DISPLAY_SHOW_CUSTOM);
        actionBar.setCustomView(R.layout.custom_action_bar_title_center);
        ((TextView) actionBar.getCustomView().findViewById(R.id.myTitleBar)).setText(getResources().getString(R.string.label_seguimiento_influenza));
        ((TextView) actionBar.getCustomView().findViewById(R.id.myUserBar)).setText(((CssfvApp) getApplication()).getInfoSessionWSDTO().getUser());
        currentUser = ((CssfvApp) getApplication()).getInfoSessionWSDTO().getUser();
        // Set up the drawer.
        mNavigationDrawerFragment.setUp(
                R.id.navigation_drawer,
                (DrawerLayout) findViewById(R.id.dwlSeguimientoInfluenza));
    }

    @Override
    public void onNavigationDrawerItemSelected(int position) {
        // update the main content by replacing fragments
        FragmentManager fragmentManager = getSupportFragmentManager();
        fragmentManager.beginTransaction()
                .replace(R.id.fmlSeguimientoInfluenza, PlaceholderFragment.newInstance(position + 1))
                .commit();
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        if (!mNavigationDrawerFragment.isDrawerOpen()) {
            // Only show items in the action bar relevant to this screen
            // if the drawer is not showing. Otherwise, let the drawer
            // decide what to show in the action bar.
            getMenuInflater().inflate(R.menu.pantalla_inicio, menu);
            return true;
        }
        return super.onCreateOptionsMenu(menu);
    }

    @Override
    public boolean onPrepareOptionsMenu(Menu menu) {
        if (!mNavigationDrawerFragment.isDrawerOpen()) {
            MenuItem itemLupa = menu.findItem(R.id.action_search);
            itemLupa.setVisible(false);
            MenuItem itemRecargar = menu.findItem(R.id.action_reload);
            itemRecargar.setVisible(false);
            return true;
        }
        return super.onPrepareOptionsMenu(menu);
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();

        //noinspection SimplifiableIfStatement
        if (id == R.id.action_settings) {
            return true;
        }

        return super.onOptionsItemSelected(item);
    }

    @Override
    protected void onDestroy() {
        super.onDestroy();

        cancelarBusquedaTask();
        cancelarGuardarSeguimientoTask();
        cancelarCerrarSeguimientoTask();
        cancelarObtenerMedicoTask();
    }

    /***
     * Cancela tarea busqueda al destruir el activity.
     */
    private void cancelarBusquedaTask() {
        if (mBuscarSeguimientoTask != null && mBuscarSeguimientoTask.getStatus() == UserTask.Status.RUNNING) {
            mBuscarSeguimientoTask.cancel(true);
            mBuscarSeguimientoTask = null;
        }
    }

    /***
     * Cancela tarea guardar seguimiento al destruir el activity.
     */
    private void cancelarGuardarSeguimientoTask() {
        if (mGuardarSeguimientoTask != null && mGuardarSeguimientoTask.getStatus() == UserTask.Status.RUNNING) {
            mGuardarSeguimientoTask.cancel(true);
            mGuardarSeguimientoTask = null;
        }
    }

    /***
     * Cancela tarea cerrar seguimiento al destruir el activity.
     */
    private void cancelarCerrarSeguimientoTask() {
        if (mCerrarHojaSeguimientoTask != null && mCerrarHojaSeguimientoTask.getStatus() == UserTask.Status.RUNNING) {
            mCerrarHojaSeguimientoTask.cancel(true);
            mCerrarHojaSeguimientoTask = null;
        }
    }

    private void cancelarObtenerMedicoTask() {
        if (mObtenerMedicosTask != null && mObtenerMedicosTask.getStatus() == AsyncTask.Status.RUNNING) {
            mObtenerMedicosTask.cancel(true);
            mObtenerMedicosTask = null;
        }
    }

    /***
     * Carga los datos obtenidos al crear hoja influenza.
     * @param nombrePaciente, Nombre del paciente
     * @param estudioPaciente, Estudios del paciente
     * @param hojaInfluenza, Hoja Influenza
     */
    public void cargarDatosCrearHojaUI(String nombrePaciente, String estudioPaciente, HojaInfluenzaDTO hojaInfluenza) {

        this.mNumSeg = hojaInfluenza.getNumHojaSeguimiento();
        this.mCodExp = hojaInfluenza.getCodExpediente();
        this.findViewById(R.id.ibtCrearHoja).setEnabled(false);
        this.findViewById(R.id.ibtBuscarExp).setEnabled(false);

        ((EditText) this.findViewById(R.id.edtxtNombreApellido)).
                setText(nombrePaciente);
        ((EditText) this.findViewById(R.id.edtxtEstudioPacienteSeguimiento)).
                setText(estudioPaciente);
        ((EditText) this.findViewById(R.id.edtxtNumSeguimiento)).
                setText(String.valueOf(hojaInfluenza.getNumHojaSeguimiento()));

        ((EditText) this.findViewById(R.id.edtxtFIS)).setText(hojaInfluenza.getFis());

        ((EditText) this.findViewById(R.id.edtxtFIF)).setText(hojaInfluenza.getFif());

        ViewPager viewPager = (ViewPager) this.findViewById(R.id.vpDias);
        viewPager.setOffscreenPageLimit(2);
        viewPager.setAdapter(PlaceholderFragment.mPagerAdapter);

        viewPager.setVisibility(View.VISIBLE);

        findViewById(R.id.btnGuardar).setEnabled(true);
        findViewById(R.id.ibtImprimir).setEnabled(true);
        findViewById(R.id.btnCerrarSeguimiento).setEnabled(true);
    }

    /***
     * Carga los datos obtenidos atravez de buscar Hoja Influenza.
     * @param hojaInfluenza, Hoja Influenza
     */
    public void cargarDatosInfluenzaUI(HojaInfluenzaDTO hojaInfluenza) {

        this.mCodExp = hojaInfluenza.getCodExpediente();
        this.mNumSeg = hojaInfluenza.getNumHojaSeguimiento();
        this.findViewById(R.id.ibtCrearHoja).setEnabled(false);
        this.findViewById(R.id.ibtBuscarExp).setEnabled(false);

        ((EditText) this.findViewById(R.id.edtxtNombreApellido)).setText(hojaInfluenza.getNomPaciente());

        ((EditText) this.findViewById(R.id.edtxtEstudioPacienteSeguimiento)).setText(hojaInfluenza.getEstudioPaciente());

        ((EditText) this.findViewById(R.id.edtxtCodExpediente)).setText(String.valueOf(hojaInfluenza.getCodExpediente()));

        ((EditText) this.findViewById(R.id.edtxtNumSeguimiento)).setText(String.valueOf(hojaInfluenza.getNumHojaSeguimiento()));

        ((EditText) this.findViewById(R.id.edtxtFIS)).setText(hojaInfluenza.getFis());

        ((EditText) this.findViewById(R.id.edtxtFIF)).setText(hojaInfluenza.getFif());

        /*Si la FIF es null o vacia y existe detalle en el seguimiento inlfuenza
           habilitamos el (EditText = edtxtFIF )para poder ingresar la FIF*/
        if (StringUtils.isNullOrEmpty(hojaInfluenza.getFif())
                && (hojaInfluenza.getLstSeguimientoInfluenza() != null && hojaInfluenza.getLstSeguimientoInfluenza().size() > 0)) {
            this.findViewById(R.id.edtxtFIF).setEnabled(true);
            isEmptyFIF = true;
            ((EditText) this.findViewById(R.id.edtxtFIF)).setKeyListener(null);
        }

        this.findViewById(R.id.ibtImprimir).setEnabled(true);

        if (hojaInfluenza.getCerrado() == 'S') {
            this.findViewById(R.id.btnGuardar).setEnabled(false);
            this.findViewById(R.id.btnCerrarSeguimiento).setEnabled(false);
        } else {
            this.findViewById(R.id.btnGuardar).setEnabled(true);
            this.findViewById(R.id.btnCerrarSeguimiento).setEnabled(true);
        }

        if (hojaInfluenza.getLstSeguimientoInfluenza() != null && hojaInfluenza.getLstSeguimientoInfluenza().size() > 0) {
            existeDetalle = true;
            //bandera para presentar el aviso de la fecha de seguimiento
            boolean presentaAviso = false;
            String mensajeAviso = "";

            for (SeguimientoInfluenzaDTO seg : hojaInfluenza.getLstSeguimientoInfluenza()) {
                //cargnado los datos de seguimientos
                listaSegInfluenza.add(seg);

                if (hojaInfluenza.getCerrado() == 'N' && seg.getControlDia() == 1 && !StringUtils.isNullOrEmpty(seg.getFechaSeguimiento())) {
                    try {
                        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                        Date fSeg = sdf.parse(seg.getFechaSeguimiento());
                        String hoy = sdf.format(new Date());
                        Date dNow = sdf.parse(hoy);

                        long diferenciaEn_ms = dNow.getTime() - fSeg.getTime();
                        long dias = diferenciaEn_ms / (1000 * 60 * 60 * 24);

                        if (dias >= 30) { /* dias >= 5 / Antes eran 14 dias / Ahora son 30 */
                            presentaAviso = true;
                            mensajeAviso = String.format(getResources().getString(R.string.msj_aviso_fecha_cierre_seguimiento), dias);
                        } else {
                            InfoSessionWSDTO usuario = ((CssfvApp) getApplication()).getInfoSessionWSDTO();
                            if (usuario != null) {
                                /*
                                DRA. Gaytan = 7
                                DR. Plazahola = 4
                                DR. Sanchez = 20
                                DR. Ojega = 21
                                Doña Zoila = 16
                                * */
                                if (usuario.getUserId() != 7 && usuario.getUserId() != 4 && usuario.getUserId() != 20
                                    && usuario.getUserId() != 21 && usuario.getUserId() != 16) {
                                    this.findViewById(R.id.btnCerrarSeguimiento).setEnabled(false);
                                }
                            }
                        }
                    } catch (ParseException e) {
                        e.printStackTrace();
                        MensajesHelper.mostrarMensajeError(CONTEXT,
                                getResources().getString(R.string.msj_error_no_controlado), getResources().getString(R.string.app_name), null);
                    }
                }
            }

            if (presentaAviso) {
                MensajesHelper.mostrarMensajeInfo(CONTEXT, mensajeAviso, getResources().getString(R.string.app_name), null);
            }
        }

        ViewPager viewPager = (ViewPager) this.findViewById(R.id.vpDias);
        viewPager.setOffscreenPageLimit(2);
        viewPager.setAdapter(PlaceholderFragment.mPagerAdapter);

        viewPager.setVisibility(View.VISIBLE);
    }

    public void actualizarObjetos() {
        if (!nuevaListaSegInfluenza.isEmpty()) {
            for (SeguimientoInfluenzaDTO seguimientoInfluenza : nuevaListaSegInfluenza) {
                if (!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFechaSeguimiento())) {
                    if ((seguimientoInfluenza.getUsuarioMedico() > 0) &&
                            !StringUtils.isNullOrEmpty(seguimientoInfluenza.getFaltaEscuela()) &&
                            !StringUtils.isNullOrEmpty(seguimientoInfluenza.getQuedoEnCama()) &&
                            !StringUtils.isNullOrEmpty(String.valueOf(seguimientoInfluenza.getCongestionNasa())) &&
                            !StringUtils.isNullOrEmpty(String.valueOf(seguimientoInfluenza.getConsultaInicial())) &&
                            !StringUtils.isNullOrEmpty(String.valueOf(seguimientoInfluenza.getDificultadRespirar())) &&
                            !StringUtils.isNullOrEmpty(String.valueOf(seguimientoInfluenza.getDolorArticular())) &&
                            !StringUtils.isNullOrEmpty(String.valueOf(seguimientoInfluenza.getDolorCabeza())) &&
                            !StringUtils.isNullOrEmpty(String.valueOf(seguimientoInfluenza.getDolorGarganta())) &&
                            !StringUtils.isNullOrEmpty(String.valueOf(seguimientoInfluenza.getDolorMuscular())) &&
                            !StringUtils.isNullOrEmpty(String.valueOf(seguimientoInfluenza.getDolorOido())) &&
                            !StringUtils.isNullOrEmpty(String.valueOf(seguimientoInfluenza.getFaltaApetito())) &&
                            !StringUtils.isNullOrEmpty(String.valueOf(seguimientoInfluenza.getFiebre())) &&
                            !StringUtils.isNullOrEmpty(String.valueOf(seguimientoInfluenza.getRespiracionRapida())) &&
                            !StringUtils.isNullOrEmpty(String.valueOf(seguimientoInfluenza.getSecrecionNasal())) &&
                            !StringUtils.isNullOrEmpty(String.valueOf(seguimientoInfluenza.getTos())) &&
                            /********/
                            !StringUtils.isNullOrEmpty(String.valueOf(seguimientoInfluenza.getCuadroConfusional())) &&
                            !StringUtils.isNullOrEmpty(String.valueOf(seguimientoInfluenza.getCuadroNeurologico())) &&
                            !StringUtils.isNullOrEmpty(String.valueOf(seguimientoInfluenza.getConfusionMental())) &&
                            !StringUtils.isNullOrEmpty(String.valueOf(seguimientoInfluenza.getAnosmia())) &&
                            !StringUtils.isNullOrEmpty(String.valueOf(seguimientoInfluenza.getAgeusia())) &&
                            !StringUtils.isNullOrEmpty(String.valueOf(seguimientoInfluenza.getMareo())) &&
                            !StringUtils.isNullOrEmpty(String.valueOf(seguimientoInfluenza.getIctus())) &&
                            !StringUtils.isNullOrEmpty(String.valueOf(seguimientoInfluenza.getSincope()))) {
                        listaSegInfluenza.add(seguimientoInfluenza);
                    }
                }
            }
            if (!listaSegInfluenza.isEmpty()) {
                PlaceholderFragment.mPagerAdapter.notifyDataSetChanged();
                existeDetalle = true;
            }
        }
    }

    /***
     * Metodo que limpia los datos que se encuentra en cargado en la UI.
     */
    public void limpiarControles() {
        ProgressDialog pd = new ProgressDialog(this);
        pd.setTitle(getResources().getString(R.string.title_limpiando));
        pd.setMessage(getResources().getString(R.string.msj_espere_por_favor));
        pd.setCancelable(false);
        pd.setIndeterminate(true);
        pd.show();
        this.mCodExp = 0;
        this.mNumSeg = 0;
        //this.posicionMedico = 0;
        this.findViewById(R.id.ibtCrearHoja).setEnabled(true);
        this.findViewById(R.id.ibtBuscarExp).setEnabled(true);
        this.findViewById(R.id.edtxtNumSeguimiento).setEnabled(true);

        ((EditText) this.findViewById(R.id.edtxtNombreApellido)).setText("");

        ((EditText) this.findViewById(R.id.edtxtEstudioPacienteSeguimiento)).setText("");

        ((EditText) this.findViewById(R.id.edtxtCodExpediente)).setText("");

        ((EditText) this.findViewById(R.id.edtxtNumSeguimiento)).setText("");

        ((EditText) this.findViewById(R.id.edtxtFIS)).setText("");

        ((EditText) this.findViewById(R.id.edtxtFIF)).setText("");

        this.findViewById(R.id.ibtImprimir).setEnabled(false);
        this.findViewById(R.id.btnGuardar).setEnabled(false);
        this.findViewById(R.id.btnCerrarSeguimiento).setEnabled(false);

        listaSegInfluenza = new ArrayList<>();
        nuevaListaSegInfluenza = new ArrayList<>();
        esCargaInicial = true;
        ViewPager viewPager = (ViewPager) this.findViewById(R.id.vpDias);
        viewPager.setOffscreenPageLimit(2);
        viewPager.setAdapter(new PagerAdapter() {
            @Override
            public int getCount() {
                return 0;
            }

            @Override
            public boolean isViewFromObject(View view, Object o) {
                return false;
            }
        });
        viewPager.setVisibility(View.INVISIBLE);
        PlaceholderFragment.llamadoListaInicialMedicoServicio();

        pd.dismiss();
    }

    /**
     * A placeholder fragment containing a simple view.
     */
    public static class PlaceholderFragment extends Fragment {
        /**
         * The fragment argument representing the section number for this
         * fragment.
         */
        private static final String ARG_SECTION_NUMBER = "section_number";

        public byte[] RESPUESTA = null;

        public static SegumientoPagerAdapter mPagerAdapter;

        /**
         * Returns a new instance of this fragment for the given section
         * number.
         */
        public static PlaceholderFragment newInstance(int sectionNumber) {
            PlaceholderFragment fragment = new PlaceholderFragment();
            Bundle args = new Bundle();
            args.putInt(ARG_SECTION_NUMBER, sectionNumber);
            fragment.setArguments(args);
            return fragment;
        }

        public PlaceholderFragment() {
        }

        @Override
        public View onCreateView(LayoutInflater inflater, ViewGroup container,
                                 Bundle savedInstanceState) {
            View seguiminetoLayout = inflater.inflate(R.layout.seguimiento_influenza_layout, container, false);

            mPagerAdapter = new SegumientoPagerAdapter(getChildFragmentManager());

            if (savedInstanceState != null) {

                mSeguimientoInfluenzaActivity.mCodExp = savedInstanceState.getInt("codExp");
                mSeguimientoInfluenzaActivity.mNumSeg = savedInstanceState.getInt("NumSeg");

                mSeguimientoInfluenzaActivity.mNombrePaciente = savedInstanceState.getString("nombreApellido");
                mSeguimientoInfluenzaActivity.mEstudio = savedInstanceState.getString("estudios");
                mSeguimientoInfluenzaActivity.mFis = savedInstanceState.getString("fis");
                mSeguimientoInfluenzaActivity.mFif = savedInstanceState.getString("fif");

                mSeguimientoInfluenzaActivity.listaSegInfluenza = (ArrayList<SeguimientoInfluenzaDTO>) savedInstanceState.getSerializable("listaSeguimiento");
                mSeguimientoInfluenzaActivity.nuevaListaSegInfluenza = (ArrayList<SeguimientoInfluenzaDTO>) savedInstanceState.getSerializable("nuevaListaSeguimiento");
            }
            if (mSeguimientoInfluenzaActivity.mNumSeg > 0 && mSeguimientoInfluenzaActivity.mCodExp > 0) {
                ViewPager viewPager = (ViewPager) seguiminetoLayout.findViewById(R.id.vpDias);
                viewPager.setOffscreenPageLimit(2);
                viewPager.setAdapter(mPagerAdapter);
            } else {
                ViewPager viewPager = (ViewPager) seguiminetoLayout.findViewById(R.id.vpDias);
                viewPager.setVisibility(View.INVISIBLE);
            }
            inicializarControlFif(seguiminetoLayout);
            return seguiminetoLayout;
        }

        @Override
        public void onSaveInstanceState(Bundle outState) {
            super.onSaveInstanceState(outState);
            outState.putInt("codExp", mSeguimientoInfluenzaActivity.mCodExp);
            outState.putInt("NumSeg", mSeguimientoInfluenzaActivity.mNumSeg);
            outState.putString("nombreApellido", ((EditText) getActivity().findViewById(R.id.edtxtNombreApellido)).getText().toString());
            outState.putString("estudios", ((EditText) getActivity().findViewById(R.id.edtxtEstudioPacienteSeguimiento)).getText().toString());
            outState.putString("fis", ((EditText) getActivity().findViewById(R.id.edtxtFIS)).getText().toString());
            outState.putString("fif", ((EditText) getActivity().findViewById(R.id.edtxtFIF)).getText().toString());
            outState.putSerializable("listaSeguimiento", mSeguimientoInfluenzaActivity.listaSegInfluenza);
            outState.putSerializable("nuevaListaSeguimiento", mSeguimientoInfluenzaActivity.nuevaListaSegInfluenza);
        }

        @Override
        public void onActivityCreated(Bundle savedInstanceState) {
            super.onActivityCreated(savedInstanceState);

            //--------------------------------------------------------------------------------------

            /*if(mSeguimientoInfluenzaActivity.mNumSeg > 0 && mSeguimientoInfluenzaActivity.mCodExp > 0) {
                ViewPager viewPager = (ViewPager) mSeguimientoInfluenzaActivity.findViewById(R.id.vpDias);
                viewPager.setVisibility(View.INVISIBLE);

            } else {
                ViewPager viewPager = (ViewPager) mSeguimientoInfluenzaActivity.findViewById(R.id.vpDias);
                viewPager.setOffscreenPageLimit(2);
                viewPager.setAdapter(mPagerAdapter);
                mSeguimientoInfluenzaActivity.listaSegInfluenza = (ArrayList<SeguimientoInfluenzaDTO>) savedInstanceState.getSerializable("listaSeguimiento");
                mSeguimientoInfluenzaActivity.nuevaListaSegInfluenza = (ArrayList<SeguimientoInfluenzaDTO>) savedInstanceState.getSerializable("nuevaListaSeguimiento");
                esCargaInicial = true;
            }*/
            //--------------------------------------------------------------------------------------

            //cargando los spinner con todos los médicos
            esCargaInicial = true;
            llamadoListaInicialMedicoServicio();

            getActivity().findViewById(R.id.edtxtNombreApellido).setEnabled(false);

            getActivity().findViewById(R.id.btnGuardar).setEnabled(false);

            getActivity().findViewById(R.id.ibtImprimir).setEnabled(false);

            getActivity().findViewById(R.id.btnCerrarSeguimiento).setEnabled(false);

            this.establecerMetodosBotones();
        }

        @Override
        public void onAttach(Activity activity) {
            super.onAttach(activity);
        }

        @Override
        public void onStart() {
            super.onStart();

            if (mSeguimientoInfluenzaActivity.mNombrePaciente != null && mSeguimientoInfluenzaActivity.mEstudio != null &&
                    mSeguimientoInfluenzaActivity.mFif != null && mSeguimientoInfluenzaActivity.mFif != null
                    && mSeguimientoInfluenzaActivity.mCodExp > 0 && mSeguimientoInfluenzaActivity.mNumSeg > 0) {
                ((EditText) getActivity().findViewById(R.id.edtxtCodExpediente)).setText(String.valueOf(mSeguimientoInfluenzaActivity.mCodExp));
                ((EditText) getActivity().findViewById(R.id.edtxtNumSeguimiento)).setText(String.valueOf(mSeguimientoInfluenzaActivity.mNumSeg));
                ((EditText) getActivity().findViewById(R.id.edtxtNombreApellido)).setText(mSeguimientoInfluenzaActivity.mNombrePaciente);
                ((EditText) getActivity().findViewById(R.id.edtxtEstudioPacienteSeguimiento)).setText(mSeguimientoInfluenzaActivity.mEstudio);
                ((EditText) getActivity().findViewById(R.id.edtxtFIS)).setText(mSeguimientoInfluenzaActivity.mFis);
                ((EditText) getActivity().findViewById(R.id.edtxtFIF)).setText(mSeguimientoInfluenzaActivity.mFif);
            }
        }

        /*
         * Metodo para inicializar el ingreso de la fecha FIF
         * */
        public void inicializarControlFif(View rootView) {
            rootView.findViewById(R.id.edtxtFIF).setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View view) {
                    showDatePickerDialogFIF(view);
                }
            });
        }

        /*Ingreso fif*/
        public void showDatePickerDialogFIF(View view) {
            DialogFragment newFragment = new DatePickerFragment() {
                @Override
                public void onDateSet(DatePicker view, int year, int monthOfYear, int dayOfMonth) {
                    Calendar calendar = Calendar.getInstance();
                    calendar.set(year, monthOfYear, dayOfMonth);
                    ((EditText) getActivity().findViewById(R.id.edtxtFIF)).setError(null);
                    //((EditText) getActivity().findViewById(R.id.edtxtFIF)).setText(null);
                    if (DateUtils.esMayorFechaHoy(calendar)) {
                        ((EditText) getActivity().findViewById(R.id.edtxtFIF)).setError(getString(R.string.msj_fecha_fif_mayor_hoy));
                    }
                    ((EditText) getActivity().findViewById(R.id.edtxtFIF)).setText(new SimpleDateFormat("dd/MM/yyyy").format(calendar.getTime()));
                }
            };
            newFragment.show(getActivity().getSupportFragmentManager(), getString(R.string.title_date_picker));
        }

        /***
         * Establece los metodos que seran ejecutados en los eventos onClick.
         */
        protected void establecerMetodosBotones() {
            Button btnCrearHoja = (Button) getActivity().findViewById(R.id.ibtCrearHoja);
            btnCrearHoja.setOnClickListener(new View.OnClickListener() {

                @Override
                public void onClick(View view) {
                    existeDetalle = false;
                    onCrearHoja();
                }
            });

            Button btnBuscarExp = (Button) getActivity().findViewById(R.id.ibtBuscarExp);
            btnBuscarExp.setOnClickListener(new View.OnClickListener() {

                @Override
                public void onClick(View view) {
                    existeDetalle = false;
                    buscarPacienteLupaServicio();
                }
            });

            Button btnGuardar = (Button) getActivity().findViewById(R.id.btnGuardar);
            btnGuardar.setOnClickListener(new View.OnClickListener() {

                @Override
                public void onClick(View view) {
                    DialogInterface.OnClickListener preguntaGuardarDialogClickListener = new DialogInterface.OnClickListener() {
                        @Override
                        public void onClick(DialogInterface dialog, int which) {
                            switch (which) {
                                case DialogInterface.BUTTON_POSITIVE:
                                    guardarHojaInfluenza();
                                    break;
                                case DialogInterface.BUTTON_NEGATIVE:
                                    //No button clicked
                                    break;
                            }
                        }
                    };
                    MensajesHelper.mostrarMensajeYesNo(getActivity(), getResources().getString(
                            R.string.msj_aviso_guardar_hoja_influenza), getResources().getString(
                            R.string.title_estudio_sostenible), preguntaGuardarDialogClickListener);
                }
            });


            ImageButton btnImprimir = (ImageButton) getActivity().findViewById(R.id.ibtImprimir);
            btnImprimir.setOnClickListener(new View.OnClickListener() {

                @Override
                public void onClick(View view) {
                    if (existeDetalle) {
                        //ImprimirHojaSeguimientoaPdf();
                        showAlertDialogInfluenza();
                    } else {
                        MensajesHelper.mostrarMensajeInfo(getActivity(),
                                getResources().getString(R.string.msj_sin_detalle_seg_influenza),
                                getResources().getString(R.string.app_name), null);
                    }
                }
            });

            //botón para presentar el pdf de la hoja de influenza
            //Quitar Comentario MartinMoreno
            ImageButton ibtSeguimientoPDF = (ImageButton) getActivity().findViewById(R.id.ibtSeguimientoPDF);
            ibtSeguimientoPDF.setOnClickListener(new View.OnClickListener() {

                @Override
                public void onClick(View view) {
                    if (existeDetalle) {
                        obtenerSeguimientoInflunzaPdf();
                    } else {
                        MensajesHelper.mostrarMensajeInfo(getActivity(),
                                getResources().getString(R.string.msj_sin_detalle_seg_influenza),
                                getResources().getString(R.string.app_name), null);
                    }
                }
            });

            Button btnCerrarSeg = (Button) getActivity().findViewById(R.id.btnCerrarSeguimiento);
            btnCerrarSeg.setOnClickListener(new View.OnClickListener() {

                @Override
                public void onClick(View view) {

                    //pregunta si quiere realizar cierre
                    DialogInterface.OnClickListener realizarCierreDialogClickListener = new DialogInterface.OnClickListener() {
                        @Override
                        public void onClick(DialogInterface dialog, int which) {
                            switch (which) {
                                case DialogInterface.BUTTON_POSITIVE:
                                    cerrarHojaInfluenza();

                                    break;
                                case DialogInterface.BUTTON_NEGATIVE:
                                    //No button clicked
                                    break;
                            }
                        }
                    };
                    MensajesHelper.mostrarMensajeYesNo(CONTEXT,
                            getResources().getString(
                                    R.string.msj_cierre_seguimiento_influenza), getResources().getString(
                                    R.string.title_estudio_sostenible), realizarCierreDialogClickListener);
                }
            });

            Button btnLimpiarSeguimiento = (Button) getActivity().findViewById(R.id.btnlimpiarSeguimiento);
            btnLimpiarSeguimiento.setOnClickListener(new View.OnClickListener() {

                @Override
                public void onClick(View view) {
                    /*existeDetalle = false;
                    mPagerAdapter = new SegumientoPagerAdapter(getChildFragmentManager());
                    ViewPager viewPager = (ViewPager) getActivity().findViewById(R.id.vpDias);
                    mSeguimientoInfluenzaActivity.limpiarControles();
                    mPagerAdapter.notifyDataSetChanged();
                    viewPager.setVisibility(View.INVISIBLE);*/
                    Intent intent = new Intent();
                    intent.setAction("com.sts_ni.estudiocohortecssfv.seguimiento_influenza_action");
                    startActivity(intent);
                    getActivity().finish();
                }
            });
        }

        /***
         * Metodo para llamar el servicio que crea Hoja de seguimiento.
         */
        private void onCrearHoja() {
            if (StringUtils.isNullOrEmpty(((EditText) getActivity().findViewById(R.id.edtxtCodExpediente)).getText().toString())) {
                MensajesHelper.mostrarMensajeError(getActivity(), getResources().getString(R.string.msj_ingresar_codigo_paciente),
                        getResources().getString(R.string.title_estudio_sostenible), null);
                return;
            }
            getActivity().findViewById(R.id.edtxtNumSeguimiento).setEnabled(false);
            if (mSeguimientoInfluenzaActivity.mBuscarSeguimientoTask == null ||
                    mSeguimientoInfluenzaActivity.mBuscarSeguimientoTask.getStatus() == BuscarSeguimientoTask.Status.FINISHED) {
                mSeguimientoInfluenzaActivity.mBuscarSeguimientoTask = (BuscarSeguimientoTask) new
                        BuscarSeguimientoTask(mSeguimientoInfluenzaActivity).execute("0", ((EditText) getActivity().
                        findViewById(R.id.edtxtCodExpediente)).getText().toString());
            }
        }

        /***
         * Metodo para llamar el servicio que realiza la busqueda por codigo expediente o numero de seguimiento.
         */
        private void buscarPacienteLupaServicio() {
            if (!StringUtils.isNullOrEmpty(((EditText) getActivity().findViewById(R.id.edtxtCodExpediente)).getText().toString())) {

                if (mSeguimientoInfluenzaActivity.mBuscarSeguimientoTask == null ||
                        mSeguimientoInfluenzaActivity.mBuscarSeguimientoTask.getStatus() == BuscarSeguimientoTask.Status.FINISHED) {
                    mSeguimientoInfluenzaActivity.mBuscarSeguimientoTask = (BuscarSeguimientoTask) new
                            BuscarSeguimientoTask(mSeguimientoInfluenzaActivity).execute("1", ((EditText) getActivity().
                            findViewById(R.id.edtxtCodExpediente)).getText().toString());
                }

            } else if (!StringUtils.isNullOrEmpty(((EditText) getActivity().findViewById(R.id.edtxtNumSeguimiento)).getText().toString())) {

                if (mSeguimientoInfluenzaActivity.mBuscarSeguimientoTask == null ||
                        mSeguimientoInfluenzaActivity.mBuscarSeguimientoTask.getStatus() == BuscarSeguimientoTask.Status.FINISHED) {
                    mSeguimientoInfluenzaActivity.mBuscarSeguimientoTask = (BuscarSeguimientoTask) new
                            BuscarSeguimientoTask(mSeguimientoInfluenzaActivity).execute("2", ((EditText) getActivity().
                            findViewById(R.id.edtxtNumSeguimiento)).getText().toString());
                }
            } else {
                MensajesHelper.mostrarMensajeError(getActivity(), getResources().getString(R.string.msj_param_seguimiento_invalido),
                        getResources().getString(R.string.title_estudio_sostenible), null);
            }
        }

        /***
         * Metodo que llama servicio para guardar desde la pantalla seguimiento de influenza
         */
        private void guardarHojaInfluenza() {

            if (mSeguimientoInfluenzaActivity.mCodExp > 0 || mSeguimientoInfluenzaActivity.mNumSeg > 0) {
                if (mSeguimientoInfluenzaActivity.mGuardarSeguimientoTask == null ||
                        mSeguimientoInfluenzaActivity.mGuardarSeguimientoTask.getStatus() == GuardarSeguimientoTask.Status.FINISHED) {

                    /*Verificamos que la FIF no sea vacia o null y isEmptyFIF = true*/
                    if (!StringUtils.isNullOrEmpty(((EditText) getActivity().findViewById(R.id.edtxtFIF)).getText().toString())
                            && isEmptyFIF) {

                        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                        try {
                            ((EditText) getActivity().findViewById(R.id.edtxtFIF)).setError(null);
                            Calendar fif = Calendar.getInstance();
                            Calendar currentDate = Calendar.getInstance();
                            fif.setTime(sdf.parse(((EditText) getActivity().findViewById(R.id.edtxtFIF)).getText().toString()));
                            Date dateFIS = sdf.parse(((EditText) getActivity().findViewById(R.id.edtxtFIS)).getText().toString());
                            Date dateFIF = sdf.parse(((EditText) getActivity().findViewById(R.id.edtxtFIF)).getText().toString());
                            /*Si la FIF es menor que la FIS retornamos y enviamos mensaje*/
                            if (dateFIF.compareTo(dateFIS) < 0) {
                                ((EditText) getActivity().findViewById(R.id.edtxtFIF)).setError(getString(R.string.msj_fif_menor_que_fis));
                                return;
                            }
                            /*Si la FIF es mayor a la fecha actual retornamos y enviamos mensaje*/
                            if (fif.after(currentDate)) {
                                ((EditText) getActivity().findViewById(R.id.edtxtFIF)).setError(getString(R.string.msj_fecha_fif_mayor_hoy));
                                return;
                            }
                            isEmptyFIF = false;
                        } catch (ParseException e) {
                            e.printStackTrace();
                        }
                    }

                    HojaInfluenzaDTO hojaInfluenza = new HojaInfluenzaDTO();

                    hojaInfluenza.setCodExpediente(mSeguimientoInfluenzaActivity.mCodExp);
                    hojaInfluenza.setNumHojaSeguimiento(mSeguimientoInfluenzaActivity.mNumSeg);
                    hojaInfluenza.setFif(((EditText) getActivity().findViewById(R.id.edtxtFIF)).getText().toString());
                    hojaInfluenza.setFis(((EditText) getActivity().findViewById(R.id.edtxtFIS)).getText().toString());

                    hojaInfluenza.setCerrado('N');

                    getActivity().findViewById(R.id.edtxtFIF).setEnabled(false);
                    ArrayList<SeguimientoInfluenzaDTO> lstSeg = new ArrayList<>();

                    for (SeguimientoInfluenzaDTO seguimientoInfluenza : mSeguimientoInfluenzaActivity.nuevaListaSegInfluenza) {
                        if (!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFechaSeguimiento())) {
                            if ((seguimientoInfluenza.getUsuarioMedico() > 0) &&
                                    !StringUtils.isNullOrEmpty(seguimientoInfluenza.getFaltaEscuela()) &&
                                    !StringUtils.isNullOrEmpty(seguimientoInfluenza.getQuedoEnCama()) &&
                                    !StringUtils.isNullOrEmpty(String.valueOf(seguimientoInfluenza.getCongestionNasa())) &&
                                    !StringUtils.isNullOrEmpty(String.valueOf(seguimientoInfluenza.getConsultaInicial())) &&
                                    !StringUtils.isNullOrEmpty(String.valueOf(seguimientoInfluenza.getDificultadRespirar())) &&
                                    !StringUtils.isNullOrEmpty(String.valueOf(seguimientoInfluenza.getDolorArticular())) &&
                                    !StringUtils.isNullOrEmpty(String.valueOf(seguimientoInfluenza.getDolorCabeza())) &&
                                    !StringUtils.isNullOrEmpty(String.valueOf(seguimientoInfluenza.getDolorGarganta())) &&
                                    !StringUtils.isNullOrEmpty(String.valueOf(seguimientoInfluenza.getDolorMuscular())) &&
                                    !StringUtils.isNullOrEmpty(String.valueOf(seguimientoInfluenza.getDolorOido())) &&
                                    !StringUtils.isNullOrEmpty(String.valueOf(seguimientoInfluenza.getFaltaApetito())) &&
                                    !StringUtils.isNullOrEmpty(String.valueOf(seguimientoInfluenza.getFiebre())) &&
                                    !StringUtils.isNullOrEmpty(String.valueOf(seguimientoInfluenza.getRespiracionRapida())) &&
                                    !StringUtils.isNullOrEmpty(String.valueOf(seguimientoInfluenza.getSecrecionNasal())) &&
                                    !StringUtils.isNullOrEmpty(String.valueOf(seguimientoInfluenza.getTos())) &&
                                    /************/
                                    !StringUtils.isNullOrEmpty(String.valueOf(seguimientoInfluenza.getCuadroConfusional())) &&
                                    !StringUtils.isNullOrEmpty(String.valueOf(seguimientoInfluenza.getCuadroNeurologico())) &&
                                    !StringUtils.isNullOrEmpty(String.valueOf(seguimientoInfluenza.getConfusionMental())) &&
                                    !StringUtils.isNullOrEmpty(String.valueOf(seguimientoInfluenza.getAnosmia())) &&
                                    !StringUtils.isNullOrEmpty(String.valueOf(seguimientoInfluenza.getAgeusia())) &&
                                    !StringUtils.isNullOrEmpty(String.valueOf(seguimientoInfluenza.getMareo())) &&
                                    !StringUtils.isNullOrEmpty(String.valueOf(seguimientoInfluenza.getIctus())) &&
                                    !StringUtils.isNullOrEmpty(String.valueOf(seguimientoInfluenza.getSincope()))) {
                                lstSeg.add(seguimientoInfluenza);
                            } else {
                                MensajesHelper.mostrarMensajeInfo(getActivity(), String.format(
                                        getResources().getString(R.string.msj_aviso_requerido_dia_seguimiento),
                                        String.valueOf(seguimientoInfluenza.getControlDia())),
                                        getActivity().getResources().getString(R.string.title_estudio_sostenible), null);
                                return;
                            }
                        }
                    }

                    /*
                     * Si la lista es vacia nos indica que no hay ningun registro ingresado
                     **/
                    if (lstSeg.size() <= 0) {
                        return;
                    }

                    /*
                     * Verificamos que todos los sintamos hayan sido llenados y sean distintos a seleccione
                     **/
                    for (SeguimientoInfluenzaDTO seg : lstSeg) {
                        if (seg.getSecHojaInfluenza() <= 0) {
                            int usuarioLogeado = ((CssfvApp) getActivity().getApplication()).getInfoSessionWSDTO().getUserId();
                            if (usuarioLogeado != seg.getUsuarioMedico()) {
                                MensajesHelper.mostrarMensajeInfo(getActivity(), String.format(
                                        getResources().getString(R.string.msj_usuario_logueado_diferente_a_usuario_medico),
                                        String.valueOf(seg.getControlDia())),
                                        getActivity().getResources().getString(R.string.title_estudio_sostenible), null);
                                return;
                            }
                            if ((seg.getConsultaInicial() == null || seg.getConsultaInicial().trim().equals("Seleccione")) ||
                                    (seg.getFiebre() == null || seg.getFiebre().trim().equals("Seleccione")) ||
                                    (seg.getFiebre() == null || seg.getFiebre().trim().equals("Seleccione")) ||
                                    (seg.getTos() == null || seg.getTos().trim().equals("Seleccione")) ||
                                    (seg.getSecrecionNasal() == null || seg.getSecrecionNasal().trim().equals("Seleccione")) ||
                                    (seg.getDolorGarganta() == null || seg.getDolorGarganta().trim().equals("Seleccione")) ||
                                    (seg.getCongestionNasa() == null || seg.getCongestionNasa().trim().equals("Seleccione")) ||
                                    (seg.getDolorCabeza() == null || seg.getDolorCabeza().trim().equals("Seleccione")) ||
                                    (seg.getFaltaApetito() == null || seg.getFaltaApetito().trim().equals("Seleccione")) ||
                                    (seg.getDolorMuscular() == null || seg.getDolorMuscular().trim().equals("Seleccione")) ||
                                    (seg.getDolorArticular() == null || seg.getDolorArticular().trim().equals("Seleccione")) ||
                                    (seg.getDolorOido() == null || seg.getDolorOido().trim().equals("Seleccione")) ||
                                    (seg.getRespiracionRapida() == null || seg.getRespiracionRapida().trim().equals("Seleccione")) ||
                                    (seg.getFaltaEscuela() == null || seg.getFaltaEscuela().trim().equals("Seleccione")) ||
                                    (seg.getQuedoEnCama() == null || seg.getQuedoEnCama().trim().equals("Seleccione")) ||
                                    /*******/
                                    (seg.getCuadroConfusional() == null || seg.getCuadroConfusional().trim().equals("Seleccione")) ||
                                    (seg.getCuadroNeurologico() == null || seg.getCuadroNeurologico().trim().equals("Seleccione")) ||
                                    (seg.getConfusionMental() == null || seg.getConfusionMental().trim().equals("Seleccione")) ||
                                    (seg.getAnosmia() == null || seg.getAnosmia().trim().equals("Seleccione")) ||
                                    (seg.getAgeusia() == null || seg.getAgeusia().trim().equals("Seleccione")) ||
                                    (seg.getMareo() == null || seg.getMareo().trim().equals("Seleccione")) ||
                                    (seg.getIctus() == null || seg.getIctus().trim().equals("Seleccione")) ||
                                    (seg.getSincope() == null || seg.getSincope().trim().equals("Seleccione"))) {
                                MensajesHelper.mostrarMensajeInfo(getActivity(), String.format(
                                        getResources().getString(R.string.msj_aviso_requerido_dia_seguimiento),
                                        String.valueOf(seg.getControlDia())),
                                        getActivity().getResources().getString(R.string.title_estudio_sostenible), null);
                                return;
                            }
                        }
                    }

                    boolean resultIntesidad = verificarIntensidadSintomas(lstSeg);

                    if (verificarDiasContinuos(lstSeg) && resultIntesidad) {
                        hojaInfluenza.setLstSeguimientoInfluenza(lstSeg);
                        mSeguimientoInfluenzaActivity.mGuardarSeguimientoTask = (GuardarSeguimientoTask) new
                                GuardarSeguimientoTask(mSeguimientoInfluenzaActivity).execute(hojaInfluenza);
                    }
                }
            }
        }

        /**
         * Metodo para verificar que se marque la intesidad de los sintomas cuando este presente(Fiebre,
         * Tos, Secrecion Nasal, Dolor de Garganta, Dolor de Cabeza, Dolor Muscular ó Dolor Articular)
         */
        public boolean verificarIntensidadSintomas(ArrayList<SeguimientoInfluenzaDTO> lstSeg) {
            SeguimientoInfluenzaDTO seguimientoInfluenzaByDias = new SeguimientoInfluenzaDTO();
            for (int i = 0; i < lstSeg.size(); i++) {
                seguimientoInfluenzaByDias = lstSeg.get(i);
                if (seguimientoInfluenzaByDias.getControlDia() == 1) {
                    //Fiebre
                    if (seguimientoInfluenzaByDias.getFiebre().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getFiebreLeve() == null
                                && seguimientoInfluenzaByDias.getFiebreModerada() == null
                                && seguimientoInfluenzaByDias.getFiebreSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_fiebre) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Tos
                    if (seguimientoInfluenzaByDias.getTos().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getTosLeve() == null
                                && seguimientoInfluenzaByDias.getTosModerada() == null
                                && seguimientoInfluenzaByDias.getTosSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_tos) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Secrecion Nasal
                    if (seguimientoInfluenzaByDias.getSecrecionNasal().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getSecrecionNasalLeve() == null
                                && seguimientoInfluenzaByDias.getSecrecionNasalModerada() == null
                                && seguimientoInfluenzaByDias.getSecrecionNasalSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_secrecion_nasal) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Garganta
                    if (seguimientoInfluenzaByDias.getDolorGarganta().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorGargantaLeve() == null
                                && seguimientoInfluenzaByDias.getDolorGargantaModerada() == null
                                && seguimientoInfluenzaByDias.getDolorGargantaSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_garganta) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Cabeza
                    if (seguimientoInfluenzaByDias.getDolorCabeza().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorCabezaLeve() == null
                                && seguimientoInfluenzaByDias.getDolorCabezaModerada() == null
                                && seguimientoInfluenzaByDias.getDolorCabezaSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_cabeza) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Muscular
                    if (seguimientoInfluenzaByDias.getDolorMuscular().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorMuscularLeve() == null
                                && seguimientoInfluenzaByDias.getDolorMuscularModerada() == null
                                && seguimientoInfluenzaByDias.getDolorMuscularSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_muscular) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Articular
                    if (seguimientoInfluenzaByDias.getDolorArticular().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorArticularLeve() == null
                                && seguimientoInfluenzaByDias.getDolorArticularModerada() == null
                                && seguimientoInfluenzaByDias.getDolorArticularSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_articular) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                }
                if (seguimientoInfluenzaByDias.getControlDia() == 2) {
                    //Fiebre
                    if (seguimientoInfluenzaByDias.getFiebre().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getFiebreLeve() == null
                                && seguimientoInfluenzaByDias.getFiebreModerada() == null
                                && seguimientoInfluenzaByDias.getFiebreSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_fiebre) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Tos
                    if (seguimientoInfluenzaByDias.getTos().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getTosLeve() == null
                                && seguimientoInfluenzaByDias.getTosModerada() == null
                                && seguimientoInfluenzaByDias.getTosSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_tos) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Secrecion Nasal
                    if (seguimientoInfluenzaByDias.getSecrecionNasal().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getSecrecionNasalLeve() == null
                                && seguimientoInfluenzaByDias.getSecrecionNasalModerada() == null
                                && seguimientoInfluenzaByDias.getSecrecionNasalSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_secrecion_nasal) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Garganta
                    if (seguimientoInfluenzaByDias.getDolorGarganta().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorGargantaLeve() == null
                                && seguimientoInfluenzaByDias.getDolorGargantaModerada() == null
                                && seguimientoInfluenzaByDias.getDolorGargantaSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_garganta) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Cabeza
                    if (seguimientoInfluenzaByDias.getDolorCabeza().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorCabezaLeve() == null
                                && seguimientoInfluenzaByDias.getDolorCabezaModerada() == null
                                && seguimientoInfluenzaByDias.getDolorCabezaSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_cabeza) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Muscular
                    if (seguimientoInfluenzaByDias.getDolorMuscular().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorMuscularLeve() == null
                                && seguimientoInfluenzaByDias.getDolorMuscularModerada() == null
                                && seguimientoInfluenzaByDias.getDolorMuscularSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_muscular) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Articular
                    if (seguimientoInfluenzaByDias.getDolorArticular().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorArticularLeve() == null
                                && seguimientoInfluenzaByDias.getDolorArticularModerada() == null
                                && seguimientoInfluenzaByDias.getDolorArticularSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_articular) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                }
                if (seguimientoInfluenzaByDias.getControlDia() == 3) {
                    //Fiebre
                    if (seguimientoInfluenzaByDias.getFiebre().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getFiebreLeve() == null
                                && seguimientoInfluenzaByDias.getFiebreModerada() == null
                                && seguimientoInfluenzaByDias.getFiebreSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_fiebre) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Tos
                    if (seguimientoInfluenzaByDias.getTos().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getTosLeve() == null
                                && seguimientoInfluenzaByDias.getTosModerada() == null
                                && seguimientoInfluenzaByDias.getTosSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_tos) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Secrecion Nasal
                    if (seguimientoInfluenzaByDias.getSecrecionNasal().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getSecrecionNasalLeve() == null
                                && seguimientoInfluenzaByDias.getSecrecionNasalModerada() == null
                                && seguimientoInfluenzaByDias.getSecrecionNasalSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_secrecion_nasal) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Garganta
                    if (seguimientoInfluenzaByDias.getDolorGarganta().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorGargantaLeve() == null
                                && seguimientoInfluenzaByDias.getDolorGargantaModerada() == null
                                && seguimientoInfluenzaByDias.getDolorGargantaSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_garganta) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Cabeza
                    if (seguimientoInfluenzaByDias.getDolorCabeza().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorCabezaLeve() == null
                                && seguimientoInfluenzaByDias.getDolorCabezaModerada() == null
                                && seguimientoInfluenzaByDias.getDolorCabezaSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_cabeza) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Muscular
                    if (seguimientoInfluenzaByDias.getDolorMuscular().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorMuscularLeve() == null
                                && seguimientoInfluenzaByDias.getDolorMuscularModerada() == null
                                && seguimientoInfluenzaByDias.getDolorMuscularSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_muscular) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Articular
                    if (seguimientoInfluenzaByDias.getDolorArticular().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorArticularLeve() == null
                                && seguimientoInfluenzaByDias.getDolorArticularModerada() == null
                                && seguimientoInfluenzaByDias.getDolorArticularSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_articular) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                }
                if (seguimientoInfluenzaByDias.getControlDia() == 4) {
                    //Fiebre
                    if (seguimientoInfluenzaByDias.getFiebre().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getFiebreLeve() == null
                                && seguimientoInfluenzaByDias.getFiebreModerada() == null
                                && seguimientoInfluenzaByDias.getFiebreSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_fiebre) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Tos
                    if (seguimientoInfluenzaByDias.getTos().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getTosLeve() == null
                                && seguimientoInfluenzaByDias.getTosModerada() == null
                                && seguimientoInfluenzaByDias.getTosSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_tos) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Secrecion Nasal
                    if (seguimientoInfluenzaByDias.getSecrecionNasal().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getSecrecionNasalLeve() == null
                                && seguimientoInfluenzaByDias.getSecrecionNasalModerada() == null
                                && seguimientoInfluenzaByDias.getSecrecionNasalSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_secrecion_nasal) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Garganta
                    if (seguimientoInfluenzaByDias.getDolorGarganta().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorGargantaLeve() == null
                                && seguimientoInfluenzaByDias.getDolorGargantaModerada() == null
                                && seguimientoInfluenzaByDias.getDolorGargantaSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_garganta) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Cabeza
                    if (seguimientoInfluenzaByDias.getDolorCabeza().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorCabezaLeve() == null
                                && seguimientoInfluenzaByDias.getDolorCabezaModerada() == null
                                && seguimientoInfluenzaByDias.getDolorCabezaSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_cabeza) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Muscular
                    if (seguimientoInfluenzaByDias.getDolorMuscular().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorMuscularLeve() == null
                                && seguimientoInfluenzaByDias.getDolorMuscularModerada() == null
                                && seguimientoInfluenzaByDias.getDolorMuscularSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_muscular) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Articular
                    if (seguimientoInfluenzaByDias.getDolorArticular().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorArticularLeve() == null
                                && seguimientoInfluenzaByDias.getDolorArticularModerada() == null
                                && seguimientoInfluenzaByDias.getDolorArticularSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_articular) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                }
                if (seguimientoInfluenzaByDias.getControlDia() == 5) {
                    //Fiebre
                    if (seguimientoInfluenzaByDias.getFiebre().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getFiebreLeve() == null
                                && seguimientoInfluenzaByDias.getFiebreModerada() == null
                                && seguimientoInfluenzaByDias.getFiebreSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_fiebre) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Tos
                    if (seguimientoInfluenzaByDias.getTos().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getTosLeve() == null
                                && seguimientoInfluenzaByDias.getTosModerada() == null
                                && seguimientoInfluenzaByDias.getTosSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_tos) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Secrecion Nasal
                    if (seguimientoInfluenzaByDias.getSecrecionNasal().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getSecrecionNasalLeve() == null
                                && seguimientoInfluenzaByDias.getSecrecionNasalModerada() == null
                                && seguimientoInfluenzaByDias.getSecrecionNasalSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_secrecion_nasal) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Garganta
                    if (seguimientoInfluenzaByDias.getDolorGarganta().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorGargantaLeve() == null
                                && seguimientoInfluenzaByDias.getDolorGargantaModerada() == null
                                && seguimientoInfluenzaByDias.getDolorGargantaSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_garganta) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Cabeza
                    if (seguimientoInfluenzaByDias.getDolorCabeza().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorCabezaLeve() == null
                                && seguimientoInfluenzaByDias.getDolorCabezaModerada() == null
                                && seguimientoInfluenzaByDias.getDolorCabezaSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_cabeza) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Muscular
                    if (seguimientoInfluenzaByDias.getDolorMuscular().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorMuscularLeve() == null
                                && seguimientoInfluenzaByDias.getDolorMuscularModerada() == null
                                && seguimientoInfluenzaByDias.getDolorMuscularSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_muscular) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Articular
                    if (seguimientoInfluenzaByDias.getDolorArticular().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorArticularLeve() == null
                                && seguimientoInfluenzaByDias.getDolorArticularModerada() == null
                                && seguimientoInfluenzaByDias.getDolorArticularSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_articular) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }

                }
                if (seguimientoInfluenzaByDias.getControlDia() == 6) {
                    //Fiebre
                    if (seguimientoInfluenzaByDias.getFiebre().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getFiebreLeve() == null
                                && seguimientoInfluenzaByDias.getFiebreModerada() == null
                                && seguimientoInfluenzaByDias.getFiebreSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_fiebre) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Tos
                    if (seguimientoInfluenzaByDias.getTos().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getTosLeve() == null
                                && seguimientoInfluenzaByDias.getTosModerada() == null
                                && seguimientoInfluenzaByDias.getTosSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_tos) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Secrecion Nasal
                    if (seguimientoInfluenzaByDias.getSecrecionNasal().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getSecrecionNasalLeve() == null
                                && seguimientoInfluenzaByDias.getSecrecionNasalModerada() == null
                                && seguimientoInfluenzaByDias.getSecrecionNasalSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_secrecion_nasal) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Garganta
                    if (seguimientoInfluenzaByDias.getDolorGarganta().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorGargantaLeve() == null
                                && seguimientoInfluenzaByDias.getDolorGargantaModerada() == null
                                && seguimientoInfluenzaByDias.getDolorGargantaSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_garganta) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Cabeza
                    if (seguimientoInfluenzaByDias.getDolorCabeza().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorCabezaLeve() == null
                                && seguimientoInfluenzaByDias.getDolorCabezaModerada() == null
                                && seguimientoInfluenzaByDias.getDolorCabezaSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_cabeza) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Muscular
                    if (seguimientoInfluenzaByDias.getDolorMuscular().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorMuscularLeve() == null
                                && seguimientoInfluenzaByDias.getDolorMuscularModerada() == null
                                && seguimientoInfluenzaByDias.getDolorMuscularSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_muscular) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Articular
                    if (seguimientoInfluenzaByDias.getDolorArticular().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorArticularLeve() == null
                                && seguimientoInfluenzaByDias.getDolorArticularModerada() == null
                                && seguimientoInfluenzaByDias.getDolorArticularSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_articular) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                }
                if (seguimientoInfluenzaByDias.getControlDia() == 7) {
                    //Fiebre
                    if (seguimientoInfluenzaByDias.getFiebre().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getFiebreLeve() == null
                                && seguimientoInfluenzaByDias.getFiebreModerada() == null
                                && seguimientoInfluenzaByDias.getFiebreSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_fiebre) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Tos
                    if (seguimientoInfluenzaByDias.getTos().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getTosLeve() == null
                                && seguimientoInfluenzaByDias.getTosModerada() == null
                                && seguimientoInfluenzaByDias.getTosSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_tos) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Secrecion Nasal
                    if (seguimientoInfluenzaByDias.getSecrecionNasal().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getSecrecionNasalLeve() == null
                                && seguimientoInfluenzaByDias.getSecrecionNasalModerada() == null
                                && seguimientoInfluenzaByDias.getSecrecionNasalSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_secrecion_nasal) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Garganta
                    if (seguimientoInfluenzaByDias.getDolorGarganta().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorGargantaLeve() == null
                                && seguimientoInfluenzaByDias.getDolorGargantaModerada() == null
                                && seguimientoInfluenzaByDias.getDolorGargantaSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_garganta) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Cabeza
                    if (seguimientoInfluenzaByDias.getDolorCabeza().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorCabezaLeve() == null
                                && seguimientoInfluenzaByDias.getDolorCabezaModerada() == null
                                && seguimientoInfluenzaByDias.getDolorCabezaSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_cabeza) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Muscular
                    if (seguimientoInfluenzaByDias.getDolorMuscular().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorMuscularLeve() == null
                                && seguimientoInfluenzaByDias.getDolorMuscularModerada() == null
                                && seguimientoInfluenzaByDias.getDolorMuscularSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_muscular) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Articular
                    if (seguimientoInfluenzaByDias.getDolorArticular().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorArticularLeve() == null
                                && seguimientoInfluenzaByDias.getDolorArticularModerada() == null
                                && seguimientoInfluenzaByDias.getDolorArticularSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_articular) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                }
                if (seguimientoInfluenzaByDias.getControlDia() == 8) {
                    //Fiebre
                    if (seguimientoInfluenzaByDias.getFiebre().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getFiebreLeve() == null
                                && seguimientoInfluenzaByDias.getFiebreModerada() == null
                                && seguimientoInfluenzaByDias.getFiebreSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_fiebre) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Tos
                    if (seguimientoInfluenzaByDias.getTos().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getTosLeve() == null
                                && seguimientoInfluenzaByDias.getTosModerada() == null
                                && seguimientoInfluenzaByDias.getTosSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_tos) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Secrecion Nasal
                    if (seguimientoInfluenzaByDias.getSecrecionNasal().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getSecrecionNasalLeve() == null
                                && seguimientoInfluenzaByDias.getSecrecionNasalModerada() == null
                                && seguimientoInfluenzaByDias.getSecrecionNasalSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_secrecion_nasal) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Garganta
                    if (seguimientoInfluenzaByDias.getDolorGarganta().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorGargantaLeve() == null
                                && seguimientoInfluenzaByDias.getDolorGargantaModerada() == null
                                && seguimientoInfluenzaByDias.getDolorGargantaSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_garganta) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Cabeza
                    if (seguimientoInfluenzaByDias.getDolorCabeza().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorCabezaLeve() == null
                                && seguimientoInfluenzaByDias.getDolorCabezaModerada() == null
                                && seguimientoInfluenzaByDias.getDolorCabezaSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_cabeza) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Muscular
                    if (seguimientoInfluenzaByDias.getDolorMuscular().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorMuscularLeve() == null
                                && seguimientoInfluenzaByDias.getDolorMuscularModerada() == null
                                && seguimientoInfluenzaByDias.getDolorMuscularSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_muscular) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Articular
                    if (seguimientoInfluenzaByDias.getDolorArticular().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorArticularLeve() == null
                                && seguimientoInfluenzaByDias.getDolorArticularModerada() == null
                                && seguimientoInfluenzaByDias.getDolorArticularSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_articular) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                }
                if (seguimientoInfluenzaByDias.getControlDia() == 9) {
                    //Fiebre
                    if (seguimientoInfluenzaByDias.getFiebre().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getFiebreLeve() == null
                                && seguimientoInfluenzaByDias.getFiebreModerada() == null
                                && seguimientoInfluenzaByDias.getFiebreSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_fiebre) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Tos
                    if (seguimientoInfluenzaByDias.getTos().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getTosLeve() == null
                                && seguimientoInfluenzaByDias.getTosModerada() == null
                                && seguimientoInfluenzaByDias.getTosSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_tos) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Secrecion Nasal
                    if (seguimientoInfluenzaByDias.getSecrecionNasal().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getSecrecionNasalLeve() == null
                                && seguimientoInfluenzaByDias.getSecrecionNasalModerada() == null
                                && seguimientoInfluenzaByDias.getSecrecionNasalSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_secrecion_nasal) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Garganta
                    if (seguimientoInfluenzaByDias.getDolorGarganta().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorGargantaLeve() == null
                                && seguimientoInfluenzaByDias.getDolorGargantaModerada() == null
                                && seguimientoInfluenzaByDias.getDolorGargantaSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_garganta) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Cabeza
                    if (seguimientoInfluenzaByDias.getDolorCabeza().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorCabezaLeve() == null
                                && seguimientoInfluenzaByDias.getDolorCabezaModerada() == null
                                && seguimientoInfluenzaByDias.getDolorCabezaSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_cabeza) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Muscular
                    if (seguimientoInfluenzaByDias.getDolorMuscular().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorMuscularLeve() == null
                                && seguimientoInfluenzaByDias.getDolorMuscularModerada() == null
                                && seguimientoInfluenzaByDias.getDolorMuscularSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_muscular) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Articular
                    if (seguimientoInfluenzaByDias.getDolorArticular().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorArticularLeve() == null
                                && seguimientoInfluenzaByDias.getDolorArticularModerada() == null
                                && seguimientoInfluenzaByDias.getDolorArticularSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_articular) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                }
                if (seguimientoInfluenzaByDias.getControlDia() == 10) {
                    //Fiebre
                    if (seguimientoInfluenzaByDias.getFiebre().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getFiebreLeve() == null
                                && seguimientoInfluenzaByDias.getFiebreModerada() == null
                                && seguimientoInfluenzaByDias.getFiebreSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_fiebre) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Tos
                    if (seguimientoInfluenzaByDias.getTos().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getTosLeve() == null
                                && seguimientoInfluenzaByDias.getTosModerada() == null
                                && seguimientoInfluenzaByDias.getTosSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_tos) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Secrecion Nasal
                    if (seguimientoInfluenzaByDias.getSecrecionNasal().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getSecrecionNasalLeve() == null
                                && seguimientoInfluenzaByDias.getSecrecionNasalModerada() == null
                                && seguimientoInfluenzaByDias.getSecrecionNasalSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_secrecion_nasal) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Garganta
                    if (seguimientoInfluenzaByDias.getDolorGarganta().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorGargantaLeve() == null
                                && seguimientoInfluenzaByDias.getDolorGargantaModerada() == null
                                && seguimientoInfluenzaByDias.getDolorGargantaSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_garganta) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Cabeza
                    if (seguimientoInfluenzaByDias.getDolorCabeza().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorCabezaLeve() == null
                                && seguimientoInfluenzaByDias.getDolorCabezaModerada() == null
                                && seguimientoInfluenzaByDias.getDolorCabezaSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_cabeza) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Muscular
                    if (seguimientoInfluenzaByDias.getDolorMuscular().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorMuscularLeve() == null
                                && seguimientoInfluenzaByDias.getDolorMuscularModerada() == null
                                && seguimientoInfluenzaByDias.getDolorMuscularSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_muscular) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Articular
                    if (seguimientoInfluenzaByDias.getDolorArticular().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorArticularLeve() == null
                                && seguimientoInfluenzaByDias.getDolorArticularModerada() == null
                                && seguimientoInfluenzaByDias.getDolorArticularSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_articular) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                }
                if (seguimientoInfluenzaByDias.getControlDia() == 11) {
                    //Fiebre
                    if (seguimientoInfluenzaByDias.getFiebre().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getFiebreLeve() == null
                                && seguimientoInfluenzaByDias.getFiebreModerada() == null
                                && seguimientoInfluenzaByDias.getFiebreSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_fiebre) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Tos
                    if (seguimientoInfluenzaByDias.getTos().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getTosLeve() == null
                                && seguimientoInfluenzaByDias.getTosModerada() == null
                                && seguimientoInfluenzaByDias.getTosSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_tos) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Secrecion Nasal
                    if (seguimientoInfluenzaByDias.getSecrecionNasal().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getSecrecionNasalLeve() == null
                                && seguimientoInfluenzaByDias.getSecrecionNasalModerada() == null
                                && seguimientoInfluenzaByDias.getSecrecionNasalSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_secrecion_nasal) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Garganta
                    if (seguimientoInfluenzaByDias.getDolorGarganta().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorGargantaLeve() == null
                                && seguimientoInfluenzaByDias.getDolorGargantaModerada() == null
                                && seguimientoInfluenzaByDias.getDolorGargantaSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_garganta) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Cabeza
                    if (seguimientoInfluenzaByDias.getDolorCabeza().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorCabezaLeve() == null
                                && seguimientoInfluenzaByDias.getDolorCabezaModerada() == null
                                && seguimientoInfluenzaByDias.getDolorCabezaSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_cabeza) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Muscular
                    if (seguimientoInfluenzaByDias.getDolorMuscular().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorMuscularLeve() == null
                                && seguimientoInfluenzaByDias.getDolorMuscularModerada() == null
                                && seguimientoInfluenzaByDias.getDolorMuscularSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_muscular) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Articular
                    if (seguimientoInfluenzaByDias.getDolorArticular().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorArticularLeve() == null
                                && seguimientoInfluenzaByDias.getDolorArticularModerada() == null
                                && seguimientoInfluenzaByDias.getDolorArticularSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_articular) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                }
                if (seguimientoInfluenzaByDias.getControlDia() == 12) {
                    //Fiebre
                    if (seguimientoInfluenzaByDias.getFiebre().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getFiebreLeve() == null
                                && seguimientoInfluenzaByDias.getFiebreModerada() == null
                                && seguimientoInfluenzaByDias.getFiebreSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_fiebre) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Tos
                    if (seguimientoInfluenzaByDias.getTos().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getTosLeve() == null
                                && seguimientoInfluenzaByDias.getTosModerada() == null
                                && seguimientoInfluenzaByDias.getTosSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_tos) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Secrecion Nasal
                    if (seguimientoInfluenzaByDias.getSecrecionNasal().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getSecrecionNasalLeve() == null
                                && seguimientoInfluenzaByDias.getSecrecionNasalModerada() == null
                                && seguimientoInfluenzaByDias.getSecrecionNasalSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_secrecion_nasal) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Garganta
                    if (seguimientoInfluenzaByDias.getDolorGarganta().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorGargantaLeve() == null
                                && seguimientoInfluenzaByDias.getDolorGargantaModerada() == null
                                && seguimientoInfluenzaByDias.getDolorGargantaSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_garganta) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Cabeza
                    if (seguimientoInfluenzaByDias.getDolorCabeza().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorCabezaLeve() == null
                                && seguimientoInfluenzaByDias.getDolorCabezaModerada() == null
                                && seguimientoInfluenzaByDias.getDolorCabezaSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_cabeza) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Muscular
                    if (seguimientoInfluenzaByDias.getDolorMuscular().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorMuscularLeve() == null
                                && seguimientoInfluenzaByDias.getDolorMuscularModerada() == null
                                && seguimientoInfluenzaByDias.getDolorMuscularSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_muscular) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Articular
                    if (seguimientoInfluenzaByDias.getDolorArticular().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorArticularLeve() == null
                                && seguimientoInfluenzaByDias.getDolorArticularModerada() == null
                                && seguimientoInfluenzaByDias.getDolorArticularSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_articular) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                }
                if (seguimientoInfluenzaByDias.getControlDia() == 13) {
                    //Fiebre
                    if (seguimientoInfluenzaByDias.getFiebre().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getFiebreLeve() == null
                                && seguimientoInfluenzaByDias.getFiebreModerada() == null
                                && seguimientoInfluenzaByDias.getFiebreSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_fiebre) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Tos
                    if (seguimientoInfluenzaByDias.getTos().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getTosLeve() == null
                                && seguimientoInfluenzaByDias.getTosModerada() == null
                                && seguimientoInfluenzaByDias.getTosSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_tos) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Secrecion Nasal
                    if (seguimientoInfluenzaByDias.getSecrecionNasal().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getSecrecionNasalLeve() == null
                                && seguimientoInfluenzaByDias.getSecrecionNasalModerada() == null
                                && seguimientoInfluenzaByDias.getSecrecionNasalSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_secrecion_nasal) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Garganta
                    if (seguimientoInfluenzaByDias.getDolorGarganta().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorGargantaLeve() == null
                                && seguimientoInfluenzaByDias.getDolorGargantaModerada() == null
                                && seguimientoInfluenzaByDias.getDolorGargantaSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_garganta) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Cabeza
                    if (seguimientoInfluenzaByDias.getDolorCabeza().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorCabezaLeve() == null
                                && seguimientoInfluenzaByDias.getDolorCabezaModerada() == null
                                && seguimientoInfluenzaByDias.getDolorCabezaSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_cabeza) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Muscular
                    if (seguimientoInfluenzaByDias.getDolorMuscular().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorMuscularLeve() == null
                                && seguimientoInfluenzaByDias.getDolorMuscularModerada() == null
                                && seguimientoInfluenzaByDias.getDolorMuscularSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_muscular) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Articular
                    if (seguimientoInfluenzaByDias.getDolorArticular().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorArticularLeve() == null
                                && seguimientoInfluenzaByDias.getDolorArticularModerada() == null
                                && seguimientoInfluenzaByDias.getDolorArticularSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_articular) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                }
                if (seguimientoInfluenzaByDias.getControlDia() == 14) {
                    //Fiebre
                    if (seguimientoInfluenzaByDias.getFiebre().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getFiebreLeve() == null
                                && seguimientoInfluenzaByDias.getFiebreModerada() == null
                                && seguimientoInfluenzaByDias.getFiebreSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_fiebre) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Tos
                    if (seguimientoInfluenzaByDias.getTos().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getTosLeve() == null
                                && seguimientoInfluenzaByDias.getTosModerada() == null
                                && seguimientoInfluenzaByDias.getTosSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_tos) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Secrecion Nasal
                    if (seguimientoInfluenzaByDias.getSecrecionNasal().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getSecrecionNasalLeve() == null
                                && seguimientoInfluenzaByDias.getSecrecionNasalModerada() == null
                                && seguimientoInfluenzaByDias.getSecrecionNasalSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_secrecion_nasal) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Garganta
                    if (seguimientoInfluenzaByDias.getDolorGarganta().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorGargantaLeve() == null
                                && seguimientoInfluenzaByDias.getDolorGargantaModerada() == null
                                && seguimientoInfluenzaByDias.getDolorGargantaSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_garganta) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Cabeza
                    if (seguimientoInfluenzaByDias.getDolorCabeza().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorCabezaLeve() == null
                                && seguimientoInfluenzaByDias.getDolorCabezaModerada() == null
                                && seguimientoInfluenzaByDias.getDolorCabezaSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_cabeza) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Muscular
                    if (seguimientoInfluenzaByDias.getDolorMuscular().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorMuscularLeve() == null
                                && seguimientoInfluenzaByDias.getDolorMuscularModerada() == null
                                && seguimientoInfluenzaByDias.getDolorMuscularSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_muscular) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Articular
                    if (seguimientoInfluenzaByDias.getDolorArticular().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorArticularLeve() == null
                                && seguimientoInfluenzaByDias.getDolorArticularModerada() == null
                                && seguimientoInfluenzaByDias.getDolorArticularSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_articular) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                }
                if (seguimientoInfluenzaByDias.getControlDia() == 15) {
                    //Fiebre
                    if (seguimientoInfluenzaByDias.getFiebre().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getFiebreLeve() == null
                                && seguimientoInfluenzaByDias.getFiebreModerada() == null
                                && seguimientoInfluenzaByDias.getFiebreSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_fiebre) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Tos
                    if (seguimientoInfluenzaByDias.getTos().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getTosLeve() == null
                                && seguimientoInfluenzaByDias.getTosModerada() == null
                                && seguimientoInfluenzaByDias.getTosSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_tos) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Secrecion Nasal
                    if (seguimientoInfluenzaByDias.getSecrecionNasal().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getSecrecionNasalLeve() == null
                                && seguimientoInfluenzaByDias.getSecrecionNasalModerada() == null
                                && seguimientoInfluenzaByDias.getSecrecionNasalSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_secrecion_nasal) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Garganta
                    if (seguimientoInfluenzaByDias.getDolorGarganta().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorGargantaLeve() == null
                                && seguimientoInfluenzaByDias.getDolorGargantaModerada() == null
                                && seguimientoInfluenzaByDias.getDolorGargantaSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_garganta) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Cabeza
                    if (seguimientoInfluenzaByDias.getDolorCabeza().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorCabezaLeve() == null
                                && seguimientoInfluenzaByDias.getDolorCabezaModerada() == null
                                && seguimientoInfluenzaByDias.getDolorCabezaSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_cabeza) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Muscular
                    if (seguimientoInfluenzaByDias.getDolorMuscular().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorMuscularLeve() == null
                                && seguimientoInfluenzaByDias.getDolorMuscularModerada() == null
                                && seguimientoInfluenzaByDias.getDolorMuscularSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_muscular) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Articular
                    if (seguimientoInfluenzaByDias.getDolorArticular().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorArticularLeve() == null
                                && seguimientoInfluenzaByDias.getDolorArticularModerada() == null
                                && seguimientoInfluenzaByDias.getDolorArticularSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_articular) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                }
                if (seguimientoInfluenzaByDias.getControlDia() == 16) {
                    //Fiebre
                    if (seguimientoInfluenzaByDias.getFiebre().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getFiebreLeve() == null
                                && seguimientoInfluenzaByDias.getFiebreModerada() == null
                                && seguimientoInfluenzaByDias.getFiebreSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_fiebre) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Tos
                    if (seguimientoInfluenzaByDias.getTos().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getTosLeve() == null
                                && seguimientoInfluenzaByDias.getTosModerada() == null
                                && seguimientoInfluenzaByDias.getTosSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_tos) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Secrecion Nasal
                    if (seguimientoInfluenzaByDias.getSecrecionNasal().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getSecrecionNasalLeve() == null
                                && seguimientoInfluenzaByDias.getSecrecionNasalModerada() == null
                                && seguimientoInfluenzaByDias.getSecrecionNasalSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_secrecion_nasal) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Garganta
                    if (seguimientoInfluenzaByDias.getDolorGarganta().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorGargantaLeve() == null
                                && seguimientoInfluenzaByDias.getDolorGargantaModerada() == null
                                && seguimientoInfluenzaByDias.getDolorGargantaSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_garganta) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Cabeza
                    if (seguimientoInfluenzaByDias.getDolorCabeza().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorCabezaLeve() == null
                                && seguimientoInfluenzaByDias.getDolorCabezaModerada() == null
                                && seguimientoInfluenzaByDias.getDolorCabezaSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_cabeza) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Muscular
                    if (seguimientoInfluenzaByDias.getDolorMuscular().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorMuscularLeve() == null
                                && seguimientoInfluenzaByDias.getDolorMuscularModerada() == null
                                && seguimientoInfluenzaByDias.getDolorMuscularSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_muscular) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Articular
                    if (seguimientoInfluenzaByDias.getDolorArticular().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorArticularLeve() == null
                                && seguimientoInfluenzaByDias.getDolorArticularModerada() == null
                                && seguimientoInfluenzaByDias.getDolorArticularSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_articular) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                }
                if (seguimientoInfluenzaByDias.getControlDia() == 17) {
                    //Fiebre
                    if (seguimientoInfluenzaByDias.getFiebre().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getFiebreLeve() == null
                                && seguimientoInfluenzaByDias.getFiebreModerada() == null
                                && seguimientoInfluenzaByDias.getFiebreSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_fiebre) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Tos
                    if (seguimientoInfluenzaByDias.getTos().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getTosLeve() == null
                                && seguimientoInfluenzaByDias.getTosModerada() == null
                                && seguimientoInfluenzaByDias.getTosSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_tos) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Secrecion Nasal
                    if (seguimientoInfluenzaByDias.getSecrecionNasal().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getSecrecionNasalLeve() == null
                                && seguimientoInfluenzaByDias.getSecrecionNasalModerada() == null
                                && seguimientoInfluenzaByDias.getSecrecionNasalSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_secrecion_nasal) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Garganta
                    if (seguimientoInfluenzaByDias.getDolorGarganta().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorGargantaLeve() == null
                                && seguimientoInfluenzaByDias.getDolorGargantaModerada() == null
                                && seguimientoInfluenzaByDias.getDolorGargantaSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_garganta) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Cabeza
                    if (seguimientoInfluenzaByDias.getDolorCabeza().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorCabezaLeve() == null
                                && seguimientoInfluenzaByDias.getDolorCabezaModerada() == null
                                && seguimientoInfluenzaByDias.getDolorCabezaSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_cabeza) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Muscular
                    if (seguimientoInfluenzaByDias.getDolorMuscular().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorMuscularLeve() == null
                                && seguimientoInfluenzaByDias.getDolorMuscularModerada() == null
                                && seguimientoInfluenzaByDias.getDolorMuscularSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_muscular) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Articular
                    if (seguimientoInfluenzaByDias.getDolorArticular().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorArticularLeve() == null
                                && seguimientoInfluenzaByDias.getDolorArticularModerada() == null
                                && seguimientoInfluenzaByDias.getDolorArticularSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_articular) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                }
                if (seguimientoInfluenzaByDias.getControlDia() == 18) {
                    //Fiebre
                    if (seguimientoInfluenzaByDias.getFiebre().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getFiebreLeve() == null
                                && seguimientoInfluenzaByDias.getFiebreModerada() == null
                                && seguimientoInfluenzaByDias.getFiebreSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_fiebre) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Tos
                    if (seguimientoInfluenzaByDias.getTos().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getTosLeve() == null
                                && seguimientoInfluenzaByDias.getTosModerada() == null
                                && seguimientoInfluenzaByDias.getTosSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_tos) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Secrecion Nasal
                    if (seguimientoInfluenzaByDias.getSecrecionNasal().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getSecrecionNasalLeve() == null
                                && seguimientoInfluenzaByDias.getSecrecionNasalModerada() == null
                                && seguimientoInfluenzaByDias.getSecrecionNasalSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_secrecion_nasal) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Garganta
                    if (seguimientoInfluenzaByDias.getDolorGarganta().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorGargantaLeve() == null
                                && seguimientoInfluenzaByDias.getDolorGargantaModerada() == null
                                && seguimientoInfluenzaByDias.getDolorGargantaSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_garganta) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Cabeza
                    if (seguimientoInfluenzaByDias.getDolorCabeza().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorCabezaLeve() == null
                                && seguimientoInfluenzaByDias.getDolorCabezaModerada() == null
                                && seguimientoInfluenzaByDias.getDolorCabezaSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_cabeza) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Muscular
                    if (seguimientoInfluenzaByDias.getDolorMuscular().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorMuscularLeve() == null
                                && seguimientoInfluenzaByDias.getDolorMuscularModerada() == null
                                && seguimientoInfluenzaByDias.getDolorMuscularSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_muscular) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Articular
                    if (seguimientoInfluenzaByDias.getDolorArticular().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorArticularLeve() == null
                                && seguimientoInfluenzaByDias.getDolorArticularModerada() == null
                                && seguimientoInfluenzaByDias.getDolorArticularSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_articular) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                }
                if (seguimientoInfluenzaByDias.getControlDia() == 19) {
                    //Fiebre
                    if (seguimientoInfluenzaByDias.getFiebre().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getFiebreLeve() == null
                                && seguimientoInfluenzaByDias.getFiebreModerada() == null
                                && seguimientoInfluenzaByDias.getFiebreSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_fiebre) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Tos
                    if (seguimientoInfluenzaByDias.getTos().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getTosLeve() == null
                                && seguimientoInfluenzaByDias.getTosModerada() == null
                                && seguimientoInfluenzaByDias.getTosSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_tos) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Secrecion Nasal
                    if (seguimientoInfluenzaByDias.getSecrecionNasal().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getSecrecionNasalLeve() == null
                                && seguimientoInfluenzaByDias.getSecrecionNasalModerada() == null
                                && seguimientoInfluenzaByDias.getSecrecionNasalSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_secrecion_nasal) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Garganta
                    if (seguimientoInfluenzaByDias.getDolorGarganta().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorGargantaLeve() == null
                                && seguimientoInfluenzaByDias.getDolorGargantaModerada() == null
                                && seguimientoInfluenzaByDias.getDolorGargantaSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_garganta) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Cabeza
                    if (seguimientoInfluenzaByDias.getDolorCabeza().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorCabezaLeve() == null
                                && seguimientoInfluenzaByDias.getDolorCabezaModerada() == null
                                && seguimientoInfluenzaByDias.getDolorCabezaSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_cabeza) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Muscular
                    if (seguimientoInfluenzaByDias.getDolorMuscular().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorMuscularLeve() == null
                                && seguimientoInfluenzaByDias.getDolorMuscularModerada() == null
                                && seguimientoInfluenzaByDias.getDolorMuscularSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_muscular) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Articular
                    if (seguimientoInfluenzaByDias.getDolorArticular().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorArticularLeve() == null
                                && seguimientoInfluenzaByDias.getDolorArticularModerada() == null
                                && seguimientoInfluenzaByDias.getDolorArticularSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_articular) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                }
                if (seguimientoInfluenzaByDias.getControlDia() == 20) {
                    //Fiebre
                    if (seguimientoInfluenzaByDias.getFiebre().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getFiebreLeve() == null
                                && seguimientoInfluenzaByDias.getFiebreModerada() == null
                                && seguimientoInfluenzaByDias.getFiebreSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_fiebre) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Tos
                    if (seguimientoInfluenzaByDias.getTos().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getTosLeve() == null
                                && seguimientoInfluenzaByDias.getTosModerada() == null
                                && seguimientoInfluenzaByDias.getTosSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_tos) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Secrecion Nasal
                    if (seguimientoInfluenzaByDias.getSecrecionNasal().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getSecrecionNasalLeve() == null
                                && seguimientoInfluenzaByDias.getSecrecionNasalModerada() == null
                                && seguimientoInfluenzaByDias.getSecrecionNasalSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_secrecion_nasal) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Garganta
                    if (seguimientoInfluenzaByDias.getDolorGarganta().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorGargantaLeve() == null
                                && seguimientoInfluenzaByDias.getDolorGargantaModerada() == null
                                && seguimientoInfluenzaByDias.getDolorGargantaSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_garganta) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Cabeza
                    if (seguimientoInfluenzaByDias.getDolorCabeza().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorCabezaLeve() == null
                                && seguimientoInfluenzaByDias.getDolorCabezaModerada() == null
                                && seguimientoInfluenzaByDias.getDolorCabezaSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_cabeza) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Muscular
                    if (seguimientoInfluenzaByDias.getDolorMuscular().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorMuscularLeve() == null
                                && seguimientoInfluenzaByDias.getDolorMuscularModerada() == null
                                && seguimientoInfluenzaByDias.getDolorMuscularSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_muscular) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Articular
                    if (seguimientoInfluenzaByDias.getDolorArticular().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorArticularLeve() == null
                                && seguimientoInfluenzaByDias.getDolorArticularModerada() == null
                                && seguimientoInfluenzaByDias.getDolorArticularSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_articular) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                }
                if (seguimientoInfluenzaByDias.getControlDia() == 21) {
                    //Fiebre
                    if (seguimientoInfluenzaByDias.getFiebre().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getFiebreLeve() == null
                                && seguimientoInfluenzaByDias.getFiebreModerada() == null
                                && seguimientoInfluenzaByDias.getFiebreSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_fiebre) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Tos
                    if (seguimientoInfluenzaByDias.getTos().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getTosLeve() == null
                                && seguimientoInfluenzaByDias.getTosModerada() == null
                                && seguimientoInfluenzaByDias.getTosSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_tos) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Secrecion Nasal
                    if (seguimientoInfluenzaByDias.getSecrecionNasal().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getSecrecionNasalLeve() == null
                                && seguimientoInfluenzaByDias.getSecrecionNasalModerada() == null
                                && seguimientoInfluenzaByDias.getSecrecionNasalSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_secrecion_nasal) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Garganta
                    if (seguimientoInfluenzaByDias.getDolorGarganta().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorGargantaLeve() == null
                                && seguimientoInfluenzaByDias.getDolorGargantaModerada() == null
                                && seguimientoInfluenzaByDias.getDolorGargantaSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_garganta) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Cabeza
                    if (seguimientoInfluenzaByDias.getDolorCabeza().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorCabezaLeve() == null
                                && seguimientoInfluenzaByDias.getDolorCabezaModerada() == null
                                && seguimientoInfluenzaByDias.getDolorCabezaSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_cabeza) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Muscular
                    if (seguimientoInfluenzaByDias.getDolorMuscular().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorMuscularLeve() == null
                                && seguimientoInfluenzaByDias.getDolorMuscularModerada() == null
                                && seguimientoInfluenzaByDias.getDolorMuscularSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_muscular) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Articular
                    if (seguimientoInfluenzaByDias.getDolorArticular().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorArticularLeve() == null
                                && seguimientoInfluenzaByDias.getDolorArticularModerada() == null
                                && seguimientoInfluenzaByDias.getDolorArticularSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_articular) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                }
                if (seguimientoInfluenzaByDias.getControlDia() == 22) {
                    //Fiebre
                    if (seguimientoInfluenzaByDias.getFiebre().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getFiebreLeve() == null
                                && seguimientoInfluenzaByDias.getFiebreModerada() == null
                                && seguimientoInfluenzaByDias.getFiebreSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_fiebre) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Tos
                    if (seguimientoInfluenzaByDias.getTos().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getTosLeve() == null
                                && seguimientoInfluenzaByDias.getTosModerada() == null
                                && seguimientoInfluenzaByDias.getTosSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_tos) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Secrecion Nasal
                    if (seguimientoInfluenzaByDias.getSecrecionNasal().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getSecrecionNasalLeve() == null
                                && seguimientoInfluenzaByDias.getSecrecionNasalModerada() == null
                                && seguimientoInfluenzaByDias.getSecrecionNasalSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_secrecion_nasal) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Garganta
                    if (seguimientoInfluenzaByDias.getDolorGarganta().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorGargantaLeve() == null
                                && seguimientoInfluenzaByDias.getDolorGargantaModerada() == null
                                && seguimientoInfluenzaByDias.getDolorGargantaSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_garganta) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Cabeza
                    if (seguimientoInfluenzaByDias.getDolorCabeza().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorCabezaLeve() == null
                                && seguimientoInfluenzaByDias.getDolorCabezaModerada() == null
                                && seguimientoInfluenzaByDias.getDolorCabezaSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_cabeza) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Muscular
                    if (seguimientoInfluenzaByDias.getDolorMuscular().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorMuscularLeve() == null
                                && seguimientoInfluenzaByDias.getDolorMuscularModerada() == null
                                && seguimientoInfluenzaByDias.getDolorMuscularSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_muscular) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Articular
                    if (seguimientoInfluenzaByDias.getDolorArticular().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorArticularLeve() == null
                                && seguimientoInfluenzaByDias.getDolorArticularModerada() == null
                                && seguimientoInfluenzaByDias.getDolorArticularSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_articular) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                }
                if (seguimientoInfluenzaByDias.getControlDia() == 23) {
                    //Fiebre
                    if (seguimientoInfluenzaByDias.getFiebre().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getFiebreLeve() == null
                                && seguimientoInfluenzaByDias.getFiebreModerada() == null
                                && seguimientoInfluenzaByDias.getFiebreSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_fiebre) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Tos
                    if (seguimientoInfluenzaByDias.getTos().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getTosLeve() == null
                                && seguimientoInfluenzaByDias.getTosModerada() == null
                                && seguimientoInfluenzaByDias.getTosSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_tos) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Secrecion Nasal
                    if (seguimientoInfluenzaByDias.getSecrecionNasal().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getSecrecionNasalLeve() == null
                                && seguimientoInfluenzaByDias.getSecrecionNasalModerada() == null
                                && seguimientoInfluenzaByDias.getSecrecionNasalSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_secrecion_nasal) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Garganta
                    if (seguimientoInfluenzaByDias.getDolorGarganta().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorGargantaLeve() == null
                                && seguimientoInfluenzaByDias.getDolorGargantaModerada() == null
                                && seguimientoInfluenzaByDias.getDolorGargantaSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_garganta) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Cabeza
                    if (seguimientoInfluenzaByDias.getDolorCabeza().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorCabezaLeve() == null
                                && seguimientoInfluenzaByDias.getDolorCabezaModerada() == null
                                && seguimientoInfluenzaByDias.getDolorCabezaSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_cabeza) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Muscular
                    if (seguimientoInfluenzaByDias.getDolorMuscular().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorMuscularLeve() == null
                                && seguimientoInfluenzaByDias.getDolorMuscularModerada() == null
                                && seguimientoInfluenzaByDias.getDolorMuscularSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_muscular) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Articular
                    if (seguimientoInfluenzaByDias.getDolorArticular().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorArticularLeve() == null
                                && seguimientoInfluenzaByDias.getDolorArticularModerada() == null
                                && seguimientoInfluenzaByDias.getDolorArticularSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_articular) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                }
                if (seguimientoInfluenzaByDias.getControlDia() == 24) {
                    //Fiebre
                    if (seguimientoInfluenzaByDias.getFiebre().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getFiebreLeve() == null
                                && seguimientoInfluenzaByDias.getFiebreModerada() == null
                                && seguimientoInfluenzaByDias.getFiebreSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_fiebre) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Tos
                    if (seguimientoInfluenzaByDias.getTos().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getTosLeve() == null
                                && seguimientoInfluenzaByDias.getTosModerada() == null
                                && seguimientoInfluenzaByDias.getTosSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_tos) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Secrecion Nasal
                    if (seguimientoInfluenzaByDias.getSecrecionNasal().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getSecrecionNasalLeve() == null
                                && seguimientoInfluenzaByDias.getSecrecionNasalModerada() == null
                                && seguimientoInfluenzaByDias.getSecrecionNasalSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_secrecion_nasal) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Garganta
                    if (seguimientoInfluenzaByDias.getDolorGarganta().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorGargantaLeve() == null
                                && seguimientoInfluenzaByDias.getDolorGargantaModerada() == null
                                && seguimientoInfluenzaByDias.getDolorGargantaSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_garganta) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Cabeza
                    if (seguimientoInfluenzaByDias.getDolorCabeza().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorCabezaLeve() == null
                                && seguimientoInfluenzaByDias.getDolorCabezaModerada() == null
                                && seguimientoInfluenzaByDias.getDolorCabezaSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_cabeza) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Muscular
                    if (seguimientoInfluenzaByDias.getDolorMuscular().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorMuscularLeve() == null
                                && seguimientoInfluenzaByDias.getDolorMuscularModerada() == null
                                && seguimientoInfluenzaByDias.getDolorMuscularSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_muscular) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Articular
                    if (seguimientoInfluenzaByDias.getDolorArticular().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorArticularLeve() == null
                                && seguimientoInfluenzaByDias.getDolorArticularModerada() == null
                                && seguimientoInfluenzaByDias.getDolorArticularSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_articular) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                }
                if (seguimientoInfluenzaByDias.getControlDia() == 25) {
                    //Fiebre
                    if (seguimientoInfluenzaByDias.getFiebre().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getFiebreLeve() == null
                                && seguimientoInfluenzaByDias.getFiebreModerada() == null
                                && seguimientoInfluenzaByDias.getFiebreSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_fiebre) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Tos
                    if (seguimientoInfluenzaByDias.getTos().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getTosLeve() == null
                                && seguimientoInfluenzaByDias.getTosModerada() == null
                                && seguimientoInfluenzaByDias.getTosSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_tos) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Secrecion Nasal
                    if (seguimientoInfluenzaByDias.getSecrecionNasal().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getSecrecionNasalLeve() == null
                                && seguimientoInfluenzaByDias.getSecrecionNasalModerada() == null
                                && seguimientoInfluenzaByDias.getSecrecionNasalSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_secrecion_nasal) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Garganta
                    if (seguimientoInfluenzaByDias.getDolorGarganta().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorGargantaLeve() == null
                                && seguimientoInfluenzaByDias.getDolorGargantaModerada() == null
                                && seguimientoInfluenzaByDias.getDolorGargantaSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_garganta) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Cabeza
                    if (seguimientoInfluenzaByDias.getDolorCabeza().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorCabezaLeve() == null
                                && seguimientoInfluenzaByDias.getDolorCabezaModerada() == null
                                && seguimientoInfluenzaByDias.getDolorCabezaSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_cabeza) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Muscular
                    if (seguimientoInfluenzaByDias.getDolorMuscular().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorMuscularLeve() == null
                                && seguimientoInfluenzaByDias.getDolorMuscularModerada() == null
                                && seguimientoInfluenzaByDias.getDolorMuscularSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_muscular) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Articular
                    if (seguimientoInfluenzaByDias.getDolorArticular().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorArticularLeve() == null
                                && seguimientoInfluenzaByDias.getDolorArticularModerada() == null
                                && seguimientoInfluenzaByDias.getDolorArticularSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_articular) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                }
                if (seguimientoInfluenzaByDias.getControlDia() == 26) {
                    //Fiebre
                    if (seguimientoInfluenzaByDias.getFiebre().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getFiebreLeve() == null
                                && seguimientoInfluenzaByDias.getFiebreModerada() == null
                                && seguimientoInfluenzaByDias.getFiebreSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_fiebre) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Tos
                    if (seguimientoInfluenzaByDias.getTos().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getTosLeve() == null
                                && seguimientoInfluenzaByDias.getTosModerada() == null
                                && seguimientoInfluenzaByDias.getTosSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_tos) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Secrecion Nasal
                    if (seguimientoInfluenzaByDias.getSecrecionNasal().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getSecrecionNasalLeve() == null
                                && seguimientoInfluenzaByDias.getSecrecionNasalModerada() == null
                                && seguimientoInfluenzaByDias.getSecrecionNasalSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_secrecion_nasal) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Garganta
                    if (seguimientoInfluenzaByDias.getDolorGarganta().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorGargantaLeve() == null
                                && seguimientoInfluenzaByDias.getDolorGargantaModerada() == null
                                && seguimientoInfluenzaByDias.getDolorGargantaSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_garganta) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Cabeza
                    if (seguimientoInfluenzaByDias.getDolorCabeza().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorCabezaLeve() == null
                                && seguimientoInfluenzaByDias.getDolorCabezaModerada() == null
                                && seguimientoInfluenzaByDias.getDolorCabezaSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_cabeza) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Muscular
                    if (seguimientoInfluenzaByDias.getDolorMuscular().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorMuscularLeve() == null
                                && seguimientoInfluenzaByDias.getDolorMuscularModerada() == null
                                && seguimientoInfluenzaByDias.getDolorMuscularSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_muscular) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Articular
                    if (seguimientoInfluenzaByDias.getDolorArticular().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorArticularLeve() == null
                                && seguimientoInfluenzaByDias.getDolorArticularModerada() == null
                                && seguimientoInfluenzaByDias.getDolorArticularSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_articular) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                }
                if (seguimientoInfluenzaByDias.getControlDia() == 27) {
                    //Fiebre
                    if (seguimientoInfluenzaByDias.getFiebre().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getFiebreLeve() == null
                                && seguimientoInfluenzaByDias.getFiebreModerada() == null
                                && seguimientoInfluenzaByDias.getFiebreSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_fiebre) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Tos
                    if (seguimientoInfluenzaByDias.getTos().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getTosLeve() == null
                                && seguimientoInfluenzaByDias.getTosModerada() == null
                                && seguimientoInfluenzaByDias.getTosSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_tos) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Secrecion Nasal
                    if (seguimientoInfluenzaByDias.getSecrecionNasal().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getSecrecionNasalLeve() == null
                                && seguimientoInfluenzaByDias.getSecrecionNasalModerada() == null
                                && seguimientoInfluenzaByDias.getSecrecionNasalSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_secrecion_nasal) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Garganta
                    if (seguimientoInfluenzaByDias.getDolorGarganta().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorGargantaLeve() == null
                                && seguimientoInfluenzaByDias.getDolorGargantaModerada() == null
                                && seguimientoInfluenzaByDias.getDolorGargantaSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_garganta) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Cabeza
                    if (seguimientoInfluenzaByDias.getDolorCabeza().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorCabezaLeve() == null
                                && seguimientoInfluenzaByDias.getDolorCabezaModerada() == null
                                && seguimientoInfluenzaByDias.getDolorCabezaSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_cabeza) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Muscular
                    if (seguimientoInfluenzaByDias.getDolorMuscular().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorMuscularLeve() == null
                                && seguimientoInfluenzaByDias.getDolorMuscularModerada() == null
                                && seguimientoInfluenzaByDias.getDolorMuscularSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_muscular) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Articular
                    if (seguimientoInfluenzaByDias.getDolorArticular().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorArticularLeve() == null
                                && seguimientoInfluenzaByDias.getDolorArticularModerada() == null
                                && seguimientoInfluenzaByDias.getDolorArticularSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_articular) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                }
                if (seguimientoInfluenzaByDias.getControlDia() == 28) {
                    //Fiebre
                    if (seguimientoInfluenzaByDias.getFiebre().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getFiebreLeve() == null
                                && seguimientoInfluenzaByDias.getFiebreModerada() == null
                                && seguimientoInfluenzaByDias.getFiebreSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_fiebre) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Tos
                    if (seguimientoInfluenzaByDias.getTos().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getTosLeve() == null
                                && seguimientoInfluenzaByDias.getTosModerada() == null
                                && seguimientoInfluenzaByDias.getTosSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_tos) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Secrecion Nasal
                    if (seguimientoInfluenzaByDias.getSecrecionNasal().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getSecrecionNasalLeve() == null
                                && seguimientoInfluenzaByDias.getSecrecionNasalModerada() == null
                                && seguimientoInfluenzaByDias.getSecrecionNasalSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_secrecion_nasal) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Garganta
                    if (seguimientoInfluenzaByDias.getDolorGarganta().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorGargantaLeve() == null
                                && seguimientoInfluenzaByDias.getDolorGargantaModerada() == null
                                && seguimientoInfluenzaByDias.getDolorGargantaSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_garganta) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Cabeza
                    if (seguimientoInfluenzaByDias.getDolorCabeza().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorCabezaLeve() == null
                                && seguimientoInfluenzaByDias.getDolorCabezaModerada() == null
                                && seguimientoInfluenzaByDias.getDolorCabezaSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_cabeza) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Muscular
                    if (seguimientoInfluenzaByDias.getDolorMuscular().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorMuscularLeve() == null
                                && seguimientoInfluenzaByDias.getDolorMuscularModerada() == null
                                && seguimientoInfluenzaByDias.getDolorMuscularSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_muscular) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                    //Dolor Articular
                    if (seguimientoInfluenzaByDias.getDolorArticular().trim().equals("S") && seguimientoInfluenzaByDias.getSecHojaInfluenza() <= 0) {
                        if (seguimientoInfluenzaByDias.getDolorArticularLeve() == null
                                && seguimientoInfluenzaByDias.getDolorArticularModerada() == null
                                && seguimientoInfluenzaByDias.getDolorArticularSevera() == null) {
                            //Retornamos mensaje
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    getResources().getString(R.string.mensaje_dolor_articular) + " día " + seguimientoInfluenzaByDias.getControlDia(), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    null);
                            return false;
                        }
                    }
                }
            }
            return true;
        }

        /**
         * Metodo para verificar que no se salten el llenado de dias en la hoja de influenza,
         * para no dejar el dia anterior sin datos
         */
        public boolean verificarDiasContinuos(ArrayList<SeguimientoInfluenzaDTO> lstSeg) {
            SeguimientoInfluenzaDTO seguimientoInfluenzaByDias = new SeguimientoInfluenzaDTO();
            ArrayList<SeguimientoInfluenzaDTO> lstSegDia1 = new ArrayList<>();
            ArrayList<SeguimientoInfluenzaDTO> lstSegDia2 = new ArrayList<>();
            ArrayList<SeguimientoInfluenzaDTO> lstSegDia3 = new ArrayList<>();
            ArrayList<SeguimientoInfluenzaDTO> lstSegDia4 = new ArrayList<>();
            ArrayList<SeguimientoInfluenzaDTO> lstSegDia5 = new ArrayList<>();
            ArrayList<SeguimientoInfluenzaDTO> lstSegDia6 = new ArrayList<>();
            ArrayList<SeguimientoInfluenzaDTO> lstSegDia7 = new ArrayList<>();
            ArrayList<SeguimientoInfluenzaDTO> lstSegDia8 = new ArrayList<>();
            ArrayList<SeguimientoInfluenzaDTO> lstSegDia9 = new ArrayList<>();
            ArrayList<SeguimientoInfluenzaDTO> lstSegDia10 = new ArrayList<>();
            ArrayList<SeguimientoInfluenzaDTO> lstSegDia11 = new ArrayList<>();
            ArrayList<SeguimientoInfluenzaDTO> lstSegDia12 = new ArrayList<>();
            /*********/
            ArrayList<SeguimientoInfluenzaDTO> lstSegDia13 = new ArrayList<>();
            ArrayList<SeguimientoInfluenzaDTO> lstSegDia14 = new ArrayList<>();
            ArrayList<SeguimientoInfluenzaDTO> lstSegDia15 = new ArrayList<>();
            ArrayList<SeguimientoInfluenzaDTO> lstSegDia16 = new ArrayList<>();
            ArrayList<SeguimientoInfluenzaDTO> lstSegDia17 = new ArrayList<>();
            ArrayList<SeguimientoInfluenzaDTO> lstSegDia18 = new ArrayList<>();
            ArrayList<SeguimientoInfluenzaDTO> lstSegDia19 = new ArrayList<>();
            ArrayList<SeguimientoInfluenzaDTO> lstSegDia20 = new ArrayList<>();
            ArrayList<SeguimientoInfluenzaDTO> lstSegDia21 = new ArrayList<>();
            ArrayList<SeguimientoInfluenzaDTO> lstSegDia22 = new ArrayList<>();
            ArrayList<SeguimientoInfluenzaDTO> lstSegDia23 = new ArrayList<>();
            ArrayList<SeguimientoInfluenzaDTO> lstSegDia24 = new ArrayList<>();
            ArrayList<SeguimientoInfluenzaDTO> lstSegDia25 = new ArrayList<>();
            ArrayList<SeguimientoInfluenzaDTO> lstSegDia26 = new ArrayList<>();
            ArrayList<SeguimientoInfluenzaDTO> lstSegDia27 = new ArrayList<>();
            ArrayList<SeguimientoInfluenzaDTO> lstSegDia28 = new ArrayList<>();
            for (int i = 0; i < lstSeg.size(); i++) {
                seguimientoInfluenzaByDias = lstSeg.get(i);
                if (seguimientoInfluenzaByDias.getControlDia() == 1) {
                    lstSegDia1.add(seguimientoInfluenzaByDias);
                }
                if (seguimientoInfluenzaByDias.getControlDia() == 2) {
                    lstSegDia2.add(seguimientoInfluenzaByDias);
                }
                if (seguimientoInfluenzaByDias.getControlDia() == 3) {
                    lstSegDia3.add(seguimientoInfluenzaByDias);
                }
                if (seguimientoInfluenzaByDias.getControlDia() == 4) {
                    lstSegDia4.add(seguimientoInfluenzaByDias);
                }
                if (seguimientoInfluenzaByDias.getControlDia() == 5) {
                    lstSegDia5.add(seguimientoInfluenzaByDias);
                }
                if (seguimientoInfluenzaByDias.getControlDia() == 6) {
                    lstSegDia6.add(seguimientoInfluenzaByDias);
                }
                if (seguimientoInfluenzaByDias.getControlDia() == 7) {
                    lstSegDia7.add(seguimientoInfluenzaByDias);
                }
                if (seguimientoInfluenzaByDias.getControlDia() == 8) {
                    lstSegDia8.add(seguimientoInfluenzaByDias);
                }
                if (seguimientoInfluenzaByDias.getControlDia() == 9) {
                    lstSegDia9.add(seguimientoInfluenzaByDias);
                }
                if (seguimientoInfluenzaByDias.getControlDia() == 10) {
                    lstSegDia10.add(seguimientoInfluenzaByDias);
                }
                if (seguimientoInfluenzaByDias.getControlDia() == 11) {
                    lstSegDia11.add(seguimientoInfluenzaByDias);
                }
                if (seguimientoInfluenzaByDias.getControlDia() == 12) {
                    lstSegDia12.add(seguimientoInfluenzaByDias);
                }
                if (seguimientoInfluenzaByDias.getControlDia() == 13) {
                    lstSegDia13.add(seguimientoInfluenzaByDias);
                }
                if (seguimientoInfluenzaByDias.getControlDia() == 14) {
                    lstSegDia14.add(seguimientoInfluenzaByDias);
                }
                if (seguimientoInfluenzaByDias.getControlDia() == 15) {
                    lstSegDia15.add(seguimientoInfluenzaByDias);
                }
                if (seguimientoInfluenzaByDias.getControlDia() == 16) {
                    lstSegDia16.add(seguimientoInfluenzaByDias);
                }
                if (seguimientoInfluenzaByDias.getControlDia() == 17) {
                    lstSegDia17.add(seguimientoInfluenzaByDias);
                }
                if (seguimientoInfluenzaByDias.getControlDia() == 18) {
                    lstSegDia18.add(seguimientoInfluenzaByDias);
                }
                if (seguimientoInfluenzaByDias.getControlDia() == 19) {
                    lstSegDia19.add(seguimientoInfluenzaByDias);
                }
                if (seguimientoInfluenzaByDias.getControlDia() == 20) {
                    lstSegDia20.add(seguimientoInfluenzaByDias);
                }
                if (seguimientoInfluenzaByDias.getControlDia() == 21) {
                    lstSegDia21.add(seguimientoInfluenzaByDias);
                }
                if (seguimientoInfluenzaByDias.getControlDia() == 22) {
                    lstSegDia22.add(seguimientoInfluenzaByDias);
                }
                if (seguimientoInfluenzaByDias.getControlDia() == 23) {
                    lstSegDia23.add(seguimientoInfluenzaByDias);
                }
                if (seguimientoInfluenzaByDias.getControlDia() == 24) {
                    lstSegDia24.add(seguimientoInfluenzaByDias);
                }
                if (seguimientoInfluenzaByDias.getControlDia() == 25) {
                    lstSegDia25.add(seguimientoInfluenzaByDias);
                }
                if (seguimientoInfluenzaByDias.getControlDia() == 26) {
                    lstSegDia26.add(seguimientoInfluenzaByDias);
                }
                if (seguimientoInfluenzaByDias.getControlDia() == 27) {
                    lstSegDia27.add(seguimientoInfluenzaByDias);
                }
                if (seguimientoInfluenzaByDias.getControlDia() == 28) {
                    lstSegDia28.add(seguimientoInfluenzaByDias);
                }
            }

            if (lstSegDia2.size() > 0 && lstSegDia1.size() == 0) {
                MensajesHelper.mostrarMensajeInfo(getActivity(), String.format(
                        getResources().getString(R.string.msj_aviso_requerido_dia_seguimiento_sin_completar),
                        String.valueOf("1")),
                        getActivity().getResources().getString(R.string.title_estudio_sostenible), null);
                return false;
            }
            if (lstSegDia3.size() > 0 && lstSegDia2.size() == 0) {
                MensajesHelper.mostrarMensajeInfo(getActivity(), String.format(
                        getResources().getString(R.string.msj_aviso_requerido_dia_seguimiento_sin_completar),
                        String.valueOf("2")),
                        getActivity().getResources().getString(R.string.title_estudio_sostenible), null);
                return false;
            }
            if (lstSegDia4.size() > 0 && lstSegDia3.size() == 0) {
                MensajesHelper.mostrarMensajeInfo(getActivity(), String.format(
                        getResources().getString(R.string.msj_aviso_requerido_dia_seguimiento_sin_completar),
                        String.valueOf("3")),
                        getActivity().getResources().getString(R.string.title_estudio_sostenible), null);
                return false;
            }
            if (lstSegDia5.size() > 0 && lstSegDia4.size() == 0) {
                MensajesHelper.mostrarMensajeInfo(getActivity(), String.format(
                        getResources().getString(R.string.msj_aviso_requerido_dia_seguimiento_sin_completar),
                        String.valueOf("4")),
                        getActivity().getResources().getString(R.string.title_estudio_sostenible), null);
                return false;
            }
            if (lstSegDia6.size() > 0 && lstSegDia5.size() == 0) {
                MensajesHelper.mostrarMensajeInfo(getActivity(), String.format(
                        getResources().getString(R.string.msj_aviso_requerido_dia_seguimiento_sin_completar),
                        String.valueOf("5")),
                        getActivity().getResources().getString(R.string.title_estudio_sostenible), null);
                return false;
            }
            if (lstSegDia7.size() > 0 && lstSegDia6.size() == 0) {
                MensajesHelper.mostrarMensajeInfo(getActivity(), String.format(
                        getResources().getString(R.string.msj_aviso_requerido_dia_seguimiento_sin_completar),
                        String.valueOf("6")),
                        getActivity().getResources().getString(R.string.title_estudio_sostenible), null);
                return false;
            }
            if (lstSegDia8.size() > 0 && lstSegDia7.size() == 0) {
                MensajesHelper.mostrarMensajeInfo(getActivity(), String.format(
                        getResources().getString(R.string.msj_aviso_requerido_dia_seguimiento_sin_completar),
                        String.valueOf("7")),
                        getActivity().getResources().getString(R.string.title_estudio_sostenible), null);
                return false;
            }
            if (lstSegDia9.size() > 0 && lstSegDia8.size() == 0) {
                MensajesHelper.mostrarMensajeInfo(getActivity(), String.format(
                        getResources().getString(R.string.msj_aviso_requerido_dia_seguimiento_sin_completar),
                        String.valueOf("8")),
                        getActivity().getResources().getString(R.string.title_estudio_sostenible), null);
                return false;
            }
            if (lstSegDia10.size() > 0 && lstSegDia9.size() == 0) {
                MensajesHelper.mostrarMensajeInfo(getActivity(), String.format(
                        getResources().getString(R.string.msj_aviso_requerido_dia_seguimiento_sin_completar),
                        String.valueOf("9")),
                        getActivity().getResources().getString(R.string.title_estudio_sostenible), null);
                return false;
            }
            if (lstSegDia11.size() > 0 && lstSegDia10.size() == 0) {
                MensajesHelper.mostrarMensajeInfo(getActivity(), String.format(
                        getResources().getString(R.string.msj_aviso_requerido_dia_seguimiento_sin_completar),
                        String.valueOf("10")),
                        getActivity().getResources().getString(R.string.title_estudio_sostenible), null);
                return false;
            }
            if (lstSegDia12.size() > 0 && lstSegDia11.size() == 0) {
                MensajesHelper.mostrarMensajeInfo(getActivity(), String.format(
                        getResources().getString(R.string.msj_aviso_requerido_dia_seguimiento_sin_completar),
                        String.valueOf("11")),
                        getActivity().getResources().getString(R.string.title_estudio_sostenible), null);
                return false;
            }

            if (lstSegDia13.size() > 0 && lstSegDia12.size() == 0) {
                MensajesHelper.mostrarMensajeInfo(getActivity(), String.format(
                        getResources().getString(R.string.msj_aviso_requerido_dia_seguimiento_sin_completar),
                        String.valueOf("12")),
                        getActivity().getResources().getString(R.string.title_estudio_sostenible), null);
                return false;
            }
            if (lstSegDia14.size() > 0 && lstSegDia13.size() == 0) {
                MensajesHelper.mostrarMensajeInfo(getActivity(), String.format(
                        getResources().getString(R.string.msj_aviso_requerido_dia_seguimiento_sin_completar),
                        String.valueOf("13")),
                        getActivity().getResources().getString(R.string.title_estudio_sostenible), null);
                return false;
            }
            if (lstSegDia15.size() > 0 && lstSegDia14.size() == 0) {
                MensajesHelper.mostrarMensajeInfo(getActivity(), String.format(
                        getResources().getString(R.string.msj_aviso_requerido_dia_seguimiento_sin_completar),
                        String.valueOf("14")),
                        getActivity().getResources().getString(R.string.title_estudio_sostenible), null);
                return false;
            }
            if (lstSegDia16.size() > 0 && lstSegDia15.size() == 0) {
                MensajesHelper.mostrarMensajeInfo(getActivity(), String.format(
                        getResources().getString(R.string.msj_aviso_requerido_dia_seguimiento_sin_completar),
                        String.valueOf("15")),
                        getActivity().getResources().getString(R.string.title_estudio_sostenible), null);
                return false;
            }
            if (lstSegDia17.size() > 0 && lstSegDia16.size() == 0) {
                MensajesHelper.mostrarMensajeInfo(getActivity(), String.format(
                        getResources().getString(R.string.msj_aviso_requerido_dia_seguimiento_sin_completar),
                        String.valueOf("16")),
                        getActivity().getResources().getString(R.string.title_estudio_sostenible), null);
                return false;
            }
            if (lstSegDia18.size() > 0 && lstSegDia17.size() == 0) {
                MensajesHelper.mostrarMensajeInfo(getActivity(), String.format(
                        getResources().getString(R.string.msj_aviso_requerido_dia_seguimiento_sin_completar),
                        String.valueOf("17")),
                        getActivity().getResources().getString(R.string.title_estudio_sostenible), null);
                return false;
            }
            if (lstSegDia19.size() > 0 && lstSegDia18.size() == 0) {
                MensajesHelper.mostrarMensajeInfo(getActivity(), String.format(
                        getResources().getString(R.string.msj_aviso_requerido_dia_seguimiento_sin_completar),
                        String.valueOf("18")),
                        getActivity().getResources().getString(R.string.title_estudio_sostenible), null);
                return false;
            }
            if (lstSegDia20.size() > 0 && lstSegDia19.size() == 0) {
                MensajesHelper.mostrarMensajeInfo(getActivity(), String.format(
                        getResources().getString(R.string.msj_aviso_requerido_dia_seguimiento_sin_completar),
                        String.valueOf("19")),
                        getActivity().getResources().getString(R.string.title_estudio_sostenible), null);
                return false;
            }
            if (lstSegDia21.size() > 0 && lstSegDia20.size() == 0) {
                MensajesHelper.mostrarMensajeInfo(getActivity(), String.format(
                        getResources().getString(R.string.msj_aviso_requerido_dia_seguimiento_sin_completar),
                        String.valueOf("20")),
                        getActivity().getResources().getString(R.string.title_estudio_sostenible), null);
                return false;
            }
            if (lstSegDia22.size() > 0 && lstSegDia21.size() == 0) {
                MensajesHelper.mostrarMensajeInfo(getActivity(), String.format(
                        getResources().getString(R.string.msj_aviso_requerido_dia_seguimiento_sin_completar),
                        String.valueOf("21")),
                        getActivity().getResources().getString(R.string.title_estudio_sostenible), null);
                return false;
            }
            if (lstSegDia23.size() > 0 && lstSegDia22.size() == 0) {
                MensajesHelper.mostrarMensajeInfo(getActivity(), String.format(
                        getResources().getString(R.string.msj_aviso_requerido_dia_seguimiento_sin_completar),
                        String.valueOf("22")),
                        getActivity().getResources().getString(R.string.title_estudio_sostenible), null);
                return false;
            }
            if (lstSegDia24.size() > 0 && lstSegDia23.size() == 0) {
                MensajesHelper.mostrarMensajeInfo(getActivity(), String.format(
                        getResources().getString(R.string.msj_aviso_requerido_dia_seguimiento_sin_completar),
                        String.valueOf("23")),
                        getActivity().getResources().getString(R.string.title_estudio_sostenible), null);
                return false;
            }
            if (lstSegDia25.size() > 0 && lstSegDia24.size() == 0) {
                MensajesHelper.mostrarMensajeInfo(getActivity(), String.format(
                        getResources().getString(R.string.msj_aviso_requerido_dia_seguimiento_sin_completar),
                        String.valueOf("24")),
                        getActivity().getResources().getString(R.string.title_estudio_sostenible), null);
                return false;
            }
            if (lstSegDia26.size() > 0 && lstSegDia25.size() == 0) {
                MensajesHelper.mostrarMensajeInfo(getActivity(), String.format(
                        getResources().getString(R.string.msj_aviso_requerido_dia_seguimiento_sin_completar),
                        String.valueOf("25")),
                        getActivity().getResources().getString(R.string.title_estudio_sostenible), null);
                return false;
            }
            if (lstSegDia27.size() > 0 && lstSegDia26.size() == 0) {
                MensajesHelper.mostrarMensajeInfo(getActivity(), String.format(
                        getResources().getString(R.string.msj_aviso_requerido_dia_seguimiento_sin_completar),
                        String.valueOf("26")),
                        getActivity().getResources().getString(R.string.title_estudio_sostenible), null);
                return false;
            }
            if (lstSegDia28.size() > 0 && lstSegDia27.size() == 0) {
                MensajesHelper.mostrarMensajeInfo(getActivity(), String.format(
                        getResources().getString(R.string.msj_aviso_requerido_dia_seguimiento_sin_completar),
                        String.valueOf("27")),
                        getActivity().getResources().getString(R.string.title_estudio_sostenible), null);
                return false;
            }
            return true;
        }

        /**
         * Metodo que llama servicio para cerrar seguimiento de influenza
         */
        private void cerrarHojaInfluenza() {

            if (mSeguimientoInfluenzaActivity.mCodExp > 0 || mSeguimientoInfluenzaActivity.mNumSeg > 0) {
                if (mSeguimientoInfluenzaActivity.mCerrarHojaSeguimientoTask == null ||
                        mSeguimientoInfluenzaActivity.mCerrarHojaSeguimientoTask.getStatus() == CerrarHojaSeguimientoTask.Status.FINISHED) {
                    HojaInfluenzaDTO hojaInfluenza = new HojaInfluenzaDTO();

                    hojaInfluenza.setCodExpediente(mSeguimientoInfluenzaActivity.mCodExp);
                    hojaInfluenza.setNumHojaSeguimiento(mSeguimientoInfluenzaActivity.mNumSeg);
                    hojaInfluenza.setFif(((EditText) getActivity().findViewById(R.id.edtxtFIF)).getText().toString());
                    hojaInfluenza.setFis(((EditText) getActivity().findViewById(R.id.edtxtFIS)).getText().toString());
                    hojaInfluenza.setFechaCierre(Calendar.getInstance());
                    hojaInfluenza.setCerrado('S');

                    ArrayList<SeguimientoInfluenzaDTO> lstSeg = new ArrayList<>();
                    int cont = 0;
                    for (SeguimientoInfluenzaDTO seguimientoInfluenza : mSeguimientoInfluenzaActivity.nuevaListaSegInfluenza) {
                        if (!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFechaSeguimiento())) {
                            cont++;
                            if ((seguimientoInfluenza.getUsuarioMedico() > 0) &&
                                    !StringUtils.isNullOrEmpty(seguimientoInfluenza.getFaltaEscuela()) &&
                                    !StringUtils.isNullOrEmpty(seguimientoInfluenza.getQuedoEnCama()) &&
                                    !StringUtils.isNullOrEmpty(String.valueOf(seguimientoInfluenza.getCongestionNasa())) &&
                                    !StringUtils.isNullOrEmpty(String.valueOf(seguimientoInfluenza.getConsultaInicial())) &&
                                    !StringUtils.isNullOrEmpty(String.valueOf(seguimientoInfluenza.getDificultadRespirar())) &&
                                    !StringUtils.isNullOrEmpty(String.valueOf(seguimientoInfluenza.getDolorArticular())) &&
                                    !StringUtils.isNullOrEmpty(String.valueOf(seguimientoInfluenza.getDolorCabeza())) &&
                                    !StringUtils.isNullOrEmpty(String.valueOf(seguimientoInfluenza.getDolorGarganta())) &&
                                    !StringUtils.isNullOrEmpty(String.valueOf(seguimientoInfluenza.getDolorMuscular())) &&
                                    !StringUtils.isNullOrEmpty(String.valueOf(seguimientoInfluenza.getDolorOido())) &&
                                    !StringUtils.isNullOrEmpty(String.valueOf(seguimientoInfluenza.getFaltaApetito())) &&
                                    !StringUtils.isNullOrEmpty(String.valueOf(seguimientoInfluenza.getFiebre())) &&
                                    !StringUtils.isNullOrEmpty(String.valueOf(seguimientoInfluenza.getRespiracionRapida())) &&
                                    !StringUtils.isNullOrEmpty(String.valueOf(seguimientoInfluenza.getSecrecionNasal())) &&
                                    !StringUtils.isNullOrEmpty(String.valueOf(seguimientoInfluenza.getTos())) &&
                                    /********/
                                    !StringUtils.isNullOrEmpty(String.valueOf(seguimientoInfluenza.getCuadroConfusional())) &&
                                    !StringUtils.isNullOrEmpty(String.valueOf(seguimientoInfluenza.getCuadroNeurologico())) &&
                                    !StringUtils.isNullOrEmpty(String.valueOf(seguimientoInfluenza.getConfusionMental())) &&
                                    !StringUtils.isNullOrEmpty(String.valueOf(seguimientoInfluenza.getAnosmia())) &&
                                    !StringUtils.isNullOrEmpty(String.valueOf(seguimientoInfluenza.getAgeusia())) &&
                                    !StringUtils.isNullOrEmpty(String.valueOf(seguimientoInfluenza.getMareo())) &&
                                    !StringUtils.isNullOrEmpty(String.valueOf(seguimientoInfluenza.getIctus())) &&
                                    !StringUtils.isNullOrEmpty(String.valueOf(seguimientoInfluenza.getSincope()))

                            ) {
                                lstSeg.add(seguimientoInfluenza);
                            } else {
                                MensajesHelper.mostrarMensajeInfo(getActivity(), String.format(
                                        getResources().getString(R.string.msj_aviso_requerido_dia_seguimiento),
                                        String.valueOf(seguimientoInfluenza.getControlDia())),
                                        getActivity().getResources().getString(R.string.title_estudio_sostenible), null);
                                return;
                            }
                        }

                        if (cont == 0) {
                            MensajesHelper.mostrarMensajeInfo(getActivity(), String.format(
                                    getResources().getString(R.string.msj_aviso_requerido_dia_seguimiento),
                                    String.valueOf(seguimientoInfluenza.getControlDia())),
                                    getActivity().getResources().getString(R.string.title_estudio_sostenible), null);
                            return;
                        }
                    }

                    hojaInfluenza.setLstSeguimientoInfluenza(lstSeg);
                    /* Obteniendo el usuario logeado para enviarlo a guardar cuando la hoja se cierre
                     * Fecha: 22/04/2020 */
                    String user = currentUser;
                    mSeguimientoInfluenzaActivity.mCerrarHojaSeguimientoTask = (CerrarHojaSeguimientoTask) new
                            CerrarHojaSeguimientoTask(mSeguimientoInfluenzaActivity).execute(hojaInfluenza, user);


                }
            } else {
                MensajesHelper.mostrarMensajeInfo(getActivity(), String.format(
                        getResources().getString(R.string.msj_cierre_campos_requeridos)),
                        getActivity().getResources().getString(R.string.title_estudio_sostenible), null);
                return;
            }
        }

        /*Metodo para hacer la seleccion de la impresora*/
        private void showAlertDialogInfluenza() {
            final AlertDialog.Builder alertDialog = new AlertDialog.Builder(CONTEXT);
            alertDialog.setTitle("Seleccioné la Impresora");
            String[] items = {"Consultorio Médico","Consultorio Respiratorio"};
            int checkedItem = 2;
            alertDialog.setSingleChoiceItems(items, checkedItem, new DialogInterface.OnClickListener() {
                @Override
                public void onClick(DialogInterface dialog, int which) {
                    switch (which) {
                        case 0:
                            Toast.makeText(CONTEXT, "Impresión enviada al Consultorio Médico", Toast.LENGTH_LONG).show();
                            ImprimirHojaSeguimientoaPdf(consultorioMedico);
                            dialog.cancel();
                            break;
                        case 1:
                            Toast.makeText(CONTEXT, "Impresión enviada al Consultorio Respiratorio", Toast.LENGTH_LONG).show();
                            ImprimirHojaSeguimientoaPdf(consultorioResp);
                            dialog.cancel();
                            break;
                        default:
                            break;
                    }
                }
            });
            AlertDialog alert = alertDialog.create();
            alert.setCanceledOnTouchOutside(true);
            alert.show();
        }


        /***
         * Metodo para llamar servicio que imprime el seguimiento influenza.
         */
        private void ImprimirHojaSeguimientoaPdf(final int consultorio) {
            /*Creando una tarea asincrona*/
            AsyncTask<Void, Void, Void> ImprimirHojaSeguimientoaPdf = new AsyncTask<Void, Void, Void>() {
                private ProgressDialog PD;
                private ConnectivityManager CM = (ConnectivityManager) getActivity().getSystemService(Context.CONNECTIVITY_SERVICE);
                private NetworkInfo NET_INFO = CM.getActiveNetworkInfo();
                private SeguimientoInfluenzaWS SEGUIMIENTO = new SeguimientoInfluenzaWS(getResources());
                private ErrorDTO RESPUESTA = new ErrorDTO();

                @Override
                protected void onPreExecute() {
                    PD = new ProgressDialog(getActivity());
                    PD.setTitle(getResources().getString(R.string.title_obteniendo));
                    PD.setMessage(getResources().getString(R.string.msj_espere_por_favor));
                    PD.setCancelable(false);
                    PD.setIndeterminate(true);
                    PD.show();
                }

                @Override
                protected Void doInBackground(Void... params) {
                    if (NET_INFO != null && NET_INFO.isConnected()) {
                        RESPUESTA = SEGUIMIENTO.ImprimirHojaSeguimientoPdf(mSeguimientoInfluenzaActivity.mNumSeg, consultorio);
                    }

                    return null;
                }

                @Override
                protected void onPostExecute(Void result) {
                    PD.dismiss();
                    try {
                        if (RESPUESTA.getCodigoError().intValue() == 0) {
                            MensajesHelper.mostrarMensajeOk(getActivity(),
                                    RESPUESTA.getMensajeError(), getResources().getString(
                                            R.string.title_estudio_sostenible), null);
                        } /*else if (RESPUESTA.getCodigoError().intValue() == 1) {
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    RESPUESTA.getMensajeError(),getResources().getString(
                                            R.string.title_estudio_sostenible), null);
                        }*/ else {
                            MensajesHelper.mostrarMensajeError(getActivity(),
                                    RESPUESTA.getMensajeError(), getResources().getString(
                                            R.string.title_estudio_sostenible), null);
                        }
                        /*MensajesHelper.mostrarMensajeInfo(getActivity(),
                                "Se envio la Hoja de seguimiento a impresión", getResources().getString(
                                        R.string.app_name), null);*/

                    } catch (IllegalArgumentException iae) {
                        iae.printStackTrace();
                    } catch (NullPointerException npe) {
                        npe.printStackTrace();
                    }
                    /*catch(Exception e){
                        MensajesHelper.mostrarMensajeInfo(getActivity(),
                                "Ocurrio un problema al intentar imprimir", getResources().getString(
                                        R.string.app_name), null);
                    }*/

                }
            };
            ImprimirHojaSeguimientoaPdf.execute((Void[]) null);
        }


        /***
         * Metodo para llamar el servicio que obtiene el seguimiento influenza PDF.
         */
        private void obtenerSeguimientoInflunzaPdf() {
            /*Creando una tarea asincrona*/
            AsyncTask<Void, Void, Void> seginfluenzapdf = new AsyncTask<Void, Void, Void>() {
                private ProgressDialog PD;
                private ConnectivityManager CM = (ConnectivityManager) getActivity().getSystemService(Context.CONNECTIVITY_SERVICE);
                private NetworkInfo NET_INFO = CM.getActiveNetworkInfo();
                private SeguimientoInfluenzaWS SEGINFWS = new SeguimientoInfluenzaWS(getResources());

                @Override
                protected void onPreExecute() {
                    PD = new ProgressDialog(getActivity());
                    PD.setTitle(getResources().getString(R.string.title_obteniendo));
                    PD.setMessage(getResources().getString(R.string.msj_espere_por_favor));
                    PD.setCancelable(false);
                    PD.setIndeterminate(true);
                    PD.show();
                }

                @Override
                protected Void doInBackground(Void... params) {
                    if (NET_INFO != null && NET_INFO.isConnected()) {
                        RESPUESTA = SEGINFWS.getSeguimientoInfluenzaPdf(mSeguimientoInfluenzaActivity.mNumSeg);
                    }

                    return null;
                }

                @Override
                protected void onPostExecute(Void result) {
                    PD.dismiss();

                    try {

                        File file = new File("/sdcard/SeguimientoInfluenza.pdf");
                        FileOutputStream fos = new FileOutputStream(file);
                        String filepath = "/sdcard/SeguimientoInfluenza.pdf";
                        OutputStream pdffos = new FileOutputStream(filepath);
                        pdffos.write(RESPUESTA);
                        pdffos.flush();
                        pdffos.close();


                        if (file.exists()) {
                            Uri path = Uri.fromFile(file);
                            Intent intent = new Intent(Intent.ACTION_VIEW);
                            intent.setDataAndType(path, "application/pdf");
                            intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
                            startActivity(intent);
                        }
                    } catch (Exception e) {
                        e.printStackTrace();
                    }

                }
            };
            seginfluenzapdf.execute((Void[]) null);

        }

        public static void llamadoListaInicialMedicoServicio() {

            if (mSeguimientoInfluenzaActivity.mObtenerMedicosTask == null ||
                    mSeguimientoInfluenzaActivity.mObtenerMedicosTask.getStatus() == AsyncTask.Status.FINISHED) {
                mSeguimientoInfluenzaActivity.mObtenerMedicosTask = new AsyncTask<Void, Void, Void>() {
                    private ProgressDialog PD;
                    private ConnectivityManager CM = (ConnectivityManager) CONTEXT.getSystemService(Context.CONNECTIVITY_SERVICE);

                    private NetworkInfo NET_INFO = CM.getActiveNetworkInfo();

                    private ConsultaWS CONSULTAWS = new ConsultaWS(CONTEXT.getResources());

                    @Override
                    protected void onPreExecute() {
                        PD = new ProgressDialog(CONTEXT);
                        PD.setTitle(CONTEXT.getResources().getString(R.string.title_obteniendo));
                        PD.setMessage(CONTEXT.getResources().getString(R.string.msj_espere_por_favor));
                        PD.setCancelable(false);
                        PD.setIndeterminate(true);
                        PD.show();
                    }

                    @Override
                    protected Void doInBackground(Void... params) {
                        if (NET_INFO != null && NET_INFO.isConnected()) {
                            try {
                                if (!esCargaInicial) {
                                    RESPUESTAMEDICO = CONSULTAWS.getListaMedicos(textoBusquedaMedico, true);
                                } else {
                                    RESPUESTAMEDICO = CONSULTAWS.getListaMedicos(true);
                                }
                            } catch (Exception e) {
                                MensajesHelper.mostrarMensajeError(CONTEXT,
                                        e.getMessage(), CONTEXT.getResources().getString(
                                                R.string.app_name), null);

                            }

                        } else {
                            RESPUESTAMEDICO.setCodigoError(Long.parseLong("3"));
                            RESPUESTAMEDICO.setMensajeError(CONTEXT.getResources().getString(R.string.msj_no_tiene_conexion));
                        }

                        return null;
                    }

                    @Override
                    protected void onPostExecute(Void result) {
                        PD.dismiss();
                        if (RESPUESTAMEDICO.getCodigoError().intValue() == 0) {
                            MedicosDTO diagTO = new MedicosDTO();
                            ArrayList<MedicosDTO> diagMedico = new ArrayList<>();
                            diagTO.setPresentaCodigoPersonal(true);
                            diagTO.setIdMedico((short) 0);
                            diagTO.setNombreMedico("Seleccione Medico");
                            diagTO.setCodigoPersonal("Seleccione Medico");
                            diagMedico.add(diagTO);
                            diagMedico.addAll(RESPUESTAMEDICO.getLstResultado());

                            adapterMedico1 = new ArrayAdapter<>(CONTEXT, R.layout.simple_spinner_dropdown_item, diagMedico);
                            adapterMedico1.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);

                            adapterMedico2 = new ArrayAdapter<>(CONTEXT, R.layout.simple_spinner_dropdown_item, diagMedico);
                            adapterMedico2.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);

                            adapterMedico3 = new ArrayAdapter<>(CONTEXT, R.layout.simple_spinner_dropdown_item, diagMedico);
                            adapterMedico3.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);

                            adapterMedico4 = new ArrayAdapter<>(CONTEXT, R.layout.simple_spinner_dropdown_item, diagMedico);
                            adapterMedico4.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);

                            adapterMedico5 = new ArrayAdapter<>(CONTEXT, R.layout.simple_spinner_dropdown_item, diagMedico);
                            adapterMedico5.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);

                            adapterMedico6 = new ArrayAdapter<>(CONTEXT, R.layout.simple_spinner_dropdown_item, diagMedico);
                            adapterMedico6.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);

                            adapterMedico7 = new ArrayAdapter<>(CONTEXT, R.layout.simple_spinner_dropdown_item, diagMedico);
                            adapterMedico7.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);

                            adapterMedico8 = new ArrayAdapter<>(CONTEXT, R.layout.simple_spinner_dropdown_item, diagMedico);
                            adapterMedico8.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);

                            adapterMedico9 = new ArrayAdapter<>(CONTEXT, R.layout.simple_spinner_dropdown_item, diagMedico);
                            adapterMedico9.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);

                            adapterMedico10 = new ArrayAdapter<>(CONTEXT, R.layout.simple_spinner_dropdown_item, diagMedico);
                            adapterMedico10.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);

                            adapterMedico11 = new ArrayAdapter<>(CONTEXT, R.layout.simple_spinner_dropdown_item, diagMedico);
                            adapterMedico11.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);

                            adapterMedico12 = new ArrayAdapter<>(CONTEXT, R.layout.simple_spinner_dropdown_item, diagMedico);
                            adapterMedico12.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);

                            adapterMedico13 = new ArrayAdapter<>(CONTEXT, R.layout.simple_spinner_dropdown_item, diagMedico);
                            adapterMedico13.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);

                            adapterMedico14 = new ArrayAdapter<>(CONTEXT, R.layout.simple_spinner_dropdown_item, diagMedico);
                            adapterMedico14.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);

                            adapterMedico15 = new ArrayAdapter<>(CONTEXT, R.layout.simple_spinner_dropdown_item, diagMedico);
                            adapterMedico15.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);

                            adapterMedico16 = new ArrayAdapter<>(CONTEXT, R.layout.simple_spinner_dropdown_item, diagMedico);
                            adapterMedico16.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);

                            adapterMedico17 = new ArrayAdapter<>(CONTEXT, R.layout.simple_spinner_dropdown_item, diagMedico);
                            adapterMedico17.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);

                            adapterMedico18 = new ArrayAdapter<>(CONTEXT, R.layout.simple_spinner_dropdown_item, diagMedico);
                            adapterMedico18.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);

                            adapterMedico19 = new ArrayAdapter<>(CONTEXT, R.layout.simple_spinner_dropdown_item, diagMedico);
                            adapterMedico19.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);

                            adapterMedico20 = new ArrayAdapter<>(CONTEXT, R.layout.simple_spinner_dropdown_item, diagMedico);
                            adapterMedico20.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);

                            adapterMedico21 = new ArrayAdapter<>(CONTEXT, R.layout.simple_spinner_dropdown_item, diagMedico);
                            adapterMedico21.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);

                            adapterMedico22 = new ArrayAdapter<>(CONTEXT, R.layout.simple_spinner_dropdown_item, diagMedico);
                            adapterMedico22.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);

                            adapterMedico23 = new ArrayAdapter<>(CONTEXT, R.layout.simple_spinner_dropdown_item, diagMedico);
                            adapterMedico23.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);

                            adapterMedico24 = new ArrayAdapter<>(CONTEXT, R.layout.simple_spinner_dropdown_item, diagMedico);
                            adapterMedico24.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);

                            adapterMedico25 = new ArrayAdapter<>(CONTEXT, R.layout.simple_spinner_dropdown_item, diagMedico);
                            adapterMedico25.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);

                            adapterMedico26 = new ArrayAdapter<>(CONTEXT, R.layout.simple_spinner_dropdown_item, diagMedico);
                            adapterMedico26.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);

                            adapterMedico27 = new ArrayAdapter<>(CONTEXT, R.layout.simple_spinner_dropdown_item, diagMedico);
                            adapterMedico27.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);

                            adapterMedico28 = new ArrayAdapter<>(CONTEXT, R.layout.simple_spinner_dropdown_item, diagMedico);
                            adapterMedico28.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);

                            if (mPagerAdapter != null && mSeguimientoInfluenzaActivity.mCodExp > 0 &&
                                    mSeguimientoInfluenzaActivity.mNumSeg > 0) {
                                mPagerAdapter.notifyDataSetChanged();
                            }

                        } else if (RESPUESTAMEDICO.getCodigoError().intValue() != 999) {
                            MensajesHelper.mostrarMensajeInfo(CONTEXT,
                                    RESPUESTAMEDICO.getMensajeError(), CONTEXT.getResources().getString(
                                            R.string.app_name), null);

                        } else {
                            MensajesHelper.mostrarMensajeError(CONTEXT,
                                    RESPUESTAMEDICO.getMensajeError(), CONTEXT.getResources().getString(
                                            R.string.app_name), null);
                        }
                    }
                };
                mSeguimientoInfluenzaActivity.mObtenerMedicosTask.execute((Void[]) null);
            }
        }

        public class SegumientoPagerAdapter extends FragmentPagerAdapter {

            public SegumientoPagerAdapter(FragmentManager fm) {
                super(fm);
            }

            @Override
            public int getCount() {
                return 28;
            }
            /*public int getCount() {
                return 12;
            }*/

            @Override
            public Fragment getItem(int position) {
                return DiaFragment.create(position + 1);
            }

            @Override
            public int getItemPosition(Object object) {
                return POSITION_NONE;
            }

            @Override
            public Object instantiateItem(ViewGroup container, int position) {
                DiaFragment fragment = (DiaFragment) super.instantiateItem(container, position);
                return fragment;
            }

            @Override
            public CharSequence getPageTitle(int position) {
                switch (position) {
                    case 0:
                        // The first section of the app is the most interesting -- it offers
                        // a launchpad into the other demonstrations in this example application.
                        return getResources().getString(R.string.label_dia1);
                    case 1:
                        return getResources().getString(R.string.label_dia2);
                    case 2:
                        return getResources().getString(R.string.label_dia3);
                    case 3:
                        return getResources().getString(R.string.label_dia4);
                    case 4:
                        return getResources().getString(R.string.label_dia5);
                    case 5:
                        return getResources().getString(R.string.label_dia6);
                    case 6:
                        return getResources().getString(R.string.label_dia7);
                    case 7:
                        return getResources().getString(R.string.label_dia8);
                    case 8:
                        return getResources().getString(R.string.label_dia9);
                    case 9:
                        return getResources().getString(R.string.label_dia10);
                    case 10:
                        return getResources().getString(R.string.label_dia11);
                    case 11:
                        return getResources().getString(R.string.label_dia12);
                    case 12:
                        return getResources().getString(R.string.label_dia13); /*Nuevos dias agregados 18/06/2020 SC */
                    case 13:
                        return getResources().getString(R.string.label_dia14);
                    case 14:
                        return getResources().getString(R.string.label_dia15);
                    case 15:
                        return getResources().getString(R.string.label_dia16);
                    case 16:
                        return getResources().getString(R.string.label_dia17);
                    case 17:
                        return getResources().getString(R.string.label_dia18);
                    case 18:
                        return getResources().getString(R.string.label_dia19);
                    case 19:
                        return getResources().getString(R.string.label_dia20);
                    case 20:
                        return getResources().getString(R.string.label_dia21);
                    case 21:
                        return getResources().getString(R.string.label_dia22);
                    case 22:
                        return getResources().getString(R.string.label_dia23);
                    case 23:
                        return getResources().getString(R.string.label_dia24);
                    case 24:
                        return getResources().getString(R.string.label_dia25);
                    case 25:
                        return getResources().getString(R.string.label_dia26);
                    case 26:
                        return getResources().getString(R.string.label_dia27);
                    case 27:
                        return getResources().getString(R.string.label_dia28);
                }
                return "Section " + (position + 1);
            }
        }

        public static class DiaFragment extends Fragment implements BuscarDialogMedico.DialogListener {
            public static final String ARG_PAGE = "ARG_PAGE";

            private int mPage;
            private Fragment mCorrienteFragmento;

            public static DiaFragment create(int page) {
                Bundle args = new Bundle();
                args.putInt(ARG_PAGE, page);
                DiaFragment fragment = new DiaFragment();
                fragment.setArguments(args);
                return fragment;
            }

            @Override
            public void onCreate(Bundle savedInstanceState) {
                super.onCreate(savedInstanceState);
                mPage = getArguments().getInt(ARG_PAGE);
                mCorrienteFragmento = this;
            }

            @Override
            public View onCreateView(LayoutInflater inflater, ViewGroup container,
                                     Bundle savedInstanceState) {

                mSeguimientoInfluenzaActivity.adapter = ArrayAdapter.createFromResource(getActivity(),
                        R.array.seguimiento_array, android.R.layout.simple_spinner_item);

                mSeguimientoInfluenzaActivity.adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);

                View view = inflater.inflate(R.layout.fragment_seguimiento_dia_1, container, false);

                if (mPage == 2) {
                    view = inflater.inflate(R.layout.fragment_seguimiento_dia_2, container, false);
                } else if (mPage == 3) {
                    view = inflater.inflate(R.layout.fragment_seguimiento_dia_3, container, false);
                } else if (mPage == 4) {
                    view = inflater.inflate(R.layout.fragment_seguimiento_dia_4, container, false);
                } else if (mPage == 5) {
                    view = inflater.inflate(R.layout.fragment_seguimiento_dia_5, container, false);
                } else if (mPage == 6) {
                    view = inflater.inflate(R.layout.fragment_seguimiento_dia_6, container, false);
                } else if (mPage == 7) {
                    view = inflater.inflate(R.layout.fragment_seguimiento_dia_7, container, false);
                } else if (mPage == 8) {
                    view = inflater.inflate(R.layout.fragment_seguimiento_dia_8, container, false);
                } else if (mPage == 9) {
                    view = inflater.inflate(R.layout.fragment_seguimiento_dia_9, container, false);
                } else if (mPage == 10) {
                    view = inflater.inflate(R.layout.fragment_seguimiento_dia_10, container, false);
                } else if (mPage == 11) {
                    view = inflater.inflate(R.layout.fragment_seguimiento_dia_11, container, false);
                } else if (mPage == 12) {
                    view = inflater.inflate(R.layout.fragment_seguimiento_dia_12, container, false);
                } else if (mPage == 13) {
                    view = inflater.inflate(R.layout.fragment_seguimiento_dia_13, container, false);
                } else if (mPage == 14) {
                    view = inflater.inflate(R.layout.fragment_seguimiento_dia_14, container, false);
                } else if (mPage == 15) {
                    view = inflater.inflate(R.layout.fragment_seguimiento_dia_15, container, false);
                } else if (mPage == 16) {
                    view = inflater.inflate(R.layout.fragment_seguimiento_dia_16, container, false);
                } else if (mPage == 17) {
                    view = inflater.inflate(R.layout.fragment_seguimiento_dia_17, container, false);
                } else if (mPage == 18) {
                    view = inflater.inflate(R.layout.fragment_seguimiento_dia_18, container, false);
                } else if (mPage == 19) {
                    view = inflater.inflate(R.layout.fragment_seguimiento_dia_19, container, false);
                } else if (mPage == 20) {
                    view = inflater.inflate(R.layout.fragment_seguimiento_dia_20, container, false);
                } else if (mPage == 21) {
                    view = inflater.inflate(R.layout.fragment_seguimiento_dia_21, container, false);
                } else if (mPage == 22) {
                    view = inflater.inflate(R.layout.fragment_seguimiento_dia_22, container, false);
                } else if (mPage == 23) {
                    view = inflater.inflate(R.layout.fragment_seguimiento_dia_23, container, false);
                } else if (mPage == 24) {
                    view = inflater.inflate(R.layout.fragment_seguimiento_dia_24, container, false);
                } else if (mPage == 25) {
                    view = inflater.inflate(R.layout.fragment_seguimiento_dia_25, container, false);
                } else if (mPage == 26) {
                    view = inflater.inflate(R.layout.fragment_seguimiento_dia_26, container, false);
                } else if (mPage == 27) {
                    view = inflater.inflate(R.layout.fragment_seguimiento_dia_27, container, false);
                } else if (mPage == 28) {
                    view = inflater.inflate(R.layout.fragment_seguimiento_dia_28, container, false);
                }
                return view;
            }

            @Override
            public void onActivityCreated(Bundle savedInstanceState) {
                super.onActivityCreated(savedInstanceState);
                establecerBotones();
                establecerBotonesCleanerFechaSeg();
                establerOnClikFechasSeguimientos();

                if (mPage == 1) {
                    cargaSpinerMedicos();
                    if (mSeguimientoInfluenzaActivity.adapter != null) {
                        llenarDia1Spn();
                    }
                } else if (mPage == 2) {
                    cargaSpinerMedicos();
                    if (mSeguimientoInfluenzaActivity.adapter != null) {
                        llenarDia2Spn();
                    }
                } else if (mPage == 3) {
                    cargaSpinerMedicos();
                    if (mSeguimientoInfluenzaActivity.adapter != null) {
                        llenarDia3Spn();
                    }
                } else if (mPage == 4) {
                    cargaSpinerMedicos();
                    if (mSeguimientoInfluenzaActivity.adapter != null) {
                        llenarDia4Spn();
                    }
                } else if (mPage == 5) {
                    cargaSpinerMedicos();
                    if (mSeguimientoInfluenzaActivity.adapter != null) {
                        llenarDia5Spn();
                    }
                } else if (mPage == 6) {
                    cargaSpinerMedicos();
                    if (mSeguimientoInfluenzaActivity.adapter != null) {
                        llenarDia6Spn();
                    }
                } else if (mPage == 7) {
                    cargaSpinerMedicos();
                    if (mSeguimientoInfluenzaActivity.adapter != null) {
                        llenarDia7Spn();
                    }
                } else if (mPage == 8) {
                    cargaSpinerMedicos();
                    if (mSeguimientoInfluenzaActivity.adapter != null) {
                        llenarDia8Spn();
                    }
                } else if (mPage == 9) {
                    cargaSpinerMedicos();
                    if (mSeguimientoInfluenzaActivity.adapter != null) {
                        llenarDia9Spn();
                    }
                } else if (mPage == 10) {
                    cargaSpinerMedicos();
                    if (mSeguimientoInfluenzaActivity.adapter != null) {
                        llenarDia10Spn();
                    }
                } else if (mPage == 11) {
                    cargaSpinerMedicos();
                    if (mSeguimientoInfluenzaActivity.adapter != null) {
                        llenarDia11Spn();
                    }
                } else if (mPage == 12) {
                    cargaSpinerMedicos();
                    if (mSeguimientoInfluenzaActivity.adapter != null) {
                        llenarDia12Spn();
                    }
                } else if (mPage == 13) {
                    cargaSpinerMedicos();
                    if (mSeguimientoInfluenzaActivity.adapter != null) {
                        llenarDia13Spn();
                    }
                } else if (mPage == 14) {
                    cargaSpinerMedicos();
                    if (mSeguimientoInfluenzaActivity.adapter != null) {
                        llenarDia14Spn();
                    }
                } else if (mPage == 15) {
                    cargaSpinerMedicos();
                    if (mSeguimientoInfluenzaActivity.adapter != null) {
                        llenarDia15Spn();
                    }
                } else if (mPage == 16) {
                    cargaSpinerMedicos();
                    if (mSeguimientoInfluenzaActivity.adapter != null) {
                        llenarDia16Spn();
                    }
                } else if (mPage == 17) {
                    cargaSpinerMedicos();
                    if (mSeguimientoInfluenzaActivity.adapter != null) {
                        llenarDia17Spn();
                    }
                } else if (mPage == 18) {
                    cargaSpinerMedicos();
                    if (mSeguimientoInfluenzaActivity.adapter != null) {
                        llenarDia18Spn();
                    }
                } else if (mPage == 19) {
                    cargaSpinerMedicos();
                    if (mSeguimientoInfluenzaActivity.adapter != null) {
                        llenarDia19Spn();
                    }
                } else if (mPage == 20) {
                    cargaSpinerMedicos();
                    if (mSeguimientoInfluenzaActivity.adapter != null) {
                        llenarDia20Spn();
                    }
                } else if (mPage == 21) {
                    cargaSpinerMedicos();
                    if (mSeguimientoInfluenzaActivity.adapter != null) {
                        llenarDia21Spn();
                    }
                } else if (mPage == 22) {
                    cargaSpinerMedicos();
                    if (mSeguimientoInfluenzaActivity.adapter != null) {
                        llenarDia22Spn();
                    }
                } else if (mPage == 23) {
                    cargaSpinerMedicos();
                    if (mSeguimientoInfluenzaActivity.adapter != null) {
                        llenarDia23Spn();
                    }
                } else if (mPage == 24) {
                    cargaSpinerMedicos();
                    if (mSeguimientoInfluenzaActivity.adapter != null) {
                        llenarDia24Spn();
                    }
                } else if (mPage == 25) {
                    cargaSpinerMedicos();
                    if (mSeguimientoInfluenzaActivity.adapter != null) {
                        llenarDia25Spn();
                    }
                } else if (mPage == 26) {
                    cargaSpinerMedicos();
                    if (mSeguimientoInfluenzaActivity.adapter != null) {
                        llenarDia26Spn();
                    }
                } else if (mPage == 27) {
                    cargaSpinerMedicos();
                    if (mSeguimientoInfluenzaActivity.adapter != null) {
                        llenarDia27Spn();
                    }
                } else if (mPage == 28) {
                    cargaSpinerMedicos();
                    if (mSeguimientoInfluenzaActivity.adapter != null) {
                        llenarDia28Spn();
                    }
                }
                establerCargaIU();
            }

            /****
             * Metodo que controla el click del boton buscar del Dialog de busqueda.
             * @param dialog, Objeto
             */
            @Override
            public void onDialogAceptClick(DialogFragment dialog) {

                // User touched the dialog's positive button
                EditText etxtBuscar = (EditText) dialog.getDialog().findViewById(R.id.etxtBuscar);
                Toast.makeText(dialog.getActivity(), "Buscando al médico: " + etxtBuscar.getText(), Toast.LENGTH_LONG).show();

                if (!StringUtils.isNullOrEmpty(etxtBuscar.getText().toString())) {
                    textoBusquedaMedico = etxtBuscar.getText().toString();
                    llamadoListaMedicoServicio();

                } else {
                    MensajesHelper.mostrarMensajeInfo(getActivity(),
                            "Ingrese un texto valido", getResources().getString(
                                    R.string.app_name), null);
                }

            }

            @Override
            public void onDialogCancelClick(DialogFragment dialog) {

            }

            public void establecerBotonesCleanerFechaSeg() {
                //botones para limpiar la fecha de seguimiento
                switch (mPage) {
                    case 1:
                        ImageButton imgLimpiarSeguimiento1 = (ImageButton) getActivity().findViewById(R.id.imgLimpiarSeguimiento1);
                        imgLimpiarSeguimiento1.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                limpiarControlesTab();
                            }
                        });
                        break;
                    case 2:
                        ImageButton imgLimpiarSeguimiento2 = (ImageButton) getActivity().findViewById(R.id.imgLimpiarSeguimiento2);
                        imgLimpiarSeguimiento2.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                limpiarControlesTab();
                            }
                        });
                        break;
                    case 3:
                        ImageButton imgLimpiarSeguimiento3 = (ImageButton) getActivity().findViewById(R.id.imgLimpiarSeguimiento3);
                        imgLimpiarSeguimiento3.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                limpiarControlesTab();
                            }
                        });
                        break;
                    case 4:
                        ImageButton imgLimpiarSeguimiento4 = (ImageButton) getActivity().findViewById(R.id.imgLimpiarSeguimiento4);
                        imgLimpiarSeguimiento4.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                limpiarControlesTab();
                            }
                        });
                        break;
                    case 5:
                        ImageButton imgLimpiarSeguimiento5 = (ImageButton) getActivity().findViewById(R.id.imgLimpiarSeguimiento5);
                        imgLimpiarSeguimiento5.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                limpiarControlesTab();
                            }
                        });
                        break;
                    case 6:
                        ImageButton imgLimpiarSeguimiento6 = (ImageButton) getActivity().findViewById(R.id.imgLimpiarSeguimiento6);
                        imgLimpiarSeguimiento6.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                limpiarControlesTab();
                            }
                        });
                        break;
                    case 7:
                        ImageButton imgLimpiarSeguimiento7 = (ImageButton) getActivity().findViewById(R.id.imgLimpiarSeguimiento7);
                        imgLimpiarSeguimiento7.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                limpiarControlesTab();
                            }
                        });
                        break;
                    case 8:
                        ImageButton imgLimpiarSeguimiento8 = (ImageButton) getActivity().findViewById(R.id.imgLimpiarSeguimiento8);
                        imgLimpiarSeguimiento8.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                limpiarControlesTab();
                            }
                        });
                        break;
                    case 9:
                        ImageButton imgLimpiarSeguimiento9 = (ImageButton) getActivity().findViewById(R.id.imgLimpiarSeguimiento9);
                        imgLimpiarSeguimiento9.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                limpiarControlesTab();
                            }
                        });
                        break;
                    case 10:
                        ImageButton imgLimpiarSeguimiento10 = (ImageButton) getActivity().findViewById(R.id.imgLimpiarSeguimiento10);
                        imgLimpiarSeguimiento10.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                limpiarControlesTab();
                            }
                        });
                        break;
                    case 11:
                        ImageButton imgLimpiarSeguimiento11 = (ImageButton) getActivity().findViewById(R.id.imgLimpiarSeguimiento11);
                        imgLimpiarSeguimiento11.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                limpiarControlesTab();
                            }
                        });
                        break;
                    case 12:
                        ImageButton imgLimpiarSeguimiento12 = (ImageButton) getActivity().findViewById(R.id.imgLimpiarSeguimiento12);
                        imgLimpiarSeguimiento12.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                limpiarControlesTab();
                            }
                        });
                        break;
                    case 13:
                        ImageButton imgLimpiarSeguimiento13 = (ImageButton) getActivity().findViewById(R.id.imgLimpiarSeguimiento13);
                        imgLimpiarSeguimiento13.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                limpiarControlesTab();
                            }
                        });
                        break;
                    case 14:
                        ImageButton imgLimpiarSeguimiento14 = (ImageButton) getActivity().findViewById(R.id.imgLimpiarSeguimiento14);
                        imgLimpiarSeguimiento14.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                limpiarControlesTab();
                            }
                        });
                        break;
                    case 15:
                        ImageButton imgLimpiarSeguimiento15 = (ImageButton) getActivity().findViewById(R.id.imgLimpiarSeguimiento15);
                        imgLimpiarSeguimiento15.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                limpiarControlesTab();
                            }
                        });
                        break;
                    case 16:
                        ImageButton imgLimpiarSeguimiento16 = (ImageButton) getActivity().findViewById(R.id.imgLimpiarSeguimiento16);
                        imgLimpiarSeguimiento16.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                limpiarControlesTab();
                            }
                        });
                        break;
                    case 17:
                        ImageButton imgLimpiarSeguimiento17 = (ImageButton) getActivity().findViewById(R.id.imgLimpiarSeguimiento17);
                        imgLimpiarSeguimiento17.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                limpiarControlesTab();
                            }
                        });
                        break;
                    case 18:
                        ImageButton imgLimpiarSeguimiento18 = (ImageButton) getActivity().findViewById(R.id.imgLimpiarSeguimiento18);
                        imgLimpiarSeguimiento18.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                limpiarControlesTab();
                            }
                        });
                        break;
                    case 19:
                        ImageButton imgLimpiarSeguimiento19 = (ImageButton) getActivity().findViewById(R.id.imgLimpiarSeguimiento19);
                        imgLimpiarSeguimiento19.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                limpiarControlesTab();
                            }
                        });
                        break;
                    case 20:
                        ImageButton imgLimpiarSeguimiento20 = (ImageButton) getActivity().findViewById(R.id.imgLimpiarSeguimiento20);
                        imgLimpiarSeguimiento20.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                limpiarControlesTab();
                            }
                        });
                        break;
                    case 21:
                        ImageButton imgLimpiarSeguimiento21 = (ImageButton) getActivity().findViewById(R.id.imgLimpiarSeguimiento21);
                        imgLimpiarSeguimiento21.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                limpiarControlesTab();
                            }
                        });
                        break;
                    case 22:
                        ImageButton imgLimpiarSeguimiento22 = (ImageButton) getActivity().findViewById(R.id.imgLimpiarSeguimiento22);
                        imgLimpiarSeguimiento22.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                limpiarControlesTab();
                            }
                        });
                        break;
                    case 23:
                        ImageButton imgLimpiarSeguimiento23 = (ImageButton) getActivity().findViewById(R.id.imgLimpiarSeguimiento23);
                        imgLimpiarSeguimiento23.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                limpiarControlesTab();
                            }
                        });
                        break;
                    case 24:
                        ImageButton imgLimpiarSeguimiento24 = (ImageButton) getActivity().findViewById(R.id.imgLimpiarSeguimiento24);
                        imgLimpiarSeguimiento24.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                limpiarControlesTab();
                            }
                        });
                        break;
                    case 25:
                        ImageButton imgLimpiarSeguimiento25 = (ImageButton) getActivity().findViewById(R.id.imgLimpiarSeguimiento25);
                        imgLimpiarSeguimiento25.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                limpiarControlesTab();
                            }
                        });
                        break;
                    case 26:
                        ImageButton imgLimpiarSeguimiento26 = (ImageButton) getActivity().findViewById(R.id.imgLimpiarSeguimiento26);
                        imgLimpiarSeguimiento26.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                limpiarControlesTab();
                            }
                        });
                        break;
                    case 27:
                        ImageButton imgLimpiarSeguimiento27 = (ImageButton) getActivity().findViewById(R.id.imgLimpiarSeguimiento27);
                        imgLimpiarSeguimiento27.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                limpiarControlesTab();
                            }
                        });
                        break;
                    case 28:
                        ImageButton imgLimpiarSeguimiento28 = (ImageButton) getActivity().findViewById(R.id.imgLimpiarSeguimiento28);
                        imgLimpiarSeguimiento28.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                limpiarControlesTab();
                            }
                        });
                        break;

                }
            }

            // Funcion para confirmar el cambio de todos los valores del seguimiento influenza
            public void confirmation(final int value) {
                try {
                    DialogInterface.OnClickListener questionDialogClickListener = new DialogInterface.OnClickListener() {
                        @Override
                        public void onClick(DialogInterface dialog, int which) {
                            switch (which) {
                                case DialogInterface.BUTTON_POSITIVE:
                                    setValuesSintomas(value);
                                    break;
                                case DialogInterface.BUTTON_NEGATIVE:
                                    break;
                            }
                        }
                    };

                    switch (value) {
                        case 1:
                            MensajesHelper.mostrarMensajeYesNo(CONTEXT,
                                    String.format(getResources().getString(R.string.msg_change_flu_yes2), mPage), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    questionDialogClickListener);
                            break;

                        case 2:
                            MensajesHelper.mostrarMensajeYesNo(CONTEXT,
                                    String.format(getResources().getString(R.string.msg_change_flu_no2), mPage), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    questionDialogClickListener);
                            break;

                        case 3:
                            MensajesHelper.mostrarMensajeYesNo(CONTEXT,
                                    String.format(getResources().getString(R.string.msg_change_flu_desc2), mPage), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    questionDialogClickListener);
                            break;
                        case 4:
                            MensajesHelper.mostrarMensajeYesNo(CONTEXT,
                                    String.format(getResources().getString(R.string.msg_change_flu_no_aplica2), mPage), getResources().getString(
                                            R.string.title_estudio_sostenible),
                                    questionDialogClickListener);
                            break;
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                    MensajesHelper.mostrarMensajeError(CONTEXT, e.getMessage(), getString(R.string.title_estudio_sostenible), null);
                }

            }

            // Funcion para cambiar todos los valores del seguimiento influenza
            public void setValuesSintomas(int value) {
                switch (mPage) {
                    case 1:
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila1)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila2)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila3)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila4)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila5)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila6)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila7)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila8)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila9)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila10)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila11)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila12)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila13)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila14)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila15)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila16)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila17)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila18)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila19)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila20)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila21)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila22)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila23)).setSelection(value);
                        if (value != 0) {
                            loadSpinners(value);
                        }
                        break;
                    case 2:
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila1)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila2)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila3)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila4)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila5)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila6)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila7)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila8)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila9)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila10)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila11)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila12)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila13)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila14)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila15)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila16)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila17)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila18)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila19)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila20)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila21)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila22)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila23)).setSelection(value);
                        if (value != 0) {
                            loadSpinners(value);
                        }
                        break;
                    case 3:
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila1)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila2)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila3)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila4)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila5)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila6)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila7)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila8)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila9)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila10)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila11)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila12)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila13)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila14)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila15)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila16)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila17)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila18)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila19)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila20)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila21)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila22)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila23)).setSelection(value);
                        if (value != 0) {
                            loadSpinners(value);
                        }
                        break;
                    case 4:
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila1)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila2)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila3)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila4)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila5)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila6)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila7)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila8)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila9)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila10)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila11)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila12)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila13)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila14)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila15)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila16)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila17)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila18)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila19)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila20)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila21)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila22)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila23)).setSelection(value);
                        if (value != 0) {
                            loadSpinners(value);
                        }
                        break;
                    case 5:
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila1)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila2)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila3)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila4)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila5)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila6)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila7)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila8)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila9)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila10)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila11)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila12)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila13)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila14)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila15)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila16)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila17)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila18)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila19)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila20)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila21)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila22)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila23)).setSelection(value);
                        if (value != 0) {
                            loadSpinners(value);
                        }
                        break;
                    case 6:
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila1)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila2)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila3)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila4)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila5)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila6)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila7)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila8)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila9)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila10)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila11)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila12)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila13)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila14)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila15)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila16)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila17)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila18)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila19)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila20)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila21)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila22)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila23)).setSelection(value);
                        if (value != 0) {
                            loadSpinners(value);
                        }
                        break;
                    case 7:
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila1)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila2)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila3)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila4)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila5)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila6)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila7)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila8)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila9)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila10)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila11)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila12)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila13)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila14)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila15)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila16)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila17)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila18)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila19)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila20)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila21)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila22)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila23)).setSelection(value);
                        if (value != 0) {
                            loadSpinners(value);
                        }
                        break;
                    case 8:
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila1)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila2)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila3)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila4)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila5)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila6)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila7)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila8)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila9)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila10)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila11)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila12)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila13)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila14)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila15)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila16)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila17)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila18)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila19)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila20)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila21)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila22)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila23)).setSelection(value);
                        if (value != 0) {
                            loadSpinners(value);
                        }
                        break;
                    case 9:
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila1)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila2)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila3)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila4)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila5)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila6)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila7)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila8)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila9)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila10)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila11)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila12)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila13)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila14)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila15)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila16)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila17)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila18)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila19)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila20)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila21)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila22)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila23)).setSelection(value);
                        if (value != 0) {
                            loadSpinners(value);
                        }
                        break;
                    case 10:
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila1)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila2)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila3)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila4)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila5)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila6)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila7)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila8)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila9)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila10)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila11)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila12)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila13)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila14)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila15)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila16)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila17)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila18)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila19)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila20)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila21)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila22)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila23)).setSelection(value);
                        if (value != 0) {
                            loadSpinners(value);
                        }
                        break;
                    case 11:
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila1)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila2)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila3)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila4)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila5)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila6)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila7)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila8)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila9)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila10)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila11)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila12)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila13)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila14)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila15)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila16)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila17)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila18)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila19)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila20)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila21)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila22)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila23)).setSelection(value);
                        if (value != 0) {
                            loadSpinners(value);
                        }
                        break;
                    case 12:
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila1)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila2)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila3)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila4)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila5)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila6)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila7)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila8)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila9)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila10)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila11)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila12)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila13)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila14)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila15)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila16)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila17)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila18)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila19)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila20)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila21)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila22)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila23)).setSelection(value);
                        if (value != 0) {
                            loadSpinners(value);
                        }
                        break;
                    case 13:
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila1)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila2)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila3)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila4)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila5)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila6)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila7)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila8)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila9)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila10)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila11)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila12)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila13)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila14)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila15)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila16)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila17)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila18)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila19)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila20)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila21)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila22)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila23)).setSelection(value);
                        if (value != 0) {
                            loadSpinners(value);
                        }
                        break;
                    case 14:
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila1)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila2)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila3)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila4)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila5)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila6)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila7)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila8)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila9)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila10)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila11)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila12)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila13)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila14)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila15)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila16)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila17)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila18)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila19)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila20)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila21)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila22)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila23)).setSelection(value);
                        if (value != 0) {
                            loadSpinners(value);
                        }
                        break;
                    case 15:
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila1)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila2)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila3)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila4)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila5)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila6)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila7)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila8)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila9)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila10)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila11)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila12)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila13)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila14)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila15)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila16)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila17)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila18)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila19)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila20)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila21)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila22)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila23)).setSelection(value);
                        if (value != 0) {
                            loadSpinners(value);
                        }
                        break;
                    case 16:
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila1)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila2)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila3)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila4)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila5)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila6)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila7)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila8)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila9)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila10)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila11)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila12)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila13)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila14)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila15)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila16)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila17)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila18)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila19)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila20)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila21)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila22)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila23)).setSelection(value);
                        if (value != 0) {
                            loadSpinners(value);
                        }
                        break;
                    case 17:
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila1)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila2)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila3)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila4)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila5)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila6)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila7)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila8)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila9)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila10)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila11)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila12)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila13)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila14)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila15)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila16)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila17)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila18)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila19)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila20)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila21)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila22)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila23)).setSelection(value);
                        if (value != 0) {
                            loadSpinners(value);
                        }
                        break;
                    case 18:
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila1)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila2)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila3)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila4)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila5)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila6)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila7)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila8)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila9)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila10)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila11)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila12)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila13)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila14)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila15)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila16)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila17)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila18)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila19)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila20)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila21)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila22)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila23)).setSelection(value);
                        if (value != 0) {
                            loadSpinners(value);
                        }
                        break;
                    case 19:
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila1)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila2)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila3)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila4)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila5)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila6)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila7)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila8)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila9)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila10)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila11)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila12)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila13)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila14)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila15)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila16)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila17)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila18)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila19)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila20)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila21)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila22)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila23)).setSelection(value);
                        if (value != 0) {
                            loadSpinners(value);
                        }
                        break;
                    case 20:
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila1)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila2)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila3)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila4)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila5)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila6)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila7)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila8)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila9)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila10)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila11)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila12)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila13)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila14)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila15)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila16)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila17)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila18)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila19)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila20)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila21)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila22)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila23)).setSelection(value);
                        if (value != 0) {
                            loadSpinners(value);
                        }
                        break;
                    case 21:
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila1)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila2)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila3)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila4)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila5)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila6)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila7)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila8)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila9)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila10)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila11)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila12)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila13)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila14)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila15)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila16)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila17)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila18)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila19)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila20)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila21)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila22)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila23)).setSelection(value);
                        if (value != 0) {
                            loadSpinners(value);
                        }
                        break;
                    case 22:
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila1)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila2)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila3)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila4)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila5)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila6)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila7)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila8)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila9)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila10)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila11)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila12)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila13)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila14)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila15)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila16)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila17)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila18)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila19)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila20)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila21)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila22)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila23)).setSelection(value);
                        if (value != 0) {
                            loadSpinners(value);
                        }
                        break;
                    case 23:
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila1)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila2)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila3)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila4)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila5)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila6)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila7)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila8)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila9)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila10)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila11)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila12)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila13)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila14)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila15)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila16)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila17)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila18)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila19)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila20)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila21)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila22)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila23)).setSelection(value);
                        if (value != 0) {
                            loadSpinners(value);
                        }
                        break;
                    case 24:
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila1)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila2)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila3)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila4)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila5)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila6)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila7)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila8)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila9)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila10)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila11)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila12)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila13)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila14)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila15)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila16)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila17)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila18)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila19)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila20)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila21)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila22)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila23)).setSelection(value);
                        if (value != 0) {
                            loadSpinners(value);
                        }
                        break;
                    case 25:
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila1)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila2)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila3)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila4)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila5)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila6)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila7)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila8)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila9)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila10)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila11)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila12)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila13)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila14)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila15)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila16)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila17)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila18)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila19)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila20)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila21)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila22)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila23)).setSelection(value);
                        if (value != 0) {
                            loadSpinners(value);
                        }
                        break;
                    case 26:
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila1)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila2)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila3)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila4)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila5)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila6)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila7)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila8)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila9)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila10)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila11)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila12)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila13)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila14)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila15)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila16)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila17)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila18)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila19)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila20)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila21)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila22)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila23)).setSelection(value);
                        if (value != 0) {
                            loadSpinners(value);
                        }
                        break;
                    case 27:
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila1)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila2)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila3)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila4)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila5)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila6)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila7)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila8)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila9)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila10)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila11)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila12)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila13)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila14)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila15)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila16)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila17)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila18)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila19)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila20)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila21)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila22)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila23)).setSelection(value);
                        if (value != 0) {
                            loadSpinners(value);
                        }
                        break;
                    case 28:
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila1)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila2)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila3)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila4)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila5)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila6)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila7)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila8)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila9)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila10)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila11)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila12)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila13)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila14)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila15)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila16)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila17)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila18)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila19)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila20)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila21)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila22)).setSelection(value);
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila23)).setSelection(value);
                        if (value != 0) {
                            loadSpinners(value);
                        }
                        break;
                }
            }

            public void loadSpinners(int value) {
                cargarConsultaInicial(value);
                cargarFiebre(value);
                cargarTos(value);
                cargarSecrecionNasal(value);
                cargarDolorGarganta(value);
                cargarCongestionNasal(value);
                cargarDolorCabeza(value);
                cargarFaltaApetito(value);
                cargarDolorMuscular(value);
                cargarDolorArticular(value);
                cargarDolorOido(value);
                cargarRespiracionRapida(value);
                cargarDificultadRespirar(value);
                cargarFaltaEscuela(value);
                cargarQuedoEnCama(value);
                cargarCuadroNeurologico(value);
                cargarConfusionMental(value);
                cargarCuadroConfusional(value);
                cargarAnosmia(value);
                cargarAgeusia(value);
                cargarMareo(value);
                cargarIctus(value);
                cargarSincope(value);

            }

            public void establecerBotones() {
                //botones para la busqueda de los médicos
                switch (mPage) {
                    case 1:
                        ImageButton imgBusquedaMedico1 = (ImageButton) getActivity().findViewById(R.id.imgBusquedaMedico1);
                        imgBusquedaMedico1.setEnabled(false);
                        imgBusquedaMedico1.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                esCargaInicial = false;
                                BuscarDialogMedico DlogBuscar = new BuscarDialogMedico();
                                FragmentManager fm = getActivity().getSupportFragmentManager();
                                DlogBuscar.setTargetFragment(mCorrienteFragmento, 0);
                                DlogBuscar.show(fm, "Buscar");
                            }
                        });

                        TextView txtvPosSegFlu1 = (TextView) getActivity().findViewById(R.id.txtvPosSegFlu1);
                        TextView txtvNegSegFlu1 = (TextView) getActivity().findViewById(R.id.txtvNegSegFlu1);
                        TextView txtvDesSegFlu1 = (TextView) getActivity().findViewById(R.id.txtvDesSegFlu1);
                        TextView txtvNoAplicaSegFlu1 = (TextView) getActivity().findViewById(R.id.txtvNoAplicaSegFlu1);

                        txtvPosSegFlu1.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(1);
                            }
                        });

                        txtvNegSegFlu1.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(2);
                            }
                        });

                        txtvDesSegFlu1.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(3);
                            }
                        });

                        txtvNoAplicaSegFlu1.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(4);
                            }
                        });
                        break;
                    case 2:
                        ImageButton imgBusquedaMedico2 = (ImageButton) getActivity().findViewById(R.id.imgBusquedaMedico2);
                        imgBusquedaMedico2.setEnabled(false);
                        imgBusquedaMedico2.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                esCargaInicial = false;
                                BuscarDialogMedico DlogBuscar = new BuscarDialogMedico();
                                FragmentManager fm = getActivity().getSupportFragmentManager();
                                DlogBuscar.setTargetFragment(mCorrienteFragmento, 0);
                                DlogBuscar.show(fm, "Buscar");
                            }
                        });

                        TextView txtvPosSegFlu2 = (TextView) getActivity().findViewById(R.id.txtvPosSegFlu2);
                        TextView txtvNegSegFlu2 = (TextView) getActivity().findViewById(R.id.txtvNegSegFlu2);
                        TextView txtvDesSegFlu2 = (TextView) getActivity().findViewById(R.id.txtvDesSegFlu2);
                        TextView txtvNoAplicaSegFlu2 = (TextView) getActivity().findViewById(R.id.txtvNoAplicaSegFlu2);
                        txtvPosSegFlu2.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(1);
                            }
                        });

                        txtvNegSegFlu2.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(2);
                            }
                        });

                        txtvDesSegFlu2.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(3);
                            }
                        });

                        txtvNoAplicaSegFlu2.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(4);
                            }
                        });
                        break;
                    case 3:
                        ImageButton imgBusquedaMedico3 = (ImageButton) getActivity().findViewById(R.id.imgBusquedaMedico3);
                        imgBusquedaMedico3.setEnabled(false);
                        imgBusquedaMedico3.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                esCargaInicial = false;
                                BuscarDialogMedico DlogBuscar = new BuscarDialogMedico();
                                FragmentManager fm = getActivity().getSupportFragmentManager();
                                DlogBuscar.setTargetFragment(mCorrienteFragmento, 0);
                                DlogBuscar.show(fm, "Buscar");
                            }
                        });

                        TextView txtvPosSegFlu3 = (TextView) getActivity().findViewById(R.id.txtvPosSegFlu3);
                        TextView txtvNegSegFlu3 = (TextView) getActivity().findViewById(R.id.txtvNegSegFlu3);
                        TextView txtvDesSegFlu3 = (TextView) getActivity().findViewById(R.id.txtvDesSegFlu3);
                        TextView txtvNoAplicaSegFlu3 = (TextView) getActivity().findViewById(R.id.txtvNoAplicaSegFlu3);

                        txtvPosSegFlu3.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(1);
                            }
                        });

                        txtvNegSegFlu3.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(2);
                            }
                        });

                        txtvDesSegFlu3.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(3);
                            }
                        });

                        txtvNoAplicaSegFlu3.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(4);
                            }
                        });
                        break;
                    case 4:
                        ImageButton imgBusquedaMedico4 = (ImageButton) getActivity().findViewById(R.id.imgBusquedaMedico4);
                        imgBusquedaMedico4.setEnabled(false);
                        imgBusquedaMedico4.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                esCargaInicial = false;
                                BuscarDialogMedico DlogBuscar = new BuscarDialogMedico();
                                FragmentManager fm = getActivity().getSupportFragmentManager();
                                DlogBuscar.setTargetFragment(mCorrienteFragmento, 0);
                                DlogBuscar.show(fm, "Buscar");
                            }
                        });

                        TextView txtvPosSegFlu4 = (TextView) getActivity().findViewById(R.id.txtvPosSegFlu4);
                        TextView txtvNegSegFlu4 = (TextView) getActivity().findViewById(R.id.txtvNegSegFlu4);
                        TextView txtvDesSegFlu4 = (TextView) getActivity().findViewById(R.id.txtvDesSegFlu4);
                        TextView txtvNoAplicaSegFlu4 = (TextView) getActivity().findViewById(R.id.txtvNoAplicaSegFlu4);

                        txtvPosSegFlu4.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(1);
                            }
                        });

                        txtvNegSegFlu4.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(2);
                            }
                        });

                        txtvDesSegFlu4.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(3);
                            }
                        });

                        txtvNoAplicaSegFlu4.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(4);
                            }
                        });
                        break;
                    case 5:
                        ImageButton imgBusquedaMedico5 = (ImageButton) getActivity().findViewById(R.id.imgBusquedaMedico5);
                        imgBusquedaMedico5.setEnabled(false);
                        imgBusquedaMedico5.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                esCargaInicial = false;
                                BuscarDialogMedico DlogBuscar = new BuscarDialogMedico();
                                FragmentManager fm = getActivity().getSupportFragmentManager();
                                DlogBuscar.setTargetFragment(mCorrienteFragmento, 0);
                                DlogBuscar.show(fm, "Buscar");
                            }
                        });

                        TextView txtvPosSegFlu5 = (TextView) getActivity().findViewById(R.id.txtvPosSegFlu5);
                        TextView txtvNegSegFlu5 = (TextView) getActivity().findViewById(R.id.txtvNegSegFlu5);
                        TextView txtvDesSegFlu5 = (TextView) getActivity().findViewById(R.id.txtvDesSegFlu5);
                        TextView txtvNoAplicaSegFlu5 = (TextView) getActivity().findViewById(R.id.txtvNoAplicaSegFlu5);

                        txtvPosSegFlu5.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(1);
                            }
                        });

                        txtvNegSegFlu5.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(2);
                            }
                        });

                        txtvDesSegFlu5.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(3);
                            }
                        });

                        txtvNoAplicaSegFlu5.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(4);
                            }
                        });
                        break;
                    case 6:
                        ImageButton imgBusquedaMedico6 = (ImageButton) getActivity().findViewById(R.id.imgBusquedaMedico6);
                        imgBusquedaMedico6.setEnabled(false);
                        imgBusquedaMedico6.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                esCargaInicial = false;
                                BuscarDialogMedico DlogBuscar = new BuscarDialogMedico();
                                FragmentManager fm = getActivity().getSupportFragmentManager();
                                DlogBuscar.setTargetFragment(mCorrienteFragmento, 0);
                                DlogBuscar.show(fm, "Buscar");
                            }
                        });

                        TextView txtvPosSegFlu6 = (TextView) getActivity().findViewById(R.id.txtvPosSegFlu6);
                        TextView txtvNegSegFlu6 = (TextView) getActivity().findViewById(R.id.txtvNegSegFlu6);
                        TextView txtvDesSegFlu6 = (TextView) getActivity().findViewById(R.id.txtvDesSegFlu6);
                        TextView txtvNoAplicaSegFlu6 = (TextView) getActivity().findViewById(R.id.txtvNoAplicaSegFlu6);

                        txtvPosSegFlu6.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(1);
                            }
                        });

                        txtvNegSegFlu6.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(2);
                            }
                        });

                        txtvDesSegFlu6.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(3);
                            }
                        });

                        txtvNoAplicaSegFlu6.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(4);
                            }
                        });
                        break;
                    case 7:
                        ImageButton imgBusquedaMedico7 = (ImageButton) getActivity().findViewById(R.id.imgBusquedaMedico7);
                        imgBusquedaMedico7.setEnabled(false);
                        imgBusquedaMedico7.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                esCargaInicial = false;
                                BuscarDialogMedico DlogBuscar = new BuscarDialogMedico();
                                FragmentManager fm = getActivity().getSupportFragmentManager();
                                DlogBuscar.setTargetFragment(mCorrienteFragmento, 0);
                                DlogBuscar.show(fm, "Buscar");
                            }
                        });

                        TextView txtvPosSegFlu7 = (TextView) getActivity().findViewById(R.id.txtvPosSegFlu7);
                        TextView txtvNegSegFlu7 = (TextView) getActivity().findViewById(R.id.txtvNegSegFlu7);
                        TextView txtvDesSegFlu7 = (TextView) getActivity().findViewById(R.id.txtvDesSegFlu7);
                        TextView txtvNoAplicaSegFlu7 = (TextView) getActivity().findViewById(R.id.txtvNoAplicaSegFlu7);

                        txtvPosSegFlu7.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(1);
                            }
                        });

                        txtvNegSegFlu7.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(2);
                            }
                        });

                        txtvDesSegFlu7.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(3);
                            }
                        });

                        txtvNoAplicaSegFlu7.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(4);
                            }
                        });
                        break;
                    case 8:
                        ImageButton imgBusquedaMedico8 = (ImageButton) getActivity().findViewById(R.id.imgBusquedaMedico8);
                        imgBusquedaMedico8.setEnabled(false);
                        imgBusquedaMedico8.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                esCargaInicial = false;
                                BuscarDialogMedico DlogBuscar = new BuscarDialogMedico();
                                FragmentManager fm = getActivity().getSupportFragmentManager();
                                DlogBuscar.setTargetFragment(mCorrienteFragmento, 0);
                                DlogBuscar.show(fm, "Buscar");
                            }
                        });

                        TextView txtvPosSegFlu8 = (TextView) getActivity().findViewById(R.id.txtvPosSegFlu8);
                        TextView txtvNegSegFlu8 = (TextView) getActivity().findViewById(R.id.txtvNegSegFlu8);
                        TextView txtvDesSegFlu8 = (TextView) getActivity().findViewById(R.id.txtvDesSegFlu8);
                        TextView txtvNoAplicaSegFlu8 = (TextView) getActivity().findViewById(R.id.txtvNoAplicaSegFlu8);

                        txtvPosSegFlu8.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(1);
                            }
                        });

                        txtvNegSegFlu8.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(2);
                            }
                        });

                        txtvDesSegFlu8.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(3);
                            }
                        });

                        txtvNoAplicaSegFlu8.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(4);
                            }
                        });
                        break;

                    case 9:
                        ImageButton imgBusquedaMedico9 = (ImageButton) getActivity().findViewById(R.id.imgBusquedaMedico9);
                        imgBusquedaMedico9.setEnabled(false);
                        imgBusquedaMedico9.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                esCargaInicial = false;
                                BuscarDialogMedico DlogBuscar = new BuscarDialogMedico();
                                FragmentManager fm = getActivity().getSupportFragmentManager();
                                DlogBuscar.setTargetFragment(mCorrienteFragmento, 0);
                                DlogBuscar.show(fm, "Buscar");
                            }
                        });

                        TextView txtvPosSegFlu9 = (TextView) getActivity().findViewById(R.id.txtvPosSegFlu9);
                        TextView txtvNegSegFlu9 = (TextView) getActivity().findViewById(R.id.txtvNegSegFlu9);
                        TextView txtvDesSegFlu9 = (TextView) getActivity().findViewById(R.id.txtvDesSegFlu9);
                        TextView txtvNoAplicaSegFlu9 = (TextView) getActivity().findViewById(R.id.txtvNoAplicaSegFlu9);

                        txtvPosSegFlu9.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(1);
                            }
                        });

                        txtvNegSegFlu9.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(2);
                            }
                        });

                        txtvDesSegFlu9.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(3);
                            }
                        });

                        txtvNoAplicaSegFlu9.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(4);
                            }
                        });
                        break;

                    case 10:
                        ImageButton imgBusquedaMedico10 = (ImageButton) getActivity().findViewById(R.id.imgBusquedaMedico10);
                        imgBusquedaMedico10.setEnabled(false);
                        imgBusquedaMedico10.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                esCargaInicial = false;
                                BuscarDialogMedico DlogBuscar = new BuscarDialogMedico();
                                FragmentManager fm = getActivity().getSupportFragmentManager();
                                DlogBuscar.setTargetFragment(mCorrienteFragmento, 0);
                                DlogBuscar.show(fm, "Buscar");
                            }
                        });

                        TextView txtvPosSegFlu10 = (TextView) getActivity().findViewById(R.id.txtvPosSegFlu10);
                        TextView txtvNegSegFlu10 = (TextView) getActivity().findViewById(R.id.txtvNegSegFlu10);
                        TextView txtvDesSegFlu10 = (TextView) getActivity().findViewById(R.id.txtvDesSegFlu10);
                        TextView txtvNoAplicaSegFlu10 = (TextView) getActivity().findViewById(R.id.txtvNoAplicaSegFlu10);

                        txtvPosSegFlu10.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(1);
                            }
                        });

                        txtvNegSegFlu10.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(2);
                            }
                        });

                        txtvDesSegFlu10.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(3);
                            }
                        });

                        txtvNoAplicaSegFlu10.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(4);
                            }
                        });
                        break;
                    case 11:
                        ImageButton imgBusquedaMedico11 = (ImageButton) getActivity().findViewById(R.id.imgBusquedaMedico11);
                        imgBusquedaMedico11.setEnabled(false);
                        imgBusquedaMedico11.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                esCargaInicial = false;
                                BuscarDialogMedico DlogBuscar = new BuscarDialogMedico();
                                FragmentManager fm = getActivity().getSupportFragmentManager();
                                DlogBuscar.setTargetFragment(mCorrienteFragmento, 0);
                                DlogBuscar.show(fm, "Buscar");
                            }
                        });

                        TextView txtvPosSegFlu11 = (TextView) getActivity().findViewById(R.id.txtvPosSegFlu11);
                        TextView txtvNegSegFlu11 = (TextView) getActivity().findViewById(R.id.txtvNegSegFlu11);
                        TextView txtvDesSegFlu11 = (TextView) getActivity().findViewById(R.id.txtvDesSegFlu11);
                        TextView txtvNoAplicaSegFlu11 = (TextView) getActivity().findViewById(R.id.txtvNoAplicaSegFlu11);

                        txtvPosSegFlu11.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(1);
                            }
                        });

                        txtvNegSegFlu11.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(2);
                            }
                        });

                        txtvDesSegFlu11.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(3);
                            }
                        });

                        txtvNoAplicaSegFlu11.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(4);
                            }
                        });
                        break;

                    case 12:
                        ImageButton imgBusquedaMedico12 = (ImageButton) getActivity().findViewById(R.id.imgBusquedaMedico12);
                        imgBusquedaMedico12.setEnabled(false);
                        imgBusquedaMedico12.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                esCargaInicial = false;
                                BuscarDialogMedico DlogBuscar = new BuscarDialogMedico();
                                FragmentManager fm = getActivity().getSupportFragmentManager();
                                DlogBuscar.setTargetFragment(mCorrienteFragmento, 0);
                                DlogBuscar.show(fm, "Buscar");
                            }
                        });

                        TextView txtvPosSegFlu12 = (TextView) getActivity().findViewById(R.id.txtvPosSegFlu12);
                        TextView txtvNegSegFlu12 = (TextView) getActivity().findViewById(R.id.txtvNegSegFlu12);
                        TextView txtvDesSegFlu12 = (TextView) getActivity().findViewById(R.id.txtvDesSegFlu12);
                        TextView txtvNoAplicaSegFlu12 = (TextView) getActivity().findViewById(R.id.txtvNoAplicaSegFlu12);

                        txtvPosSegFlu12.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(1);
                            }
                        });

                        txtvNegSegFlu12.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(2);
                            }
                        });

                        txtvDesSegFlu12.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(3);
                            }
                        });

                        txtvNoAplicaSegFlu12.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(4);
                            }
                        });
                        break;
                    /*Nuevos componentes agregados para el Covid. SC*/
                    case 13:
                        ImageButton imgBusquedaMedico13 = (ImageButton) getActivity().findViewById(R.id.imgBusquedaMedico13);
                        imgBusquedaMedico13.setEnabled(false);
                        imgBusquedaMedico13.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                esCargaInicial = false;
                                BuscarDialogMedico DlogBuscar = new BuscarDialogMedico();
                                FragmentManager fm = getActivity().getSupportFragmentManager();
                                DlogBuscar.setTargetFragment(mCorrienteFragmento, 0);
                                DlogBuscar.show(fm, "Buscar");
                            }
                        });

                        TextView txtvPosSegFlu13 = (TextView) getActivity().findViewById(R.id.txtvPosSegFlu13);
                        TextView txtvNegSegFlu13 = (TextView) getActivity().findViewById(R.id.txtvNegSegFlu13);
                        TextView txtvDesSegFlu13 = (TextView) getActivity().findViewById(R.id.txtvDesSegFlu13);
                        TextView txtvNoAplicaSegFlu13 = (TextView) getActivity().findViewById(R.id.txtvNoAplicaSegFlu13);

                        txtvPosSegFlu13.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(1);
                            }
                        });

                        txtvNegSegFlu13.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(2);
                            }
                        });

                        txtvDesSegFlu13.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(3);
                            }
                        });

                        txtvNoAplicaSegFlu13.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(4);
                            }
                        });
                        break;
                    case 14:
                        ImageButton imgBusquedaMedico14 = (ImageButton) getActivity().findViewById(R.id.imgBusquedaMedico14);
                        imgBusquedaMedico14.setEnabled(false);
                        imgBusquedaMedico14.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                esCargaInicial = false;
                                BuscarDialogMedico DlogBuscar = new BuscarDialogMedico();
                                FragmentManager fm = getActivity().getSupportFragmentManager();
                                DlogBuscar.setTargetFragment(mCorrienteFragmento, 0);
                                DlogBuscar.show(fm, "Buscar");
                            }
                        });

                        TextView txtvPosSegFlu14 = (TextView) getActivity().findViewById(R.id.txtvPosSegFlu14);
                        TextView txtvNegSegFlu14 = (TextView) getActivity().findViewById(R.id.txtvNegSegFlu14);
                        TextView txtvDesSegFlu14 = (TextView) getActivity().findViewById(R.id.txtvDesSegFlu14);
                        TextView txtvNoAplicaSegFlu14 = (TextView) getActivity().findViewById(R.id.txtvNoAplicaSegFlu14);

                        txtvPosSegFlu14.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(1);
                            }
                        });

                        txtvNegSegFlu14.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(2);
                            }
                        });

                        txtvDesSegFlu14.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(3);
                            }
                        });

                        txtvNoAplicaSegFlu14.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(4);
                            }
                        });
                        break;
                    case 15:
                        ImageButton imgBusquedaMedico15 = (ImageButton) getActivity().findViewById(R.id.imgBusquedaMedico15);
                        imgBusquedaMedico15.setEnabled(false);
                        imgBusquedaMedico15.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                esCargaInicial = false;
                                BuscarDialogMedico DlogBuscar = new BuscarDialogMedico();
                                FragmentManager fm = getActivity().getSupportFragmentManager();
                                DlogBuscar.setTargetFragment(mCorrienteFragmento, 0);
                                DlogBuscar.show(fm, "Buscar");
                            }
                        });

                        TextView txtvPosSegFlu15 = (TextView) getActivity().findViewById(R.id.txtvPosSegFlu15);
                        TextView txtvNegSegFlu15 = (TextView) getActivity().findViewById(R.id.txtvNegSegFlu15);
                        TextView txtvDesSegFlu15 = (TextView) getActivity().findViewById(R.id.txtvDesSegFlu15);
                        TextView txtvNoAplicaSegFlu15 = (TextView) getActivity().findViewById(R.id.txtvNoAplicaSegFlu15);

                        txtvPosSegFlu15.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(1);
                            }
                        });

                        txtvNegSegFlu15.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(2);
                            }
                        });

                        txtvDesSegFlu15.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(3);
                            }
                        });

                        txtvNoAplicaSegFlu15.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(4);
                            }
                        });
                        break;
                    case 16:
                        ImageButton imgBusquedaMedico16 = (ImageButton) getActivity().findViewById(R.id.imgBusquedaMedico16);
                        imgBusquedaMedico16.setEnabled(false);
                        imgBusquedaMedico16.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                esCargaInicial = false;
                                BuscarDialogMedico DlogBuscar = new BuscarDialogMedico();
                                FragmentManager fm = getActivity().getSupportFragmentManager();
                                DlogBuscar.setTargetFragment(mCorrienteFragmento, 0);
                                DlogBuscar.show(fm, "Buscar");
                            }
                        });

                        TextView txtvPosSegFlu16 = (TextView) getActivity().findViewById(R.id.txtvPosSegFlu16);
                        TextView txtvNegSegFlu16 = (TextView) getActivity().findViewById(R.id.txtvNegSegFlu16);
                        TextView txtvDesSegFlu16 = (TextView) getActivity().findViewById(R.id.txtvDesSegFlu16);
                        TextView txtvNoAplicaSegFlu16 = (TextView) getActivity().findViewById(R.id.txtvNoAplicaSegFlu16);

                        txtvPosSegFlu16.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(1);
                            }
                        });

                        txtvNegSegFlu16.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(2);
                            }
                        });

                        txtvDesSegFlu16.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(3);
                            }
                        });

                        txtvNoAplicaSegFlu16.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(4);
                            }
                        });
                        break;
                    case 17:
                        ImageButton imgBusquedaMedico17 = (ImageButton) getActivity().findViewById(R.id.imgBusquedaMedico17);
                        imgBusquedaMedico17.setEnabled(false);
                        imgBusquedaMedico17.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                esCargaInicial = false;
                                BuscarDialogMedico DlogBuscar = new BuscarDialogMedico();
                                FragmentManager fm = getActivity().getSupportFragmentManager();
                                DlogBuscar.setTargetFragment(mCorrienteFragmento, 0);
                                DlogBuscar.show(fm, "Buscar");
                            }
                        });

                        TextView txtvPosSegFlu17 = (TextView) getActivity().findViewById(R.id.txtvPosSegFlu17);
                        TextView txtvNegSegFlu17 = (TextView) getActivity().findViewById(R.id.txtvNegSegFlu17);
                        TextView txtvDesSegFlu17 = (TextView) getActivity().findViewById(R.id.txtvDesSegFlu17);
                        TextView txtvNoAplicaSegFlu17 = (TextView) getActivity().findViewById(R.id.txtvNoAplicaSegFlu17);

                        txtvPosSegFlu17.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(1);
                            }
                        });

                        txtvNegSegFlu17.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(2);
                            }
                        });

                        txtvDesSegFlu17.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(3);
                            }
                        });

                        txtvNoAplicaSegFlu17.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(4);
                            }
                        });
                        break;
                    case 18:
                        ImageButton imgBusquedaMedico18 = (ImageButton) getActivity().findViewById(R.id.imgBusquedaMedico18);
                        imgBusquedaMedico18.setEnabled(false);
                        imgBusquedaMedico18.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                esCargaInicial = false;
                                BuscarDialogMedico DlogBuscar = new BuscarDialogMedico();
                                FragmentManager fm = getActivity().getSupportFragmentManager();
                                DlogBuscar.setTargetFragment(mCorrienteFragmento, 0);
                                DlogBuscar.show(fm, "Buscar");
                            }
                        });

                        TextView txtvPosSegFlu18 = (TextView) getActivity().findViewById(R.id.txtvPosSegFlu18);
                        TextView txtvNegSegFlu18 = (TextView) getActivity().findViewById(R.id.txtvNegSegFlu18);
                        TextView txtvDesSegFlu18 = (TextView) getActivity().findViewById(R.id.txtvDesSegFlu18);
                        TextView txtvNoAplicaSegFlu18 = (TextView) getActivity().findViewById(R.id.txtvNoAplicaSegFlu18);

                        txtvPosSegFlu18.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(1);
                            }
                        });

                        txtvNegSegFlu18.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(2);
                            }
                        });

                        txtvDesSegFlu18.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(3);
                            }
                        });

                        txtvNoAplicaSegFlu18.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(4);
                            }
                        });
                        break;
                    case 19:
                        ImageButton imgBusquedaMedico19 = (ImageButton) getActivity().findViewById(R.id.imgBusquedaMedico19);
                        imgBusquedaMedico19.setEnabled(false);
                        imgBusquedaMedico19.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                esCargaInicial = false;
                                BuscarDialogMedico DlogBuscar = new BuscarDialogMedico();
                                FragmentManager fm = getActivity().getSupportFragmentManager();
                                DlogBuscar.setTargetFragment(mCorrienteFragmento, 0);
                                DlogBuscar.show(fm, "Buscar");
                            }
                        });

                        TextView txtvPosSegFlu19 = (TextView) getActivity().findViewById(R.id.txtvPosSegFlu19);
                        TextView txtvNegSegFlu19 = (TextView) getActivity().findViewById(R.id.txtvNegSegFlu19);
                        TextView txtvDesSegFlu19 = (TextView) getActivity().findViewById(R.id.txtvDesSegFlu19);
                        TextView txtvNoAplicaSegFlu19 = (TextView) getActivity().findViewById(R.id.txtvNoAplicaSegFlu19);

                        txtvPosSegFlu19.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(1);
                            }
                        });

                        txtvNegSegFlu19.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(2);
                            }
                        });

                        txtvDesSegFlu19.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(3);
                            }
                        });

                        txtvNoAplicaSegFlu19.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(4);
                            }
                        });
                        break;
                    case 20:
                        ImageButton imgBusquedaMedico20 = (ImageButton) getActivity().findViewById(R.id.imgBusquedaMedico20);
                        imgBusquedaMedico20.setEnabled(false);
                        imgBusquedaMedico20.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                esCargaInicial = false;
                                BuscarDialogMedico DlogBuscar = new BuscarDialogMedico();
                                FragmentManager fm = getActivity().getSupportFragmentManager();
                                DlogBuscar.setTargetFragment(mCorrienteFragmento, 0);
                                DlogBuscar.show(fm, "Buscar");
                            }
                        });

                        TextView txtvPosSegFlu20 = (TextView) getActivity().findViewById(R.id.txtvPosSegFlu20);
                        TextView txtvNegSegFlu20 = (TextView) getActivity().findViewById(R.id.txtvNegSegFlu20);
                        TextView txtvDesSegFlu20 = (TextView) getActivity().findViewById(R.id.txtvDesSegFlu20);
                        TextView txtvNoAplicaSegFlu20 = (TextView) getActivity().findViewById(R.id.txtvNoAplicaSegFlu20);

                        txtvPosSegFlu20.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(1);
                            }
                        });

                        txtvNegSegFlu20.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(2);
                            }
                        });

                        txtvDesSegFlu20.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(3);
                            }
                        });

                        txtvNoAplicaSegFlu20.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(4);
                            }
                        });
                        break;
                    case 21:
                        ImageButton imgBusquedaMedico21 = (ImageButton) getActivity().findViewById(R.id.imgBusquedaMedico21);
                        imgBusquedaMedico21.setEnabled(false);
                        imgBusquedaMedico21.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                esCargaInicial = false;
                                BuscarDialogMedico DlogBuscar = new BuscarDialogMedico();
                                FragmentManager fm = getActivity().getSupportFragmentManager();
                                DlogBuscar.setTargetFragment(mCorrienteFragmento, 0);
                                DlogBuscar.show(fm, "Buscar");
                            }
                        });

                        TextView txtvPosSegFlu21 = (TextView) getActivity().findViewById(R.id.txtvPosSegFlu21);
                        TextView txtvNegSegFlu21 = (TextView) getActivity().findViewById(R.id.txtvNegSegFlu21);
                        TextView txtvDesSegFlu21 = (TextView) getActivity().findViewById(R.id.txtvDesSegFlu21);
                        TextView txtvNoAplicaSegFlu21 = (TextView) getActivity().findViewById(R.id.txtvNoAplicaSegFlu21);

                        txtvPosSegFlu21.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(1);
                            }
                        });

                        txtvNegSegFlu21.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(2);
                            }
                        });

                        txtvDesSegFlu21.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(3);
                            }
                        });

                        txtvNoAplicaSegFlu21.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(4);
                            }
                        });
                        break;
                    case 22:
                        ImageButton imgBusquedaMedico22 = (ImageButton) getActivity().findViewById(R.id.imgBusquedaMedico22);
                        imgBusquedaMedico22.setEnabled(false);
                        imgBusquedaMedico22.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                esCargaInicial = false;
                                BuscarDialogMedico DlogBuscar = new BuscarDialogMedico();
                                FragmentManager fm = getActivity().getSupportFragmentManager();
                                DlogBuscar.setTargetFragment(mCorrienteFragmento, 0);
                                DlogBuscar.show(fm, "Buscar");
                            }
                        });

                        TextView txtvPosSegFlu22 = (TextView) getActivity().findViewById(R.id.txtvPosSegFlu22);
                        TextView txtvNegSegFlu22 = (TextView) getActivity().findViewById(R.id.txtvNegSegFlu22);
                        TextView txtvDesSegFlu22 = (TextView) getActivity().findViewById(R.id.txtvDesSegFlu22);
                        TextView txtvNoAplicaSegFlu22 = (TextView) getActivity().findViewById(R.id.txtvNoAplicaSegFlu22);

                        txtvPosSegFlu22.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(1);
                            }
                        });

                        txtvNegSegFlu22.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(2);
                            }
                        });

                        txtvDesSegFlu22.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(3);
                            }
                        });

                        txtvNoAplicaSegFlu22.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(4);
                            }
                        });
                        break;
                    case 23:
                        ImageButton imgBusquedaMedico23 = (ImageButton) getActivity().findViewById(R.id.imgBusquedaMedico23);
                        imgBusquedaMedico23.setEnabled(false);
                        imgBusquedaMedico23.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                esCargaInicial = false;
                                BuscarDialogMedico DlogBuscar = new BuscarDialogMedico();
                                FragmentManager fm = getActivity().getSupportFragmentManager();
                                DlogBuscar.setTargetFragment(mCorrienteFragmento, 0);
                                DlogBuscar.show(fm, "Buscar");
                            }
                        });

                        TextView txtvPosSegFlu23 = (TextView) getActivity().findViewById(R.id.txtvPosSegFlu23);
                        TextView txtvNegSegFlu23 = (TextView) getActivity().findViewById(R.id.txtvNegSegFlu23);
                        TextView txtvDesSegFlu23 = (TextView) getActivity().findViewById(R.id.txtvDesSegFlu23);
                        TextView txtvNoAplicaSegFlu23 = (TextView) getActivity().findViewById(R.id.txtvNoAplicaSegFlu23);

                        txtvPosSegFlu23.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(1);
                            }
                        });

                        txtvNegSegFlu23.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(2);
                            }
                        });

                        txtvDesSegFlu23.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(3);
                            }
                        });

                        txtvNoAplicaSegFlu23.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(4);
                            }
                        });
                        break;
                    case 24:
                        ImageButton imgBusquedaMedico24 = (ImageButton) getActivity().findViewById(R.id.imgBusquedaMedico24);
                        imgBusquedaMedico24.setEnabled(false);
                        imgBusquedaMedico24.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                esCargaInicial = false;
                                BuscarDialogMedico DlogBuscar = new BuscarDialogMedico();
                                FragmentManager fm = getActivity().getSupportFragmentManager();
                                DlogBuscar.setTargetFragment(mCorrienteFragmento, 0);
                                DlogBuscar.show(fm, "Buscar");
                            }
                        });

                        TextView txtvPosSegFlu24 = (TextView) getActivity().findViewById(R.id.txtvPosSegFlu24);
                        TextView txtvNegSegFlu24 = (TextView) getActivity().findViewById(R.id.txtvNegSegFlu24);
                        TextView txtvDesSegFlu24 = (TextView) getActivity().findViewById(R.id.txtvDesSegFlu24);
                        TextView txtvNoAplicaSegFlu24 = (TextView) getActivity().findViewById(R.id.txtvNoAplicaSegFlu24);

                        txtvPosSegFlu24.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(1);
                            }
                        });

                        txtvNegSegFlu24.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(2);
                            }
                        });

                        txtvDesSegFlu24.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(3);
                            }
                        });

                        txtvNoAplicaSegFlu24.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(4);
                            }
                        });
                        break;
                    case 25:
                        ImageButton imgBusquedaMedico25 = (ImageButton) getActivity().findViewById(R.id.imgBusquedaMedico25);
                        imgBusquedaMedico25.setEnabled(false);
                        imgBusquedaMedico25.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                esCargaInicial = false;
                                BuscarDialogMedico DlogBuscar = new BuscarDialogMedico();
                                FragmentManager fm = getActivity().getSupportFragmentManager();
                                DlogBuscar.setTargetFragment(mCorrienteFragmento, 0);
                                DlogBuscar.show(fm, "Buscar");
                            }
                        });

                        TextView txtvPosSegFlu25 = (TextView) getActivity().findViewById(R.id.txtvPosSegFlu25);
                        TextView txtvNegSegFlu25 = (TextView) getActivity().findViewById(R.id.txtvNegSegFlu25);
                        TextView txtvDesSegFlu25 = (TextView) getActivity().findViewById(R.id.txtvDesSegFlu25);
                        TextView txtvNoAplicaSegFlu25 = (TextView) getActivity().findViewById(R.id.txtvNoAplicaSegFlu25);

                        txtvPosSegFlu25.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(1);
                            }
                        });

                        txtvNegSegFlu25.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(2);
                            }
                        });

                        txtvDesSegFlu25.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(3);
                            }
                        });

                        txtvNoAplicaSegFlu25.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(4);
                            }
                        });
                        break;
                    case 26:
                        ImageButton imgBusquedaMedico26 = (ImageButton) getActivity().findViewById(R.id.imgBusquedaMedico26);
                        imgBusquedaMedico26.setEnabled(false);
                        imgBusquedaMedico26.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                esCargaInicial = false;
                                BuscarDialogMedico DlogBuscar = new BuscarDialogMedico();
                                FragmentManager fm = getActivity().getSupportFragmentManager();
                                DlogBuscar.setTargetFragment(mCorrienteFragmento, 0);
                                DlogBuscar.show(fm, "Buscar");
                            }
                        });

                        TextView txtvPosSegFlu26 = (TextView) getActivity().findViewById(R.id.txtvPosSegFlu26);
                        TextView txtvNegSegFlu26 = (TextView) getActivity().findViewById(R.id.txtvNegSegFlu26);
                        TextView txtvDesSegFlu26 = (TextView) getActivity().findViewById(R.id.txtvDesSegFlu26);
                        TextView txtvNoAplicaSegFlu26 = (TextView) getActivity().findViewById(R.id.txtvNoAplicaSegFlu26);

                        txtvPosSegFlu26.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(1);
                            }
                        });

                        txtvNegSegFlu26.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(2);
                            }
                        });

                        txtvDesSegFlu26.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(3);
                            }
                        });

                        txtvNoAplicaSegFlu26.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(4);
                            }
                        });
                        break;
                    case 27:
                        ImageButton imgBusquedaMedico27 = (ImageButton) getActivity().findViewById(R.id.imgBusquedaMedico27);
                        imgBusquedaMedico27.setEnabled(false);
                        imgBusquedaMedico27.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                esCargaInicial = false;
                                BuscarDialogMedico DlogBuscar = new BuscarDialogMedico();
                                FragmentManager fm = getActivity().getSupportFragmentManager();
                                DlogBuscar.setTargetFragment(mCorrienteFragmento, 0);
                                DlogBuscar.show(fm, "Buscar");
                            }
                        });

                        TextView txtvPosSegFlu27 = (TextView) getActivity().findViewById(R.id.txtvPosSegFlu27);
                        TextView txtvNegSegFlu27 = (TextView) getActivity().findViewById(R.id.txtvNegSegFlu27);
                        TextView txtvDesSegFlu27 = (TextView) getActivity().findViewById(R.id.txtvDesSegFlu27);
                        TextView txtvNoAplicaSegFlu27 = (TextView) getActivity().findViewById(R.id.txtvNoAplicaSegFlu27);

                        txtvPosSegFlu27.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(1);
                            }
                        });

                        txtvNegSegFlu27.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(2);
                            }
                        });

                        txtvDesSegFlu27.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(3);
                            }
                        });

                        txtvNoAplicaSegFlu27.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(4);
                            }
                        });
                        break;
                    case 28:
                        ImageButton imgBusquedaMedico28 = (ImageButton) getActivity().findViewById(R.id.imgBusquedaMedico28);
                        imgBusquedaMedico28.setEnabled(false);
                        imgBusquedaMedico28.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                esCargaInicial = false;
                                BuscarDialogMedico DlogBuscar = new BuscarDialogMedico();
                                FragmentManager fm = getActivity().getSupportFragmentManager();
                                DlogBuscar.setTargetFragment(mCorrienteFragmento, 0);
                                DlogBuscar.show(fm, "Buscar");
                            }
                        });

                        TextView txtvPosSegFlu28 = (TextView) getActivity().findViewById(R.id.txtvPosSegFlu28);
                        TextView txtvNegSegFlu28 = (TextView) getActivity().findViewById(R.id.txtvNegSegFlu28);
                        TextView txtvDesSegFlu28 = (TextView) getActivity().findViewById(R.id.txtvDesSegFlu28);
                        TextView txtvNoAplicaSegFlu28 = (TextView) getActivity().findViewById(R.id.txtvNoAplicaSegFlu28);

                        txtvPosSegFlu28.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(1);
                            }
                        });

                        txtvNegSegFlu28.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(2);
                            }
                        });

                        txtvDesSegFlu28.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(3);
                            }
                        });

                        txtvNoAplicaSegFlu28.setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View view) {
                                confirmation(4);
                            }
                        });
                        break;
                }
            }

            /***
             * Establece el metodo que sera ejecutado al dar click sobre las fechas de seguimientos.
             */
            protected void establerOnClikFechasSeguimientos() {
                switch (mPage) {
                    case 1:
                        getActivity().findViewById(R.id.edtxtFechaSeguimiento1).setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View v) {
                                showDatePickerDialogFechaSeguimiento(v, R.id.edtxtFechaSeguimiento1);
                            }
                        });

                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento1)).setKeyListener(null);
                        break;
                    case 2:
                        getActivity().findViewById(R.id.edtxtFechaSeguimiento2).setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View v) {
                                showDatePickerDialogFechaSeguimiento(v, R.id.edtxtFechaSeguimiento2);
                            }
                        });

                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento2)).setKeyListener(null);
                        break;
                    case 3:
                        getActivity().findViewById(R.id.edtxtFechaSeguimiento3).setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View v) {
                                showDatePickerDialogFechaSeguimiento(v, R.id.edtxtFechaSeguimiento3);
                            }
                        });

                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento3)).setKeyListener(null);
                        break;
                    case 4:
                        getActivity().findViewById(R.id.edtxtFechaSeguimiento4).setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View v) {
                                showDatePickerDialogFechaSeguimiento(v, R.id.edtxtFechaSeguimiento4);
                            }
                        });

                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento4)).setKeyListener(null);
                        break;
                    case 5:
                        getActivity().findViewById(R.id.edtxtFechaSeguimiento5).setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View v) {
                                showDatePickerDialogFechaSeguimiento(v, R.id.edtxtFechaSeguimiento5);
                            }
                        });

                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento5)).setKeyListener(null);
                        break;
                    case 6:
                        getActivity().findViewById(R.id.edtxtFechaSeguimiento6).setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View v) {
                                showDatePickerDialogFechaSeguimiento(v, R.id.edtxtFechaSeguimiento6);
                            }
                        });

                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento6)).setKeyListener(null);
                        break;
                    case 7:
                        getActivity().findViewById(R.id.edtxtFechaSeguimiento7).setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View v) {
                                showDatePickerDialogFechaSeguimiento(v, R.id.edtxtFechaSeguimiento7);
                            }
                        });

                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento7)).setKeyListener(null);
                        break;
                    case 8:
                        getActivity().findViewById(R.id.edtxtFechaSeguimiento8).setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View v) {
                                showDatePickerDialogFechaSeguimiento(v, R.id.edtxtFechaSeguimiento8);
                            }
                        });

                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento8)).setKeyListener(null);
                        break;
                    case 9:
                        getActivity().findViewById(R.id.edtxtFechaSeguimiento9).setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View v) {
                                showDatePickerDialogFechaSeguimiento(v, R.id.edtxtFechaSeguimiento9);
                            }
                        });

                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento9)).setKeyListener(null);
                        break;
                    case 10:
                        getActivity().findViewById(R.id.edtxtFechaSeguimiento10).setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View v) {
                                showDatePickerDialogFechaSeguimiento(v, R.id.edtxtFechaSeguimiento10);
                            }
                        });

                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento10)).setKeyListener(null);
                        break;
                    case 11:
                        getActivity().findViewById(R.id.edtxtFechaSeguimiento11).setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View v) {
                                showDatePickerDialogFechaSeguimiento(v, R.id.edtxtFechaSeguimiento11);
                            }
                        });

                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento11)).setKeyListener(null);
                        break;
                    case 12:
                        getActivity().findViewById(R.id.edtxtFechaSeguimiento12).setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View v) {
                                showDatePickerDialogFechaSeguimiento(v, R.id.edtxtFechaSeguimiento12);
                            }
                        });

                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento12)).setKeyListener(null);
                        break;
                    /*Nuevos componentes agregados para maejar el Covid. SC*/
                    case 13:
                        getActivity().findViewById(R.id.edtxtFechaSeguimiento13).setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View v) {
                                showDatePickerDialogFechaSeguimiento(v, R.id.edtxtFechaSeguimiento13);
                            }
                        });

                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento13)).setKeyListener(null);
                        break;
                    case 14:
                        getActivity().findViewById(R.id.edtxtFechaSeguimiento14).setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View v) {
                                showDatePickerDialogFechaSeguimiento(v, R.id.edtxtFechaSeguimiento14);
                            }
                        });

                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento14)).setKeyListener(null);
                        break;
                    case 15:
                        getActivity().findViewById(R.id.edtxtFechaSeguimiento15).setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View v) {
                                showDatePickerDialogFechaSeguimiento(v, R.id.edtxtFechaSeguimiento15);
                            }
                        });

                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento15)).setKeyListener(null);
                        break;
                    case 16:
                        getActivity().findViewById(R.id.edtxtFechaSeguimiento16).setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View v) {
                                showDatePickerDialogFechaSeguimiento(v, R.id.edtxtFechaSeguimiento16);
                            }
                        });

                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento16)).setKeyListener(null);
                        break;
                    case 17:
                        getActivity().findViewById(R.id.edtxtFechaSeguimiento17).setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View v) {
                                showDatePickerDialogFechaSeguimiento(v, R.id.edtxtFechaSeguimiento17);
                            }
                        });

                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento17)).setKeyListener(null);
                        break;
                    case 18:
                        getActivity().findViewById(R.id.edtxtFechaSeguimiento18).setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View v) {
                                showDatePickerDialogFechaSeguimiento(v, R.id.edtxtFechaSeguimiento18);
                            }
                        });

                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento18)).setKeyListener(null);
                        break;
                    case 19:
                        getActivity().findViewById(R.id.edtxtFechaSeguimiento19).setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View v) {
                                showDatePickerDialogFechaSeguimiento(v, R.id.edtxtFechaSeguimiento19);
                            }
                        });

                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento19)).setKeyListener(null);
                        break;
                    case 20:
                        getActivity().findViewById(R.id.edtxtFechaSeguimiento20).setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View v) {
                                showDatePickerDialogFechaSeguimiento(v, R.id.edtxtFechaSeguimiento20);
                            }
                        });

                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento20)).setKeyListener(null);
                        break;
                    case 21:
                        getActivity().findViewById(R.id.edtxtFechaSeguimiento21).setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View v) {
                                showDatePickerDialogFechaSeguimiento(v, R.id.edtxtFechaSeguimiento21);
                            }
                        });

                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento21)).setKeyListener(null);
                        break;
                    case 22:
                        getActivity().findViewById(R.id.edtxtFechaSeguimiento22).setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View v) {
                                showDatePickerDialogFechaSeguimiento(v, R.id.edtxtFechaSeguimiento22);
                            }
                        });

                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento22)).setKeyListener(null);
                        break;
                    case 23:
                        getActivity().findViewById(R.id.edtxtFechaSeguimiento23).setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View v) {
                                showDatePickerDialogFechaSeguimiento(v, R.id.edtxtFechaSeguimiento23);
                            }
                        });

                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento23)).setKeyListener(null);
                        break;
                    case 24:
                        getActivity().findViewById(R.id.edtxtFechaSeguimiento24).setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View v) {
                                showDatePickerDialogFechaSeguimiento(v, R.id.edtxtFechaSeguimiento24);
                            }
                        });

                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento24)).setKeyListener(null);
                        break;
                    case 25:
                        getActivity().findViewById(R.id.edtxtFechaSeguimiento25).setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View v) {
                                showDatePickerDialogFechaSeguimiento(v, R.id.edtxtFechaSeguimiento25);
                            }
                        });

                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento25)).setKeyListener(null);
                        break;
                    case 26:
                        getActivity().findViewById(R.id.edtxtFechaSeguimiento26).setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View v) {
                                showDatePickerDialogFechaSeguimiento(v, R.id.edtxtFechaSeguimiento26);
                            }
                        });

                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento26)).setKeyListener(null);
                        break;
                    case 27:
                        getActivity().findViewById(R.id.edtxtFechaSeguimiento27).setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View v) {
                                showDatePickerDialogFechaSeguimiento(v, R.id.edtxtFechaSeguimiento27);
                            }
                        });

                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento27)).setKeyListener(null);
                        break;
                    case 28:
                        getActivity().findViewById(R.id.edtxtFechaSeguimiento28).setOnClickListener(new View.OnClickListener() {
                            @Override
                            public void onClick(View v) {
                                showDatePickerDialogFechaSeguimiento(v, R.id.edtxtFechaSeguimiento28);
                            }
                        });

                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento28)).setKeyListener(null);
                        break;
                }

            }

            public void llenarDia1Spn() {
                ((Spinner) getActivity().findViewById(R.id.spnDia1Fila1)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia1Fila2)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia1Fila3)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia1Fila4)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia1Fila5)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia1Fila6)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia1Fila7)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia1Fila8)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia1Fila9)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia1Fila10)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia1Fila11)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia1Fila12)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia1Fila13)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia1Fila14)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia1Fila15)).setAdapter(mSeguimientoInfluenzaActivity.adapter);

                ((Spinner) getActivity().findViewById(R.id.spnDia1Fila16)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia1Fila17)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia1Fila18)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia1Fila19)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia1Fila20)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia1Fila21)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia1Fila22)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia1Fila23)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                cargarDatosSintomasDia1();

                for (SeguimientoInfluenzaDTO seguimientoInfluenza : mSeguimientoInfluenzaActivity.listaSegInfluenza) {
                    if (seguimientoInfluenza.getControlDia() == 1) {
                        cargarFechaSeguimiento(seguimientoInfluenza.getFechaSeguimiento());
                    }
                }
            }

            public void llenarDia2Spn() {
                ((Spinner) getActivity().findViewById(R.id.spnDia2Fila1)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia2Fila2)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia2Fila3)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia2Fila4)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia2Fila5)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia2Fila6)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia2Fila7)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia2Fila8)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia2Fila9)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia2Fila10)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia2Fila11)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia2Fila12)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia2Fila13)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia2Fila14)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia2Fila15)).setAdapter(mSeguimientoInfluenzaActivity.adapter);

                ((Spinner) getActivity().findViewById(R.id.spnDia2Fila16)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia2Fila17)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia2Fila18)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia2Fila19)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia2Fila20)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia2Fila21)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia2Fila22)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia2Fila23)).setAdapter(mSeguimientoInfluenzaActivity.adapter);

                cargarDatosSintomasDia2();


                for (SeguimientoInfluenzaDTO seguimientoInfluenza : mSeguimientoInfluenzaActivity.listaSegInfluenza) {
                    if (seguimientoInfluenza.getControlDia() == 2) {
                        cargarFechaSeguimiento(seguimientoInfluenza.getFechaSeguimiento());
                    }

                }
            }

            public void llenarDia3Spn() {
                ((Spinner) getActivity().findViewById(R.id.spnDia3Fila1)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia3Fila2)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia3Fila3)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia3Fila4)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia3Fila5)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia3Fila6)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia3Fila7)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia3Fila8)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia3Fila9)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia3Fila10)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia3Fila11)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia3Fila12)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia3Fila13)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia3Fila14)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia3Fila15)).setAdapter(mSeguimientoInfluenzaActivity.adapter);

                ((Spinner) getActivity().findViewById(R.id.spnDia3Fila16)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia3Fila17)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia3Fila18)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia3Fila19)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia3Fila20)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia3Fila21)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia3Fila22)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia3Fila23)).setAdapter(mSeguimientoInfluenzaActivity.adapter);

                cargarDatosSintomasDia3();

                for (SeguimientoInfluenzaDTO seguimientoInfluenza : mSeguimientoInfluenzaActivity.listaSegInfluenza) {
                    if (seguimientoInfluenza.getControlDia() == 3) {
                        cargarFechaSeguimiento(seguimientoInfluenza.getFechaSeguimiento());
                    }

                }
            }

            public void llenarDia4Spn() {
                ((Spinner) getActivity().findViewById(R.id.spnDia4Fila1)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia4Fila2)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia4Fila3)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia4Fila4)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia4Fila5)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia4Fila6)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia4Fila7)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia4Fila8)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia4Fila9)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia4Fila10)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia4Fila11)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia4Fila12)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia4Fila13)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia4Fila14)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia4Fila15)).setAdapter(mSeguimientoInfluenzaActivity.adapter);

                ((Spinner) getActivity().findViewById(R.id.spnDia4Fila16)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia4Fila17)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia4Fila18)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia4Fila19)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia4Fila20)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia4Fila21)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia4Fila22)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia4Fila23)).setAdapter(mSeguimientoInfluenzaActivity.adapter);

                cargarDatosSintomasDia4();

                for (SeguimientoInfluenzaDTO seguimientoInfluenza : mSeguimientoInfluenzaActivity.listaSegInfluenza) {
                    if (seguimientoInfluenza.getControlDia() == 4) {
                        cargarFechaSeguimiento(seguimientoInfluenza.getFechaSeguimiento());
                    }

                }
            }

            public void llenarDia5Spn() {
                ((Spinner) getActivity().findViewById(R.id.spnDia5Fila1)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia5Fila2)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia5Fila3)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia5Fila4)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia5Fila5)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia5Fila6)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia5Fila7)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia5Fila8)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia5Fila9)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia5Fila10)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia5Fila11)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia5Fila12)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia5Fila13)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia5Fila14)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia5Fila15)).setAdapter(mSeguimientoInfluenzaActivity.adapter);

                ((Spinner) getActivity().findViewById(R.id.spnDia5Fila16)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia5Fila17)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia5Fila18)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia5Fila19)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia5Fila20)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia5Fila21)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia5Fila22)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia5Fila23)).setAdapter(mSeguimientoInfluenzaActivity.adapter);

                cargarDatosSintomasDia5();

                for (SeguimientoInfluenzaDTO seguimientoInfluenza : mSeguimientoInfluenzaActivity.listaSegInfluenza) {
                    if (seguimientoInfluenza.getControlDia() == 5) {
                        cargarFechaSeguimiento(seguimientoInfluenza.getFechaSeguimiento());
                    }

                }
            }

            public void llenarDia6Spn() {
                ((Spinner) getActivity().findViewById(R.id.spnDia6Fila1)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia6Fila2)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia6Fila3)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia6Fila4)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia6Fila5)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia6Fila6)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia6Fila7)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia6Fila8)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia6Fila9)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia6Fila10)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia6Fila11)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia6Fila12)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia6Fila13)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia6Fila14)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia6Fila15)).setAdapter(mSeguimientoInfluenzaActivity.adapter);

                ((Spinner) getActivity().findViewById(R.id.spnDia6Fila16)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia6Fila17)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia6Fila18)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia6Fila19)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia6Fila20)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia6Fila21)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia6Fila22)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia6Fila23)).setAdapter(mSeguimientoInfluenzaActivity.adapter);

                cargarDatosSintomasDia6();

                for (SeguimientoInfluenzaDTO seguimientoInfluenza : mSeguimientoInfluenzaActivity.listaSegInfluenza) {
                    if (seguimientoInfluenza.getControlDia() == 6) {
                        cargarFechaSeguimiento(seguimientoInfluenza.getFechaSeguimiento());
                    }

                }
            }

            private void llenarDia7Spn() {
                ((Spinner) getActivity().findViewById(R.id.spnDia7Fila1)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia7Fila2)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia7Fila3)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia7Fila4)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia7Fila5)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia7Fila6)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia7Fila7)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia7Fila8)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia7Fila9)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia7Fila10)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia7Fila11)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia7Fila12)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia7Fila13)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia7Fila14)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia7Fila15)).setAdapter(mSeguimientoInfluenzaActivity.adapter);

                ((Spinner) getActivity().findViewById(R.id.spnDia7Fila16)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia7Fila17)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia7Fila18)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia7Fila19)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia7Fila20)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia7Fila21)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia7Fila22)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia7Fila23)).setAdapter(mSeguimientoInfluenzaActivity.adapter);

                cargarDatosSintomasDia7();

                for (SeguimientoInfluenzaDTO seguimientoInfluenza : mSeguimientoInfluenzaActivity.listaSegInfluenza) {
                    if (seguimientoInfluenza.getControlDia() == 7) {
                        cargarFechaSeguimiento(seguimientoInfluenza.getFechaSeguimiento());
                    }

                }
            }

            private void llenarDia8Spn() {
                ((Spinner) getActivity().findViewById(R.id.spnDia8Fila1)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia8Fila2)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia8Fila3)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia8Fila4)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia8Fila5)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia8Fila6)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia8Fila7)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia8Fila8)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia8Fila9)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia8Fila10)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia8Fila11)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia8Fila12)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia8Fila13)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia8Fila14)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia8Fila15)).setAdapter(mSeguimientoInfluenzaActivity.adapter);

                ((Spinner) getActivity().findViewById(R.id.spnDia8Fila16)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia8Fila17)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia8Fila18)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia8Fila19)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia8Fila20)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia8Fila21)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia8Fila22)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia8Fila23)).setAdapter(mSeguimientoInfluenzaActivity.adapter);

                cargarDatosSintomasDia8();

                for (SeguimientoInfluenzaDTO seguimientoInfluenza : mSeguimientoInfluenzaActivity.listaSegInfluenza) {
                    if (seguimientoInfluenza.getControlDia() == 8) {
                        cargarFechaSeguimiento(seguimientoInfluenza.getFechaSeguimiento());
                    }

                }
            }

            private void llenarDia9Spn() {
                ((Spinner) getActivity().findViewById(R.id.spnDia9Fila1)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia9Fila2)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia9Fila3)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia9Fila4)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia9Fila5)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia9Fila6)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia9Fila7)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia9Fila8)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia9Fila9)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia9Fila10)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia9Fila11)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia9Fila12)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia9Fila13)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia9Fila14)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia9Fila15)).setAdapter(mSeguimientoInfluenzaActivity.adapter);

                ((Spinner) getActivity().findViewById(R.id.spnDia9Fila16)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia9Fila17)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia9Fila18)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia9Fila19)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia9Fila20)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia9Fila21)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia9Fila22)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia9Fila23)).setAdapter(mSeguimientoInfluenzaActivity.adapter);

                cargarDatosSintomasDia9();

                for (SeguimientoInfluenzaDTO seguimientoInfluenza : mSeguimientoInfluenzaActivity.listaSegInfluenza) {
                    if (seguimientoInfluenza.getControlDia() == 9) {
                        cargarFechaSeguimiento(seguimientoInfluenza.getFechaSeguimiento());
                    }

                }
            }

            private void llenarDia10Spn() {
                ((Spinner) getActivity().findViewById(R.id.spnDia10Fila1)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia10Fila2)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia10Fila3)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia10Fila4)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia10Fila5)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia10Fila6)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia10Fila7)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia10Fila8)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia10Fila9)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia10Fila10)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia10Fila11)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia10Fila12)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia10Fila13)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia10Fila14)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia10Fila15)).setAdapter(mSeguimientoInfluenzaActivity.adapter);

                ((Spinner) getActivity().findViewById(R.id.spnDia10Fila16)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia10Fila17)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia10Fila18)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia10Fila19)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia10Fila20)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia10Fila21)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia10Fila22)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia10Fila23)).setAdapter(mSeguimientoInfluenzaActivity.adapter);

                cargarDatosSintomasDia10();

                for (SeguimientoInfluenzaDTO seguimientoInfluenza : mSeguimientoInfluenzaActivity.listaSegInfluenza) {
                    if (seguimientoInfluenza.getControlDia() == 10) {
                        cargarFechaSeguimiento(seguimientoInfluenza.getFechaSeguimiento());
                    }

                }
            }

            private void llenarDia11Spn() {
                ((Spinner) getActivity().findViewById(R.id.spnDia11Fila1)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia11Fila2)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia11Fila3)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia11Fila4)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia11Fila5)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia11Fila6)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia11Fila7)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia11Fila8)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia11Fila9)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia11Fila10)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia11Fila11)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia11Fila12)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia11Fila13)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia11Fila14)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia11Fila15)).setAdapter(mSeguimientoInfluenzaActivity.adapter);

                ((Spinner) getActivity().findViewById(R.id.spnDia11Fila16)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia11Fila17)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia11Fila18)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia11Fila19)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia11Fila20)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia11Fila21)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia11Fila22)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia11Fila23)).setAdapter(mSeguimientoInfluenzaActivity.adapter);

                cargarDatosSintomasDia11();

                for (SeguimientoInfluenzaDTO seguimientoInfluenza : mSeguimientoInfluenzaActivity.listaSegInfluenza) {
                    if (seguimientoInfluenza.getControlDia() == 11) {
                        cargarFechaSeguimiento(seguimientoInfluenza.getFechaSeguimiento());
                    }

                }
            }

            private void llenarDia12Spn() {
                ((Spinner) getActivity().findViewById(R.id.spnDia12Fila1)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia12Fila2)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia12Fila3)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia12Fila4)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia12Fila5)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia12Fila6)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia12Fila7)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia12Fila8)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia12Fila9)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia12Fila10)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia12Fila11)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia12Fila12)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia12Fila13)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia12Fila14)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia12Fila15)).setAdapter(mSeguimientoInfluenzaActivity.adapter);

                ((Spinner) getActivity().findViewById(R.id.spnDia12Fila16)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia12Fila17)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia12Fila18)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia12Fila19)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia12Fila20)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia12Fila21)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia12Fila22)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia12Fila23)).setAdapter(mSeguimientoInfluenzaActivity.adapter);

                cargarDatosSintomasDia12();

                for (SeguimientoInfluenzaDTO seguimientoInfluenza : mSeguimientoInfluenzaActivity.listaSegInfluenza) {
                    if (seguimientoInfluenza.getControlDia() == 12) {
                        cargarFechaSeguimiento(seguimientoInfluenza.getFechaSeguimiento());

                    }

                }
            }

            /*Nuevos Controles SC*/
            private void llenarDia13Spn() {
                ((Spinner) getActivity().findViewById(R.id.spnDia13Fila1)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia13Fila2)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia13Fila3)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia13Fila4)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia13Fila5)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia13Fila6)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia13Fila7)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia13Fila8)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia13Fila9)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia13Fila10)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia13Fila11)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia13Fila12)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia13Fila13)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia13Fila14)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia13Fila15)).setAdapter(mSeguimientoInfluenzaActivity.adapter);

                ((Spinner) getActivity().findViewById(R.id.spnDia13Fila16)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia13Fila17)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia13Fila18)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia13Fila19)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia13Fila20)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia13Fila21)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia13Fila22)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia13Fila23)).setAdapter(mSeguimientoInfluenzaActivity.adapter);

                cargarDatosSintomasDia13();

                for (SeguimientoInfluenzaDTO seguimientoInfluenza : mSeguimientoInfluenzaActivity.listaSegInfluenza) {
                    if (seguimientoInfluenza.getControlDia() == 13) {
                        cargarFechaSeguimiento(seguimientoInfluenza.getFechaSeguimiento());

                    }

                }
            }

            private void llenarDia14Spn() {
                ((Spinner) getActivity().findViewById(R.id.spnDia14Fila1)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia14Fila2)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia14Fila3)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia14Fila4)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia14Fila5)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia14Fila6)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia14Fila7)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia14Fila8)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia14Fila9)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia14Fila10)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia14Fila11)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia14Fila12)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia14Fila13)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia14Fila14)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia14Fila15)).setAdapter(mSeguimientoInfluenzaActivity.adapter);

                ((Spinner) getActivity().findViewById(R.id.spnDia14Fila16)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia14Fila17)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia14Fila18)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia14Fila19)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia14Fila20)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia14Fila21)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia14Fila22)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia14Fila23)).setAdapter(mSeguimientoInfluenzaActivity.adapter);

                cargarDatosSintomasDia14();

                for (SeguimientoInfluenzaDTO seguimientoInfluenza : mSeguimientoInfluenzaActivity.listaSegInfluenza) {
                    if (seguimientoInfluenza.getControlDia() == 14) {
                        cargarFechaSeguimiento(seguimientoInfluenza.getFechaSeguimiento());

                    }

                }
            }

            private void llenarDia15Spn() {
                ((Spinner) getActivity().findViewById(R.id.spnDia15Fila1)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia15Fila2)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia15Fila3)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia15Fila4)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia15Fila5)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia15Fila6)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia15Fila7)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia15Fila8)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia15Fila9)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia15Fila10)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia15Fila11)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia15Fila12)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia15Fila13)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia15Fila14)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia15Fila15)).setAdapter(mSeguimientoInfluenzaActivity.adapter);

                ((Spinner) getActivity().findViewById(R.id.spnDia15Fila16)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia15Fila17)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia15Fila18)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia15Fila19)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia15Fila20)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia15Fila21)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia15Fila22)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia15Fila23)).setAdapter(mSeguimientoInfluenzaActivity.adapter);

                cargarDatosSintomasDia15();

                for (SeguimientoInfluenzaDTO seguimientoInfluenza : mSeguimientoInfluenzaActivity.listaSegInfluenza) {
                    if (seguimientoInfluenza.getControlDia() == 15) {
                        cargarFechaSeguimiento(seguimientoInfluenza.getFechaSeguimiento());

                    }

                }
            }

            private void llenarDia16Spn() {
                ((Spinner) getActivity().findViewById(R.id.spnDia16Fila1)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia16Fila2)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia16Fila3)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia16Fila4)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia16Fila5)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia16Fila6)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia16Fila7)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia16Fila8)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia16Fila9)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia16Fila10)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia16Fila11)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia16Fila12)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia16Fila13)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia16Fila14)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia16Fila15)).setAdapter(mSeguimientoInfluenzaActivity.adapter);

                ((Spinner) getActivity().findViewById(R.id.spnDia16Fila16)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia16Fila17)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia16Fila18)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia16Fila19)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia16Fila20)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia16Fila21)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia16Fila22)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia16Fila23)).setAdapter(mSeguimientoInfluenzaActivity.adapter);

                cargarDatosSintomasDia16();

                for (SeguimientoInfluenzaDTO seguimientoInfluenza : mSeguimientoInfluenzaActivity.listaSegInfluenza) {
                    if (seguimientoInfluenza.getControlDia() == 16) {
                        cargarFechaSeguimiento(seguimientoInfluenza.getFechaSeguimiento());

                    }

                }
            }

            private void llenarDia17Spn() {
                ((Spinner) getActivity().findViewById(R.id.spnDia17Fila1)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia17Fila2)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia17Fila3)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia17Fila4)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia17Fila5)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia17Fila6)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia17Fila7)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia17Fila8)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia17Fila9)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia17Fila10)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia17Fila11)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia17Fila12)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia17Fila13)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia17Fila14)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia17Fila15)).setAdapter(mSeguimientoInfluenzaActivity.adapter);

                ((Spinner) getActivity().findViewById(R.id.spnDia17Fila16)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia17Fila17)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia17Fila18)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia17Fila19)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia17Fila20)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia17Fila21)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia17Fila22)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia17Fila23)).setAdapter(mSeguimientoInfluenzaActivity.adapter);

                cargarDatosSintomasDia17();

                for (SeguimientoInfluenzaDTO seguimientoInfluenza : mSeguimientoInfluenzaActivity.listaSegInfluenza) {
                    if (seguimientoInfluenza.getControlDia() == 17) {
                        cargarFechaSeguimiento(seguimientoInfluenza.getFechaSeguimiento());

                    }

                }
            }

            private void llenarDia18Spn() {
                ((Spinner) getActivity().findViewById(R.id.spnDia18Fila1)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia18Fila2)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia18Fila3)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia18Fila4)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia18Fila5)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia18Fila6)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia18Fila7)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia18Fila8)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia18Fila9)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia18Fila10)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia18Fila11)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia18Fila12)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia18Fila13)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia18Fila14)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia18Fila15)).setAdapter(mSeguimientoInfluenzaActivity.adapter);

                ((Spinner) getActivity().findViewById(R.id.spnDia18Fila16)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia18Fila17)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia18Fila18)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia18Fila19)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia18Fila20)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia18Fila21)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia18Fila22)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia18Fila23)).setAdapter(mSeguimientoInfluenzaActivity.adapter);

                cargarDatosSintomasDia18();

                for (SeguimientoInfluenzaDTO seguimientoInfluenza : mSeguimientoInfluenzaActivity.listaSegInfluenza) {
                    if (seguimientoInfluenza.getControlDia() == 18) {
                        cargarFechaSeguimiento(seguimientoInfluenza.getFechaSeguimiento());

                    }

                }
            }

            private void llenarDia19Spn() {
                ((Spinner) getActivity().findViewById(R.id.spnDia19Fila1)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia19Fila2)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia19Fila3)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia19Fila4)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia19Fila5)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia19Fila6)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia19Fila7)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia19Fila8)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia19Fila9)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia19Fila10)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia19Fila11)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia19Fila12)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia19Fila13)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia19Fila14)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia19Fila15)).setAdapter(mSeguimientoInfluenzaActivity.adapter);

                ((Spinner) getActivity().findViewById(R.id.spnDia19Fila16)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia19Fila17)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia19Fila18)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia19Fila19)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia19Fila20)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia19Fila21)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia19Fila22)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia19Fila23)).setAdapter(mSeguimientoInfluenzaActivity.adapter);

                cargarDatosSintomasDia19();

                for (SeguimientoInfluenzaDTO seguimientoInfluenza : mSeguimientoInfluenzaActivity.listaSegInfluenza) {
                    if (seguimientoInfluenza.getControlDia() == 19) {
                        cargarFechaSeguimiento(seguimientoInfluenza.getFechaSeguimiento());

                    }

                }
            }

            private void llenarDia20Spn() {
                ((Spinner) getActivity().findViewById(R.id.spnDia20Fila1)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia20Fila2)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia20Fila3)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia20Fila4)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia20Fila5)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia20Fila6)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia20Fila7)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia20Fila8)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia20Fila9)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia20Fila10)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia20Fila11)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia20Fila12)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia20Fila13)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia20Fila14)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia20Fila15)).setAdapter(mSeguimientoInfluenzaActivity.adapter);

                ((Spinner) getActivity().findViewById(R.id.spnDia20Fila16)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia20Fila17)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia20Fila18)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia20Fila19)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia20Fila20)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia20Fila21)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia20Fila22)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia20Fila23)).setAdapter(mSeguimientoInfluenzaActivity.adapter);

                cargarDatosSintomasDia20();

                for (SeguimientoInfluenzaDTO seguimientoInfluenza : mSeguimientoInfluenzaActivity.listaSegInfluenza) {
                    if (seguimientoInfluenza.getControlDia() == 20) {
                        cargarFechaSeguimiento(seguimientoInfluenza.getFechaSeguimiento());

                    }

                }
            }

            private void llenarDia21Spn() {
                ((Spinner) getActivity().findViewById(R.id.spnDia21Fila1)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia21Fila2)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia21Fila3)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia21Fila4)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia21Fila5)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia21Fila6)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia21Fila7)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia21Fila8)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia21Fila9)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia21Fila10)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia21Fila11)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia21Fila12)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia21Fila13)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia21Fila14)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia21Fila15)).setAdapter(mSeguimientoInfluenzaActivity.adapter);

                ((Spinner) getActivity().findViewById(R.id.spnDia21Fila16)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia21Fila17)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia21Fila18)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia21Fila19)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia21Fila20)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia21Fila21)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia21Fila22)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia21Fila23)).setAdapter(mSeguimientoInfluenzaActivity.adapter);

                cargarDatosSintomasDia21();

                for (SeguimientoInfluenzaDTO seguimientoInfluenza : mSeguimientoInfluenzaActivity.listaSegInfluenza) {
                    if (seguimientoInfluenza.getControlDia() == 21) {
                        cargarFechaSeguimiento(seguimientoInfluenza.getFechaSeguimiento());

                    }

                }
            }

            private void llenarDia22Spn() {
                ((Spinner) getActivity().findViewById(R.id.spnDia22Fila1)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia22Fila2)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia22Fila3)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia22Fila4)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia22Fila5)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia22Fila6)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia22Fila7)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia22Fila8)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia22Fila9)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia22Fila10)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia22Fila11)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia22Fila12)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia22Fila13)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia22Fila14)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia22Fila15)).setAdapter(mSeguimientoInfluenzaActivity.adapter);

                ((Spinner) getActivity().findViewById(R.id.spnDia22Fila16)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia22Fila17)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia22Fila18)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia22Fila19)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia22Fila20)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia22Fila21)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia22Fila22)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia22Fila23)).setAdapter(mSeguimientoInfluenzaActivity.adapter);

                cargarDatosSintomasDia22();

                for (SeguimientoInfluenzaDTO seguimientoInfluenza : mSeguimientoInfluenzaActivity.listaSegInfluenza) {
                    if (seguimientoInfluenza.getControlDia() == 22) {
                        cargarFechaSeguimiento(seguimientoInfluenza.getFechaSeguimiento());

                    }

                }
            }

            private void llenarDia23Spn() {
                ((Spinner) getActivity().findViewById(R.id.spnDia23Fila1)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia23Fila2)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia23Fila3)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia23Fila4)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia23Fila5)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia23Fila6)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia23Fila7)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia23Fila8)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia23Fila9)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia23Fila10)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia23Fila11)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia23Fila12)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia23Fila13)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia23Fila14)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia23Fila15)).setAdapter(mSeguimientoInfluenzaActivity.adapter);

                ((Spinner) getActivity().findViewById(R.id.spnDia23Fila16)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia23Fila17)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia23Fila18)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia23Fila19)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia23Fila20)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia23Fila21)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia23Fila22)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia23Fila23)).setAdapter(mSeguimientoInfluenzaActivity.adapter);

                cargarDatosSintomasDia23();

                for (SeguimientoInfluenzaDTO seguimientoInfluenza : mSeguimientoInfluenzaActivity.listaSegInfluenza) {
                    if (seguimientoInfluenza.getControlDia() == 23) {
                        cargarFechaSeguimiento(seguimientoInfluenza.getFechaSeguimiento());

                    }

                }
            }

            private void llenarDia24Spn() {
                ((Spinner) getActivity().findViewById(R.id.spnDia24Fila1)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia24Fila2)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia24Fila3)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia24Fila4)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia24Fila5)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia24Fila6)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia24Fila7)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia24Fila8)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia24Fila9)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia24Fila10)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia24Fila11)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia24Fila12)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia24Fila13)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia24Fila14)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia24Fila15)).setAdapter(mSeguimientoInfluenzaActivity.adapter);

                ((Spinner) getActivity().findViewById(R.id.spnDia24Fila16)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia24Fila17)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia24Fila18)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia24Fila19)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia24Fila20)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia24Fila21)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia24Fila22)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia24Fila23)).setAdapter(mSeguimientoInfluenzaActivity.adapter);

                cargarDatosSintomasDia24();

                for (SeguimientoInfluenzaDTO seguimientoInfluenza : mSeguimientoInfluenzaActivity.listaSegInfluenza) {
                    if (seguimientoInfluenza.getControlDia() == 24) {
                        cargarFechaSeguimiento(seguimientoInfluenza.getFechaSeguimiento());

                    }

                }
            }

            private void llenarDia25Spn() {
                ((Spinner) getActivity().findViewById(R.id.spnDia25Fila1)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia25Fila2)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia25Fila3)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia25Fila4)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia25Fila5)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia25Fila6)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia25Fila7)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia25Fila8)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia25Fila9)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia25Fila10)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia25Fila11)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia25Fila12)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia25Fila13)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia25Fila14)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia25Fila15)).setAdapter(mSeguimientoInfluenzaActivity.adapter);

                ((Spinner) getActivity().findViewById(R.id.spnDia25Fila16)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia25Fila17)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia25Fila18)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia25Fila19)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia25Fila20)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia25Fila21)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia25Fila22)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia25Fila23)).setAdapter(mSeguimientoInfluenzaActivity.adapter);

                cargarDatosSintomasDia25();

                for (SeguimientoInfluenzaDTO seguimientoInfluenza : mSeguimientoInfluenzaActivity.listaSegInfluenza) {
                    if (seguimientoInfluenza.getControlDia() == 25) {
                        cargarFechaSeguimiento(seguimientoInfluenza.getFechaSeguimiento());

                    }

                }
            }

            private void llenarDia26Spn() {
                ((Spinner) getActivity().findViewById(R.id.spnDia26Fila1)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia26Fila2)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia26Fila3)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia26Fila4)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia26Fila5)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia26Fila6)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia26Fila7)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia26Fila8)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia26Fila9)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia26Fila10)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia26Fila11)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia26Fila12)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia26Fila13)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia26Fila14)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia26Fila15)).setAdapter(mSeguimientoInfluenzaActivity.adapter);

                ((Spinner) getActivity().findViewById(R.id.spnDia26Fila16)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia26Fila17)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia26Fila18)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia26Fila19)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia26Fila20)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia26Fila21)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia26Fila22)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia26Fila23)).setAdapter(mSeguimientoInfluenzaActivity.adapter);

                cargarDatosSintomasDia26();

                for (SeguimientoInfluenzaDTO seguimientoInfluenza : mSeguimientoInfluenzaActivity.listaSegInfluenza) {
                    if (seguimientoInfluenza.getControlDia() == 26) {
                        cargarFechaSeguimiento(seguimientoInfluenza.getFechaSeguimiento());

                    }

                }
            }

            private void llenarDia27Spn() {
                ((Spinner) getActivity().findViewById(R.id.spnDia27Fila1)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia27Fila2)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia27Fila3)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia27Fila4)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia27Fila5)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia27Fila6)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia27Fila7)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia27Fila8)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia27Fila9)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia27Fila10)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia27Fila11)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia27Fila12)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia27Fila13)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia27Fila14)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia27Fila15)).setAdapter(mSeguimientoInfluenzaActivity.adapter);

                ((Spinner) getActivity().findViewById(R.id.spnDia27Fila16)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia27Fila17)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia27Fila18)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia27Fila19)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia27Fila20)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia27Fila21)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia27Fila22)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia27Fila23)).setAdapter(mSeguimientoInfluenzaActivity.adapter);

                cargarDatosSintomasDia27();

                for (SeguimientoInfluenzaDTO seguimientoInfluenza : mSeguimientoInfluenzaActivity.listaSegInfluenza) {
                    if (seguimientoInfluenza.getControlDia() == 27) {
                        cargarFechaSeguimiento(seguimientoInfluenza.getFechaSeguimiento());

                    }

                }
            }

            private void llenarDia28Spn() {
                ((Spinner) getActivity().findViewById(R.id.spnDia28Fila1)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia28Fila2)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia28Fila3)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia28Fila4)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia28Fila5)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia28Fila6)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia28Fila7)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia28Fila8)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia28Fila9)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia28Fila10)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia28Fila11)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia28Fila12)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia28Fila13)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia28Fila14)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia28Fila15)).setAdapter(mSeguimientoInfluenzaActivity.adapter);

                ((Spinner) getActivity().findViewById(R.id.spnDia28Fila16)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia28Fila17)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia28Fila18)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia28Fila19)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia28Fila20)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia28Fila21)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia28Fila22)).setAdapter(mSeguimientoInfluenzaActivity.adapter);
                ((Spinner) getActivity().findViewById(R.id.spnDia28Fila23)).setAdapter(mSeguimientoInfluenzaActivity.adapter);

                cargarDatosSintomasDia28();

                for (SeguimientoInfluenzaDTO seguimientoInfluenza : mSeguimientoInfluenzaActivity.listaSegInfluenza) {
                    if (seguimientoInfluenza.getControlDia() == 28) {
                        cargarFechaSeguimiento(seguimientoInfluenza.getFechaSeguimiento());

                    }

                }
            }

            public void establerCargaIU() {
                if (obtenerSeguimientoPorDia(mPage) != null) {
                    cargarIU(obtenerSeguimientoPorDia(mPage), false);
                } else if (obtenerNuevoSeguimientoPorDia(mPage) != null) {
                    cargarIU(obtenerNuevoSeguimientoPorDia(mPage), true);
                } else {
                    setMedico(((CssfvApp) getActivity().getApplication()).getInfoSessionWSDTO().getUserId());
                }
            }

            public void cargarDatosSintomasDia1() {

                ((Spinner) getActivity().findViewById(R.id.spnDia1Fila1)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarConsultaInicial(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia1Fila2)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFiebre(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia1Fila3)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarTos(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia1Fila4)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarSecrecionNasal(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia1Fila5)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorGarganta(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia1Fila6)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCongestionNasal(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia1Fila7)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorCabeza(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia1Fila8)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFaltaApetito(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia1Fila9)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorMuscular(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia1Fila10)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorArticular(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia1Fila11)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorOido(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia1Fila12)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarRespiracionRapida(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia1Fila13)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDificultadRespirar(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia1Fila14)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFaltaEscuela(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia1Fila15)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarQuedoEnCama(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });
                /*************************************************/
                ((Spinner) getActivity().findViewById(R.id.spnDia1Fila16)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCuadroConfusional(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia1Fila17)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCuadroNeurologico(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia1Fila18)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarConfusionMental(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia1Fila19)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarAnosmia(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia1Fila20)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarAgeusia(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia1Fila21)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarMareo(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia1Fila22)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarIctus(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia1Fila23)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarSincope(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });
                /************************************************/


                /*FIEBRE DIA 1*/
                View.OnClickListener onClickChkFiebreLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreLeveDia1).setOnClickListener(onClickChkFiebreLeve);

                View.OnClickListener onClickChkFiebreModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreModeradaDia1).setOnClickListener(onClickChkFiebreModerada);

                View.OnClickListener onClickChkFiebreSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreSeveraDia1).setOnClickListener(onClickChkFiebreSevera);
                /*-------------------------------*/
                /*TOS DIA 1*/
                View.OnClickListener onClickChkTosLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosLeveDia1).setOnClickListener(onClickChkTosLeve);

                View.OnClickListener onClickChkTosModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosModeradaDia1).setOnClickListener(onClickChkTosModerada);

                View.OnClickListener onClickChkTosSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosSeveraDia1).setOnClickListener(onClickChkTosSevera);
                /*-------------------------------*/
                /*SECRECION NASAL DIA 1*/
                View.OnClickListener onClickChkSecrecionNasalLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalLeveDia1).setOnClickListener(onClickChkSecrecionNasalLeve);

                View.OnClickListener onClickChkSecrecionNasalModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia1).setOnClickListener(onClickChkSecrecionNasalModerada);

                View.OnClickListener onClickChkSecrecionNasalSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia1).setOnClickListener(onClickChkSecrecionNasalSevera);
                /*-------------------------------*/
                /*DOLOR DE GARGANTA DIA 1*/
                View.OnClickListener onClickChkDolorGargantaLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaLeveDia1).setOnClickListener(onClickChkDolorGargantaLeve);

                View.OnClickListener onClickChkDolorGargantaModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaModeradaDia1).setOnClickListener(onClickChkDolorGargantaModerada);

                View.OnClickListener onClickChkDolorGargantaSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaSeveraDia1).setOnClickListener(onClickChkDolorGargantaSevera);
                /*DOLOR DE CABEZA DIA 1*/
                View.OnClickListener onClickChkDolorCabezaLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaLeveDia1).setOnClickListener(onClickChkDolorCabezaLeve);

                View.OnClickListener onClickChkDolorCabezaModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaModeradaDia1).setOnClickListener(onClickChkDolorCabezaModerada);

                View.OnClickListener onClickChkDolorCabezaSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaSeveraDia1).setOnClickListener(onClickChkDolorCabezaSevera);

                /*DOLOR DOLOR MUSCULAR DIA 1*/
                View.OnClickListener onClickChkDolorMuscularLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularLeveDia1).setOnClickListener(onClickChkDolorMuscularLeve);

                View.OnClickListener onClickChkDolorMuscularModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularModeradaDia1).setOnClickListener(onClickChkDolorMuscularModerada);

                View.OnClickListener onClickChkDolorMuscularSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularSeveraDia1).setOnClickListener(onClickChkDolorMuscularSevera);
                /*DOLOR ARTICULAR DIA 1*/
                View.OnClickListener onClickChkDolorArticularLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularLeveDia1).setOnClickListener(onClickChkDolorArticularLeve);

                View.OnClickListener onClickChkDolorArticularModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularModeradaDia1).setOnClickListener(onClickChkDolorArticularModerada);

                View.OnClickListener onClickChkDolorArticularSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularSeveraDia1).setOnClickListener(onClickChkDolorArticularSevera);
                /*-----------------------------*/
            }

            public void cargarDatosSintomasDia2() {
                ((Spinner) getActivity().findViewById(R.id.spnDia2Fila1)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarConsultaInicial(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia2Fila2)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFiebre(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia2Fila3)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarTos(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia2Fila4)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarSecrecionNasal(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia2Fila5)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorGarganta(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia2Fila6)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCongestionNasal(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia2Fila7)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorCabeza(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia2Fila8)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFaltaApetito(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia2Fila9)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorMuscular(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia2Fila10)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorArticular(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia2Fila11)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorOido(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia2Fila12)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarRespiracionRapida(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia2Fila13)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDificultadRespirar(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia2Fila14)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFaltaEscuela(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia2Fila15)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarQuedoEnCama(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });
                /*************************************************/
                ((Spinner) getActivity().findViewById(R.id.spnDia2Fila16)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCuadroConfusional(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia2Fila17)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCuadroNeurologico(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia2Fila18)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarConfusionMental(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia2Fila19)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarAnosmia(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia2Fila20)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarAgeusia(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia2Fila21)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarMareo(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia2Fila22)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarIctus(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia2Fila23)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarSincope(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });
                /************************************************/

                /*FIEBRE DIA 2*/
                View.OnClickListener onClickChkFiebreLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreLeveDia2).setOnClickListener(onClickChkFiebreLeve);

                View.OnClickListener onClickChkFiebreModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreModeradaDia2).setOnClickListener(onClickChkFiebreModerada);

                View.OnClickListener onClickChkFiebreSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreSeveraDia2).setOnClickListener(onClickChkFiebreSevera);
                /*-------------------------------*/
                /*TOS DIA 2*/
                View.OnClickListener onClickChkTosLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosLeveDia2).setOnClickListener(onClickChkTosLeve);

                View.OnClickListener onClickChkTosModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosModeradaDia2).setOnClickListener(onClickChkTosModerada);

                View.OnClickListener onClickChkTosSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosSeveraDia2).setOnClickListener(onClickChkTosSevera);
                /*-------------------------------*/
                /*SECRECION NASAL DIA 2*/
                View.OnClickListener onClickChkSecrecionNasalLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalLeveDia2).setOnClickListener(onClickChkSecrecionNasalLeve);

                View.OnClickListener onClickChkSecrecionNasalModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia2).setOnClickListener(onClickChkSecrecionNasalModerada);

                View.OnClickListener onClickChkSecrecionNasalSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia2).setOnClickListener(onClickChkSecrecionNasalSevera);
                /*-------------------------------*/
                /*DOLOR DE GARGANTA DIA 2*/
                View.OnClickListener onClickChkDolorGargantaLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaLeveDia2).setOnClickListener(onClickChkDolorGargantaLeve);

                View.OnClickListener onClickChkDolorGargantaModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaModeradaDia2).setOnClickListener(onClickChkDolorGargantaModerada);

                View.OnClickListener onClickChkDolorGargantaSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaSeveraDia2).setOnClickListener(onClickChkDolorGargantaSevera);
                /*DOLOR DE CABEZA DIA 2*/
                View.OnClickListener onClickChkDolorCabezaLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaLeveDia2).setOnClickListener(onClickChkDolorCabezaLeve);

                View.OnClickListener onClickChkDolorCabezaModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaModeradaDia2).setOnClickListener(onClickChkDolorCabezaModerada);

                View.OnClickListener onClickChkDolorCabezaSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaSeveraDia2).setOnClickListener(onClickChkDolorCabezaSevera);

                /*DOLOR DOLOR MUSCULAR DIA 2*/
                View.OnClickListener onClickChkDolorMuscularLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularLeveDia2).setOnClickListener(onClickChkDolorMuscularLeve);

                View.OnClickListener onClickChkDolorMuscularModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularModeradaDia2).setOnClickListener(onClickChkDolorMuscularModerada);

                View.OnClickListener onClickChkDolorMuscularSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularSeveraDia2).setOnClickListener(onClickChkDolorMuscularSevera);
                /*DOLOR ARTICULAR DIA 2*/
                View.OnClickListener onClickChkDolorArticularLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularLeveDia2).setOnClickListener(onClickChkDolorArticularLeve);

                View.OnClickListener onClickChkDolorArticularModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularModeradaDia2).setOnClickListener(onClickChkDolorArticularModerada);

                View.OnClickListener onClickChkDolorArticularSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularSeveraDia2).setOnClickListener(onClickChkDolorArticularSevera);
                /*-----------------------------*/
            }

            public void cargarDatosSintomasDia3() {
                ((Spinner) getActivity().findViewById(R.id.spnDia3Fila1)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarConsultaInicial(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia3Fila2)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFiebre(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia3Fila3)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarTos(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia3Fila4)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarSecrecionNasal(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia3Fila5)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorGarganta(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia3Fila6)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCongestionNasal(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia3Fila7)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorCabeza(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia3Fila8)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFaltaApetito(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia3Fila9)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorMuscular(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia3Fila10)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorArticular(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia3Fila11)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorOido(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia3Fila12)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarRespiracionRapida(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia3Fila13)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDificultadRespirar(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia3Fila14)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFaltaEscuela(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia3Fila15)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarQuedoEnCama(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                /*************************************************/
                ((Spinner) getActivity().findViewById(R.id.spnDia3Fila16)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCuadroConfusional(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia3Fila17)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCuadroNeurologico(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia3Fila18)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarConfusionMental(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia3Fila19)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarAnosmia(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia3Fila20)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarAgeusia(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia3Fila21)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarMareo(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia3Fila22)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarIctus(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia3Fila23)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarSincope(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });
                /************************************************/

                /*FIEBRE DIA 3*/
                View.OnClickListener onClickChkFiebreLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreLeveDia3).setOnClickListener(onClickChkFiebreLeve);

                View.OnClickListener onClickChkFiebreModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreModeradaDia3).setOnClickListener(onClickChkFiebreModerada);

                View.OnClickListener onClickChkFiebreSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreSeveraDia3).setOnClickListener(onClickChkFiebreSevera);
                /*-------------------------------*/
                /*TOS DIA 3*/
                View.OnClickListener onClickChkTosLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosLeveDia3).setOnClickListener(onClickChkTosLeve);

                View.OnClickListener onClickChkTosModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosModeradaDia3).setOnClickListener(onClickChkTosModerada);

                View.OnClickListener onClickChkTosSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosSeveraDia3).setOnClickListener(onClickChkTosSevera);
                /*-------------------------------*/
                /*SECRECION NASAL DIA 3*/
                View.OnClickListener onClickChkSecrecionNasalLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalLeveDia3).setOnClickListener(onClickChkSecrecionNasalLeve);

                View.OnClickListener onClickChkSecrecionNasalModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia3).setOnClickListener(onClickChkSecrecionNasalModerada);

                View.OnClickListener onClickChkSecrecionNasalSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia3).setOnClickListener(onClickChkSecrecionNasalSevera);
                /*-------------------------------*/
                /*DOLOR DE GARGANTA DIA 3*/
                View.OnClickListener onClickChkDolorGargantaLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaLeveDia3).setOnClickListener(onClickChkDolorGargantaLeve);

                View.OnClickListener onClickChkDolorGargantaModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaModeradaDia3).setOnClickListener(onClickChkDolorGargantaModerada);

                View.OnClickListener onClickChkDolorGargantaSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaSeveraDia3).setOnClickListener(onClickChkDolorGargantaSevera);
                /*DOLOR DE CABEZA DIA 3*/
                View.OnClickListener onClickChkDolorCabezaLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaLeveDia3).setOnClickListener(onClickChkDolorCabezaLeve);

                View.OnClickListener onClickChkDolorCabezaModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaModeradaDia3).setOnClickListener(onClickChkDolorCabezaModerada);

                View.OnClickListener onClickChkDolorCabezaSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaSeveraDia3).setOnClickListener(onClickChkDolorCabezaSevera);

                /*DOLOR DOLOR MUSCULAR DIA 3*/
                View.OnClickListener onClickChkDolorMuscularLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularLeveDia3).setOnClickListener(onClickChkDolorMuscularLeve);

                View.OnClickListener onClickChkDolorMuscularModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularModeradaDia3).setOnClickListener(onClickChkDolorMuscularModerada);

                View.OnClickListener onClickChkDolorMuscularSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularSeveraDia3).setOnClickListener(onClickChkDolorMuscularSevera);
                /*DOLOR ARTICULAR DIA 3*/
                View.OnClickListener onClickChkDolorArticularLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularLeveDia3).setOnClickListener(onClickChkDolorArticularLeve);

                View.OnClickListener onClickChkDolorArticularModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularModeradaDia3).setOnClickListener(onClickChkDolorArticularModerada);

                View.OnClickListener onClickChkDolorArticularSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularSeveraDia3).setOnClickListener(onClickChkDolorArticularSevera);
                /*-----------------------------*/

            }

            public void cargarDatosSintomasDia4() {
                ((Spinner) getActivity().findViewById(R.id.spnDia4Fila1)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarConsultaInicial(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia4Fila2)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFiebre(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia4Fila3)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarTos(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia4Fila4)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarSecrecionNasal(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia4Fila5)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorGarganta(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia4Fila6)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCongestionNasal(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia4Fila7)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorCabeza(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia4Fila8)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFaltaApetito(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia4Fila9)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorMuscular(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia4Fila10)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorArticular(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia4Fila11)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorOido(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia4Fila12)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarRespiracionRapida(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia4Fila13)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDificultadRespirar(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia4Fila14)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFaltaEscuela(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia4Fila15)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarQuedoEnCama(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                /*************************************************/
                ((Spinner) getActivity().findViewById(R.id.spnDia4Fila16)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCuadroConfusional(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia4Fila17)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCuadroNeurologico(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia4Fila18)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarConfusionMental(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia4Fila19)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarAnosmia(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia4Fila20)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarAgeusia(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia4Fila21)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarMareo(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia4Fila22)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarIctus(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia4Fila23)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarSincope(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });
                /************************************************/

                /*FIEBRE DIA 4*/
                View.OnClickListener onClickChkFiebreLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreLeveDia4).setOnClickListener(onClickChkFiebreLeve);

                View.OnClickListener onClickChkFiebreModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreModeradaDia4).setOnClickListener(onClickChkFiebreModerada);

                View.OnClickListener onClickChkFiebreSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreSeveraDia4).setOnClickListener(onClickChkFiebreSevera);
                /*-------------------------------*/
                /*TOS DIA 4*/
                View.OnClickListener onClickChkTosLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosLeveDia4).setOnClickListener(onClickChkTosLeve);

                View.OnClickListener onClickChkTosModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosModeradaDia4).setOnClickListener(onClickChkTosModerada);

                View.OnClickListener onClickChkTosSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosSeveraDia4).setOnClickListener(onClickChkTosSevera);
                /*-------------------------------*/
                /*SECRECION NASAL DIA 4*/
                View.OnClickListener onClickChkSecrecionNasalLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalLeveDia4).setOnClickListener(onClickChkSecrecionNasalLeve);

                View.OnClickListener onClickChkSecrecionNasalModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia4).setOnClickListener(onClickChkSecrecionNasalModerada);

                View.OnClickListener onClickChkSecrecionNasalSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia4).setOnClickListener(onClickChkSecrecionNasalSevera);
                /*-------------------------------*/
                /*DOLOR DE GARGANTA DIA 4*/
                View.OnClickListener onClickChkDolorGargantaLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaLeveDia4).setOnClickListener(onClickChkDolorGargantaLeve);

                View.OnClickListener onClickChkDolorGargantaModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaModeradaDia4).setOnClickListener(onClickChkDolorGargantaModerada);

                View.OnClickListener onClickChkDolorGargantaSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaSeveraDia4).setOnClickListener(onClickChkDolorGargantaSevera);
                /*DOLOR DE CABEZA DIA 4*/
                View.OnClickListener onClickChkDolorCabezaLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaLeveDia4).setOnClickListener(onClickChkDolorCabezaLeve);

                View.OnClickListener onClickChkDolorCabezaModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaModeradaDia4).setOnClickListener(onClickChkDolorCabezaModerada);

                View.OnClickListener onClickChkDolorCabezaSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaSeveraDia4).setOnClickListener(onClickChkDolorCabezaSevera);

                /*DOLOR DOLOR MUSCULAR DIA 4*/
                View.OnClickListener onClickChkDolorMuscularLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularLeveDia4).setOnClickListener(onClickChkDolorMuscularLeve);

                View.OnClickListener onClickChkDolorMuscularModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularModeradaDia4).setOnClickListener(onClickChkDolorMuscularModerada);

                View.OnClickListener onClickChkDolorMuscularSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularSeveraDia4).setOnClickListener(onClickChkDolorMuscularSevera);
                /*DOLOR ARTICULAR DIA 4*/
                View.OnClickListener onClickChkDolorArticularLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularLeveDia4).setOnClickListener(onClickChkDolorArticularLeve);

                View.OnClickListener onClickChkDolorArticularModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularModeradaDia4).setOnClickListener(onClickChkDolorArticularModerada);

                View.OnClickListener onClickChkDolorArticularSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularSeveraDia4).setOnClickListener(onClickChkDolorArticularSevera);
                /*-----------------------------*/

            }

            public void cargarDatosSintomasDia5() {
                ((Spinner) getActivity().findViewById(R.id.spnDia5Fila1)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarConsultaInicial(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia5Fila2)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFiebre(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia5Fila3)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarTos(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia5Fila4)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarSecrecionNasal(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia5Fila5)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorGarganta(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia5Fila6)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCongestionNasal(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia5Fila7)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorCabeza(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia5Fila8)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFaltaApetito(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia5Fila9)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorMuscular(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia5Fila10)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorArticular(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia5Fila11)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorOido(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia5Fila12)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarRespiracionRapida(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia5Fila13)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDificultadRespirar(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia5Fila14)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFaltaEscuela(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia5Fila15)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarQuedoEnCama(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                /*************************************************/
                ((Spinner) getActivity().findViewById(R.id.spnDia5Fila16)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCuadroConfusional(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia5Fila17)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCuadroNeurologico(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia5Fila18)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarConfusionMental(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia5Fila19)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarAnosmia(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia5Fila20)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarAgeusia(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia5Fila21)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarMareo(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia5Fila22)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarIctus(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia5Fila23)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarSincope(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });
                /************************************************/

                /*FIEBRE DIA 5*/
                View.OnClickListener onClickChkFiebreLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreLeveDia5).setOnClickListener(onClickChkFiebreLeve);

                View.OnClickListener onClickChkFiebreModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreModeradaDia5).setOnClickListener(onClickChkFiebreModerada);

                View.OnClickListener onClickChkFiebreSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreSeveraDia5).setOnClickListener(onClickChkFiebreSevera);
                /*-------------------------------*/
                /*TOS DIA 5*/
                View.OnClickListener onClickChkTosLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosLeveDia5).setOnClickListener(onClickChkTosLeve);

                View.OnClickListener onClickChkTosModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosModeradaDia5).setOnClickListener(onClickChkTosModerada);

                View.OnClickListener onClickChkTosSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosSeveraDia5).setOnClickListener(onClickChkTosSevera);
                /*-------------------------------*/
                /*SECRECION NASAL DIA 5*/
                View.OnClickListener onClickChkSecrecionNasalLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalLeveDia5).setOnClickListener(onClickChkSecrecionNasalLeve);

                View.OnClickListener onClickChkSecrecionNasalModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia5).setOnClickListener(onClickChkSecrecionNasalModerada);

                View.OnClickListener onClickChkSecrecionNasalSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia5).setOnClickListener(onClickChkSecrecionNasalSevera);
                /*-------------------------------*/
                /*DOLOR DE GARGANTA DIA 5*/
                View.OnClickListener onClickChkDolorGargantaLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaLeveDia5).setOnClickListener(onClickChkDolorGargantaLeve);

                View.OnClickListener onClickChkDolorGargantaModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaModeradaDia5).setOnClickListener(onClickChkDolorGargantaModerada);

                View.OnClickListener onClickChkDolorGargantaSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaSeveraDia5).setOnClickListener(onClickChkDolorGargantaSevera);
                /*DOLOR DE CABEZA DIA 5*/
                View.OnClickListener onClickChkDolorCabezaLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaLeveDia5).setOnClickListener(onClickChkDolorCabezaLeve);

                View.OnClickListener onClickChkDolorCabezaModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaModeradaDia5).setOnClickListener(onClickChkDolorCabezaModerada);

                View.OnClickListener onClickChkDolorCabezaSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaSeveraDia5).setOnClickListener(onClickChkDolorCabezaSevera);

                /*DOLOR DOLOR MUSCULAR DIA 5*/
                View.OnClickListener onClickChkDolorMuscularLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularLeveDia5).setOnClickListener(onClickChkDolorMuscularLeve);

                View.OnClickListener onClickChkDolorMuscularModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularModeradaDia5).setOnClickListener(onClickChkDolorMuscularModerada);

                View.OnClickListener onClickChkDolorMuscularSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularSeveraDia5).setOnClickListener(onClickChkDolorMuscularSevera);
                /*DOLOR ARTICULAR DIA 5*/
                View.OnClickListener onClickChkDolorArticularLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularLeveDia5).setOnClickListener(onClickChkDolorArticularLeve);

                View.OnClickListener onClickChkDolorArticularModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularModeradaDia5).setOnClickListener(onClickChkDolorArticularModerada);

                View.OnClickListener onClickChkDolorArticularSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularSeveraDia5).setOnClickListener(onClickChkDolorArticularSevera);
                /*-----------------------------*/

            }

            public void cargarDatosSintomasDia6() {
                ((Spinner) getActivity().findViewById(R.id.spnDia6Fila1)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarConsultaInicial(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia6Fila2)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFiebre(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia6Fila3)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarTos(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia6Fila4)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarSecrecionNasal(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia6Fila5)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorGarganta(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia6Fila6)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCongestionNasal(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia6Fila7)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorCabeza(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia6Fila8)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFaltaApetito(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia6Fila9)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorMuscular(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia6Fila10)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorArticular(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia6Fila11)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorOido(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia6Fila12)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarRespiracionRapida(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia6Fila13)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDificultadRespirar(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia6Fila14)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFaltaEscuela(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia6Fila15)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarQuedoEnCama(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                /*************************************************/
                ((Spinner) getActivity().findViewById(R.id.spnDia6Fila16)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCuadroConfusional(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia6Fila17)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCuadroNeurologico(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia6Fila18)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarConfusionMental(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia6Fila19)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarAnosmia(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia6Fila20)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarAgeusia(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia6Fila21)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarMareo(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia6Fila22)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarIctus(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia6Fila23)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarSincope(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });
                /************************************************/

                /*FIEBRE DIA 6*/
                View.OnClickListener onClickChkFiebreLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreLeveDia6).setOnClickListener(onClickChkFiebreLeve);

                View.OnClickListener onClickChkFiebreModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreModeradaDia6).setOnClickListener(onClickChkFiebreModerada);

                View.OnClickListener onClickChkFiebreSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreSeveraDia6).setOnClickListener(onClickChkFiebreSevera);
                /*-------------------------------*/
                /*TOS DIA 6*/
                View.OnClickListener onClickChkTosLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosLeveDia6).setOnClickListener(onClickChkTosLeve);

                View.OnClickListener onClickChkTosModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosModeradaDia6).setOnClickListener(onClickChkTosModerada);

                View.OnClickListener onClickChkTosSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosSeveraDia6).setOnClickListener(onClickChkTosSevera);
                /*-------------------------------*/
                /*SECRECION NASAL DIA 6*/
                View.OnClickListener onClickChkSecrecionNasalLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalLeveDia6).setOnClickListener(onClickChkSecrecionNasalLeve);

                View.OnClickListener onClickChkSecrecionNasalModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia6).setOnClickListener(onClickChkSecrecionNasalModerada);

                View.OnClickListener onClickChkSecrecionNasalSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia6).setOnClickListener(onClickChkSecrecionNasalSevera);
                /*-------------------------------*/
                /*DOLOR DE GARGANTA DIA 6*/
                View.OnClickListener onClickChkDolorGargantaLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaLeveDia6).setOnClickListener(onClickChkDolorGargantaLeve);

                View.OnClickListener onClickChkDolorGargantaModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaModeradaDia6).setOnClickListener(onClickChkDolorGargantaModerada);

                View.OnClickListener onClickChkDolorGargantaSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaSeveraDia6).setOnClickListener(onClickChkDolorGargantaSevera);
                /*DOLOR DE CABEZA DIA 6*/
                View.OnClickListener onClickChkDolorCabezaLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaLeveDia6).setOnClickListener(onClickChkDolorCabezaLeve);

                View.OnClickListener onClickChkDolorCabezaModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaModeradaDia6).setOnClickListener(onClickChkDolorCabezaModerada);

                View.OnClickListener onClickChkDolorCabezaSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaSeveraDia6).setOnClickListener(onClickChkDolorCabezaSevera);

                /*DOLOR DOLOR MUSCULAR DIA 6*/
                View.OnClickListener onClickChkDolorMuscularLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularLeveDia6).setOnClickListener(onClickChkDolorMuscularLeve);

                View.OnClickListener onClickChkDolorMuscularModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularModeradaDia6).setOnClickListener(onClickChkDolorMuscularModerada);

                View.OnClickListener onClickChkDolorMuscularSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularSeveraDia6).setOnClickListener(onClickChkDolorMuscularSevera);
                /*DOLOR ARTICULAR DIA 6*/
                View.OnClickListener onClickChkDolorArticularLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularLeveDia6).setOnClickListener(onClickChkDolorArticularLeve);

                View.OnClickListener onClickChkDolorArticularModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularModeradaDia6).setOnClickListener(onClickChkDolorArticularModerada);

                View.OnClickListener onClickChkDolorArticularSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularSeveraDia6).setOnClickListener(onClickChkDolorArticularSevera);
                /*-----------------------------*/

            }

            public void cargarDatosSintomasDia7() {
                ((Spinner) getActivity().findViewById(R.id.spnDia7Fila1)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarConsultaInicial(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia7Fila2)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFiebre(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia7Fila3)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarTos(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia7Fila4)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarSecrecionNasal(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia7Fila5)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorGarganta(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia7Fila6)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCongestionNasal(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia7Fila7)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorCabeza(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia7Fila8)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFaltaApetito(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia7Fila9)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorMuscular(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia7Fila10)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorArticular(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia7Fila11)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorOido(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia7Fila12)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarRespiracionRapida(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia7Fila13)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDificultadRespirar(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia7Fila14)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFaltaEscuela(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia7Fila15)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarQuedoEnCama(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                /*************************************************/
                ((Spinner) getActivity().findViewById(R.id.spnDia7Fila16)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCuadroConfusional(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia7Fila17)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCuadroNeurologico(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia7Fila18)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarConfusionMental(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia7Fila19)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarAnosmia(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia7Fila20)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarAgeusia(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia7Fila21)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarMareo(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia7Fila22)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarIctus(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia7Fila23)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarSincope(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });
                /************************************************/

                /*FIEBRE DIA 7*/
                View.OnClickListener onClickChkFiebreLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreLeveDia7).setOnClickListener(onClickChkFiebreLeve);

                View.OnClickListener onClickChkFiebreModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreModeradaDia7).setOnClickListener(onClickChkFiebreModerada);

                View.OnClickListener onClickChkFiebreSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreSeveraDia7).setOnClickListener(onClickChkFiebreSevera);
                /*-------------------------------*/
                /*TOS DIA 7*/
                View.OnClickListener onClickChkTosLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosLeveDia7).setOnClickListener(onClickChkTosLeve);

                View.OnClickListener onClickChkTosModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosModeradaDia7).setOnClickListener(onClickChkTosModerada);

                View.OnClickListener onClickChkTosSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosSeveraDia7).setOnClickListener(onClickChkTosSevera);
                /*-------------------------------*/
                /*SECRECION NASAL DIA 7*/
                View.OnClickListener onClickChkSecrecionNasalLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalLeveDia7).setOnClickListener(onClickChkSecrecionNasalLeve);

                View.OnClickListener onClickChkSecrecionNasalModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia7).setOnClickListener(onClickChkSecrecionNasalModerada);

                View.OnClickListener onClickChkSecrecionNasalSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia7).setOnClickListener(onClickChkSecrecionNasalSevera);
                /*-------------------------------*/
                /*DOLOR DE GARGANTA DIA 7*/
                View.OnClickListener onClickChkDolorGargantaLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaLeveDia7).setOnClickListener(onClickChkDolorGargantaLeve);

                View.OnClickListener onClickChkDolorGargantaModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaModeradaDia7).setOnClickListener(onClickChkDolorGargantaModerada);

                View.OnClickListener onClickChkDolorGargantaSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaSeveraDia7).setOnClickListener(onClickChkDolorGargantaSevera);
                /*DOLOR DE CABEZA DIA 7*/
                View.OnClickListener onClickChkDolorCabezaLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaLeveDia7).setOnClickListener(onClickChkDolorCabezaLeve);

                View.OnClickListener onClickChkDolorCabezaModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaModeradaDia7).setOnClickListener(onClickChkDolorCabezaModerada);

                View.OnClickListener onClickChkDolorCabezaSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaSeveraDia7).setOnClickListener(onClickChkDolorCabezaSevera);

                /*DOLOR DOLOR MUSCULAR DIA 7*/
                View.OnClickListener onClickChkDolorMuscularLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularLeveDia7).setOnClickListener(onClickChkDolorMuscularLeve);

                View.OnClickListener onClickChkDolorMuscularModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularModeradaDia7).setOnClickListener(onClickChkDolorMuscularModerada);

                View.OnClickListener onClickChkDolorMuscularSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularSeveraDia7).setOnClickListener(onClickChkDolorMuscularSevera);
                /*DOLOR ARTICULAR DIA 7*/
                View.OnClickListener onClickChkDolorArticularLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularLeveDia7).setOnClickListener(onClickChkDolorArticularLeve);

                View.OnClickListener onClickChkDolorArticularModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularModeradaDia7).setOnClickListener(onClickChkDolorArticularModerada);

                View.OnClickListener onClickChkDolorArticularSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularSeveraDia7).setOnClickListener(onClickChkDolorArticularSevera);
                /*-----------------------------*/

            }

            public void cargarDatosSintomasDia8() {
                ((Spinner) getActivity().findViewById(R.id.spnDia8Fila1)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarConsultaInicial(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia8Fila2)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFiebre(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia8Fila3)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarTos(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia8Fila4)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarSecrecionNasal(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia8Fila5)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorGarganta(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia8Fila6)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCongestionNasal(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia8Fila7)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorCabeza(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia8Fila8)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFaltaApetito(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia8Fila9)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorMuscular(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia8Fila10)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorArticular(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia8Fila11)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorOido(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia8Fila12)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarRespiracionRapida(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia8Fila13)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDificultadRespirar(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia8Fila14)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFaltaEscuela(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia8Fila15)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarQuedoEnCama(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                /*************************************************/
                ((Spinner) getActivity().findViewById(R.id.spnDia8Fila16)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCuadroConfusional(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia8Fila17)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCuadroNeurologico(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia8Fila18)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarConfusionMental(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia8Fila19)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarAnosmia(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia8Fila20)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarAgeusia(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia8Fila21)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarMareo(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia8Fila22)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarIctus(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia8Fila23)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarSincope(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });
                /************************************************/

                /*FIEBRE DIA 8*/
                View.OnClickListener onClickChkFiebreLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreLeveDia8).setOnClickListener(onClickChkFiebreLeve);

                View.OnClickListener onClickChkFiebreModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreModeradaDia8).setOnClickListener(onClickChkFiebreModerada);

                View.OnClickListener onClickChkFiebreSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreSeveraDia8).setOnClickListener(onClickChkFiebreSevera);
                /*-------------------------------*/
                /*TOS DIA 8*/
                View.OnClickListener onClickChkTosLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosLeveDia8).setOnClickListener(onClickChkTosLeve);

                View.OnClickListener onClickChkTosModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosModeradaDia8).setOnClickListener(onClickChkTosModerada);

                View.OnClickListener onClickChkTosSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosSeveraDia8).setOnClickListener(onClickChkTosSevera);

                /*-------------------------------*/
                /*SECRECION NASAL DIA 8*/
                View.OnClickListener onClickChkSecrecionNasalLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalLeveDia8).setOnClickListener(onClickChkSecrecionNasalLeve);

                View.OnClickListener onClickChkSecrecionNasalModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia8).setOnClickListener(onClickChkSecrecionNasalModerada);

                View.OnClickListener onClickChkSecrecionNasalSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia8).setOnClickListener(onClickChkSecrecionNasalSevera);
                /*-------------------------------*/
                /*DOLOR DE GARGANTA DIA 8*/
                View.OnClickListener onClickChkDolorGargantaLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaLeveDia8).setOnClickListener(onClickChkDolorGargantaLeve);

                View.OnClickListener onClickChkDolorGargantaModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaModeradaDia8).setOnClickListener(onClickChkDolorGargantaModerada);

                View.OnClickListener onClickChkDolorGargantaSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaSeveraDia8).setOnClickListener(onClickChkDolorGargantaSevera);
                /*DOLOR DE CABEZA DIA 8*/
                View.OnClickListener onClickChkDolorCabezaLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaLeveDia8).setOnClickListener(onClickChkDolorCabezaLeve);

                View.OnClickListener onClickChkDolorCabezaModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaModeradaDia8).setOnClickListener(onClickChkDolorCabezaModerada);

                View.OnClickListener onClickChkDolorCabezaSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaSeveraDia8).setOnClickListener(onClickChkDolorCabezaSevera);

                /*DOLOR DOLOR MUSCULAR DIA 8*/
                View.OnClickListener onClickChkDolorMuscularLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularLeveDia8).setOnClickListener(onClickChkDolorMuscularLeve);

                View.OnClickListener onClickChkDolorMuscularModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularModeradaDia8).setOnClickListener(onClickChkDolorMuscularModerada);

                View.OnClickListener onClickChkDolorMuscularSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularSeveraDia8).setOnClickListener(onClickChkDolorMuscularSevera);
                /*DOLOR ARTICULAR DIA 8*/
                View.OnClickListener onClickChkDolorArticularLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularLeveDia8).setOnClickListener(onClickChkDolorArticularLeve);

                View.OnClickListener onClickChkDolorArticularModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularModeradaDia8).setOnClickListener(onClickChkDolorArticularModerada);

                View.OnClickListener onClickChkDolorArticularSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularSeveraDia8).setOnClickListener(onClickChkDolorArticularSevera);
                /*-----------------------------*/

            }

            public void cargarDatosSintomasDia9() {
                ((Spinner) getActivity().findViewById(R.id.spnDia9Fila1)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarConsultaInicial(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia9Fila2)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFiebre(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia9Fila3)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarTos(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia9Fila4)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarSecrecionNasal(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia9Fila5)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorGarganta(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia9Fila6)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCongestionNasal(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia9Fila7)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorCabeza(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia9Fila8)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFaltaApetito(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia9Fila9)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorMuscular(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia9Fila10)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorArticular(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia9Fila11)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorOido(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia9Fila12)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarRespiracionRapida(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia9Fila13)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDificultadRespirar(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia9Fila14)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFaltaEscuela(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia9Fila15)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarQuedoEnCama(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                /*************************************************/
                ((Spinner) getActivity().findViewById(R.id.spnDia9Fila16)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCuadroConfusional(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia9Fila17)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCuadroNeurologico(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia9Fila18)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarConfusionMental(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia9Fila19)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarAnosmia(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia9Fila20)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarAgeusia(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia9Fila21)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarMareo(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia9Fila22)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarIctus(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia9Fila23)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarSincope(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });
                /************************************************/

                /*FIEBRE DIA 9*/
                View.OnClickListener onClickChkFiebreLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreLeveDia9).setOnClickListener(onClickChkFiebreLeve);

                View.OnClickListener onClickChkFiebreModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreModeradaDia9).setOnClickListener(onClickChkFiebreModerada);

                View.OnClickListener onClickChkFiebreSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreSeveraDia9).setOnClickListener(onClickChkFiebreSevera);
                /*-------------------------------*/
                /*TOS DIA 9*/
                View.OnClickListener onClickChkTosLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosLeveDia9).setOnClickListener(onClickChkTosLeve);

                View.OnClickListener onClickChkTosModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosModeradaDia9).setOnClickListener(onClickChkTosModerada);

                View.OnClickListener onClickChkTosSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosSeveraDia9).setOnClickListener(onClickChkTosSevera);
                /*-------------------------------*/
                /*SECRECION NASAL DIA 9*/
                View.OnClickListener onClickChkSecrecionNasalLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalLeveDia9).setOnClickListener(onClickChkSecrecionNasalLeve);

                View.OnClickListener onClickChkSecrecionNasalModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia9).setOnClickListener(onClickChkSecrecionNasalModerada);

                View.OnClickListener onClickChkSecrecionNasalSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia9).setOnClickListener(onClickChkSecrecionNasalSevera);
                /*-------------------------------*/
                /*DOLOR DE GARGANTA DIA 9*/
                View.OnClickListener onClickChkDolorGargantaLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaLeveDia9).setOnClickListener(onClickChkDolorGargantaLeve);

                View.OnClickListener onClickChkDolorGargantaModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaModeradaDia9).setOnClickListener(onClickChkDolorGargantaModerada);

                View.OnClickListener onClickChkDolorGargantaSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaSeveraDia9).setOnClickListener(onClickChkDolorGargantaSevera);
                /*DOLOR DE CABEZA DIA 9*/
                View.OnClickListener onClickChkDolorCabezaLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaLeveDia9).setOnClickListener(onClickChkDolorCabezaLeve);

                View.OnClickListener onClickChkDolorCabezaModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaModeradaDia9).setOnClickListener(onClickChkDolorCabezaModerada);

                View.OnClickListener onClickChkDolorCabezaSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaSeveraDia9).setOnClickListener(onClickChkDolorCabezaSevera);

                /*DOLOR DOLOR MUSCULAR DIA 9*/
                View.OnClickListener onClickChkDolorMuscularLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularLeveDia9).setOnClickListener(onClickChkDolorMuscularLeve);

                View.OnClickListener onClickChkDolorMuscularModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularModeradaDia9).setOnClickListener(onClickChkDolorMuscularModerada);

                View.OnClickListener onClickChkDolorMuscularSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularSeveraDia9).setOnClickListener(onClickChkDolorMuscularSevera);
                /*DOLOR ARTICULAR DIA 9*/
                View.OnClickListener onClickChkDolorArticularLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularLeveDia9).setOnClickListener(onClickChkDolorArticularLeve);

                View.OnClickListener onClickChkDolorArticularModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularModeradaDia9).setOnClickListener(onClickChkDolorArticularModerada);

                View.OnClickListener onClickChkDolorArticularSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularSeveraDia9).setOnClickListener(onClickChkDolorArticularSevera);
                /*-----------------------------*/

            }

            public void cargarDatosSintomasDia10() {
                ((Spinner) getActivity().findViewById(R.id.spnDia10Fila1)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarConsultaInicial(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia10Fila2)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFiebre(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia10Fila3)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarTos(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia10Fila4)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarSecrecionNasal(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia10Fila5)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorGarganta(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia10Fila6)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCongestionNasal(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia10Fila7)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorCabeza(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia10Fila8)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFaltaApetito(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia10Fila9)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorMuscular(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia10Fila10)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorArticular(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia10Fila11)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorOido(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia10Fila12)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarRespiracionRapida(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia10Fila13)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDificultadRespirar(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia10Fila14)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFaltaEscuela(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia10Fila15)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarQuedoEnCama(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                /*************************************************/
                ((Spinner) getActivity().findViewById(R.id.spnDia10Fila16)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCuadroConfusional(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia10Fila17)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCuadroNeurologico(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia10Fila18)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarConfusionMental(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia10Fila19)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarAnosmia(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia10Fila20)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarAgeusia(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia10Fila21)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarMareo(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia10Fila22)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarIctus(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia10Fila23)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarSincope(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });
                /************************************************/

                /*FIEBRE DIA 10*/
                View.OnClickListener onClickChkFiebreLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreLeveDia10).setOnClickListener(onClickChkFiebreLeve);

                View.OnClickListener onClickChkFiebreModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreModeradaDia10).setOnClickListener(onClickChkFiebreModerada);

                View.OnClickListener onClickChkFiebreSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreSeveraDia10).setOnClickListener(onClickChkFiebreSevera);
                /*-------------------------------*/
                /*TOS DIA 10*/
                View.OnClickListener onClickChkTosLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosLeveDia10).setOnClickListener(onClickChkTosLeve);

                View.OnClickListener onClickChkTosModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosModeradaDia10).setOnClickListener(onClickChkTosModerada);

                View.OnClickListener onClickChkTosSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosSeveraDia10).setOnClickListener(onClickChkTosSevera);
                /*-------------------------------*/
                /*SECRECION NASAL DIA 10*/
                View.OnClickListener onClickChkSecrecionNasalLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalLeveDia10).setOnClickListener(onClickChkSecrecionNasalLeve);

                View.OnClickListener onClickChkSecrecionNasalModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia10).setOnClickListener(onClickChkSecrecionNasalModerada);

                View.OnClickListener onClickChkSecrecionNasalSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia10).setOnClickListener(onClickChkSecrecionNasalSevera);
                /*-------------------------------*/
                /*DOLOR DE GARGANTA DIA 10*/
                View.OnClickListener onClickChkDolorGargantaLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaLeveDia10).setOnClickListener(onClickChkDolorGargantaLeve);

                View.OnClickListener onClickChkDolorGargantaModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaModeradaDia10).setOnClickListener(onClickChkDolorGargantaModerada);

                View.OnClickListener onClickChkDolorGargantaSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaSeveraDia10).setOnClickListener(onClickChkDolorGargantaSevera);
                /*DOLOR DE CABEZA DIA 10*/
                View.OnClickListener onClickChkDolorCabezaLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaLeveDia10).setOnClickListener(onClickChkDolorCabezaLeve);

                View.OnClickListener onClickChkDolorCabezaModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaModeradaDia10).setOnClickListener(onClickChkDolorCabezaModerada);

                View.OnClickListener onClickChkDolorCabezaSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaSeveraDia10).setOnClickListener(onClickChkDolorCabezaSevera);

                /*DOLOR DOLOR MUSCULAR DIA 10*/
                View.OnClickListener onClickChkDolorMuscularLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularLeveDia10).setOnClickListener(onClickChkDolorMuscularLeve);

                View.OnClickListener onClickChkDolorMuscularModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularModeradaDia10).setOnClickListener(onClickChkDolorMuscularModerada);

                View.OnClickListener onClickChkDolorMuscularSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularSeveraDia10).setOnClickListener(onClickChkDolorMuscularSevera);
                /*DOLOR ARTICULAR DIA 10*/
                View.OnClickListener onClickChkDolorArticularLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularLeveDia10).setOnClickListener(onClickChkDolorArticularLeve);

                View.OnClickListener onClickChkDolorArticularModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularModeradaDia10).setOnClickListener(onClickChkDolorArticularModerada);

                View.OnClickListener onClickChkDolorArticularSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularSeveraDia10).setOnClickListener(onClickChkDolorArticularSevera);
                /*-----------------------------*/

            }

            public void cargarDatosSintomasDia11() {
                ((Spinner) getActivity().findViewById(R.id.spnDia11Fila1)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarConsultaInicial(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia11Fila2)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFiebre(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia11Fila3)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarTos(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia11Fila4)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarSecrecionNasal(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia11Fila5)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorGarganta(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia11Fila6)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCongestionNasal(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia11Fila7)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorCabeza(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia11Fila8)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFaltaApetito(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia11Fila9)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorMuscular(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia11Fila10)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorArticular(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia11Fila11)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorOido(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia11Fila12)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarRespiracionRapida(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia11Fila13)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDificultadRespirar(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia11Fila14)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFaltaEscuela(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia11Fila15)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarQuedoEnCama(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                /*************************************************/
                ((Spinner) getActivity().findViewById(R.id.spnDia11Fila16)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCuadroConfusional(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia11Fila17)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCuadroNeurologico(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia11Fila18)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarConfusionMental(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia11Fila19)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarAnosmia(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia11Fila20)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarAgeusia(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia11Fila21)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarMareo(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia11Fila22)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarIctus(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia11Fila23)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarSincope(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });
                /************************************************/

                /*FIEBRE DIA 11*/
                View.OnClickListener onClickChkFiebreLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreLeveDia11).setOnClickListener(onClickChkFiebreLeve);

                View.OnClickListener onClickChkFiebreModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreModeradaDia11).setOnClickListener(onClickChkFiebreModerada);

                View.OnClickListener onClickChkFiebreSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreSeveraDia11).setOnClickListener(onClickChkFiebreSevera);
                /*-------------------------------*/
                /*TOS DIA 11*/
                View.OnClickListener onClickChkTosLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosLeveDia11).setOnClickListener(onClickChkTosLeve);

                View.OnClickListener onClickChkTosModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosModeradaDia11).setOnClickListener(onClickChkTosModerada);

                View.OnClickListener onClickChkTosSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosSeveraDia11).setOnClickListener(onClickChkTosSevera);
                /*-------------------------------*/
                /*SECRECION NASAL DIA 11*/
                View.OnClickListener onClickChkSecrecionNasalLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalLeveDia11).setOnClickListener(onClickChkSecrecionNasalLeve);

                View.OnClickListener onClickChkSecrecionNasalModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia11).setOnClickListener(onClickChkSecrecionNasalModerada);

                View.OnClickListener onClickChkSecrecionNasalSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia11).setOnClickListener(onClickChkSecrecionNasalSevera);
                /*-------------------------------*/
                /*DOLOR DE GARGANTA DIA 11*/
                View.OnClickListener onClickChkDolorGargantaLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaLeveDia11).setOnClickListener(onClickChkDolorGargantaLeve);

                View.OnClickListener onClickChkDolorGargantaModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaModeradaDia11).setOnClickListener(onClickChkDolorGargantaModerada);

                View.OnClickListener onClickChkDolorGargantaSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaSeveraDia11).setOnClickListener(onClickChkDolorGargantaSevera);
                /*DOLOR DE CABEZA DIA 11*/
                View.OnClickListener onClickChkDolorCabezaLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaLeveDia11).setOnClickListener(onClickChkDolorCabezaLeve);

                View.OnClickListener onClickChkDolorCabezaModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaModeradaDia11).setOnClickListener(onClickChkDolorCabezaModerada);

                View.OnClickListener onClickChkDolorCabezaSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaSeveraDia11).setOnClickListener(onClickChkDolorCabezaSevera);

                /*DOLOR DOLOR MUSCULAR DIA 11*/
                View.OnClickListener onClickChkDolorMuscularLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularLeveDia11).setOnClickListener(onClickChkDolorMuscularLeve);

                View.OnClickListener onClickChkDolorMuscularModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularModeradaDia11).setOnClickListener(onClickChkDolorMuscularModerada);

                View.OnClickListener onClickChkDolorMuscularSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularSeveraDia11).setOnClickListener(onClickChkDolorMuscularSevera);
                /*DOLOR ARTICULAR DIA 11*/
                View.OnClickListener onClickChkDolorArticularLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularLeveDia11).setOnClickListener(onClickChkDolorArticularLeve);

                View.OnClickListener onClickChkDolorArticularModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularModeradaDia11).setOnClickListener(onClickChkDolorArticularModerada);

                View.OnClickListener onClickChkDolorArticularSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularSeveraDia11).setOnClickListener(onClickChkDolorArticularSevera);
                /*-----------------------------*/

            }

            public void cargarDatosSintomasDia12() {
                ((Spinner) getActivity().findViewById(R.id.spnDia12Fila1)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarConsultaInicial(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia12Fila2)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFiebre(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia12Fila3)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarTos(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia12Fila4)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarSecrecionNasal(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia12Fila5)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorGarganta(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia12Fila6)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCongestionNasal(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia12Fila7)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorCabeza(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia12Fila8)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFaltaApetito(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia12Fila9)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorMuscular(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia12Fila10)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorArticular(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia12Fila11)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorOido(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia12Fila12)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarRespiracionRapida(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia12Fila13)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDificultadRespirar(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia12Fila14)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFaltaEscuela(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia12Fila15)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarQuedoEnCama(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                /*************************************************/
                ((Spinner) getActivity().findViewById(R.id.spnDia12Fila16)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCuadroConfusional(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia12Fila17)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCuadroNeurologico(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia12Fila18)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarConfusionMental(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia12Fila19)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarAnosmia(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia12Fila20)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarAgeusia(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia12Fila21)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarMareo(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia12Fila22)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarIctus(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia12Fila23)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarSincope(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });
                /************************************************/

                /*FIEBRE DIA 12*/
                View.OnClickListener onClickChkFiebreLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreLeveDia12).setOnClickListener(onClickChkFiebreLeve);

                View.OnClickListener onClickChkFiebreModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreModeradaDia12).setOnClickListener(onClickChkFiebreModerada);

                View.OnClickListener onClickChkFiebreSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreSeveraDia12).setOnClickListener(onClickChkFiebreSevera);
                /*-------------------------------*/
                /*TOS DIA 12*/
                View.OnClickListener onClickChkTosLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosLeveDia12).setOnClickListener(onClickChkTosLeve);

                View.OnClickListener onClickChkTosModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosModeradaDia12).setOnClickListener(onClickChkTosModerada);

                View.OnClickListener onClickChkTosSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosSeveraDia12).setOnClickListener(onClickChkTosSevera);
                /*-------------------------------*/
                /*SECRECION NASAL DIA 12*/
                View.OnClickListener onClickChkSecrecionNasalLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalLeveDia12).setOnClickListener(onClickChkSecrecionNasalLeve);

                View.OnClickListener onClickChkSecrecionNasalModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia12).setOnClickListener(onClickChkSecrecionNasalModerada);

                View.OnClickListener onClickChkSecrecionNasalSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia12).setOnClickListener(onClickChkSecrecionNasalSevera);
                /*-------------------------------*/
                /*DOLOR DE GARGANTA DIA 12*/
                View.OnClickListener onClickChkDolorGargantaLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaLeveDia12).setOnClickListener(onClickChkDolorGargantaLeve);

                View.OnClickListener onClickChkDolorGargantaModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaModeradaDia12).setOnClickListener(onClickChkDolorGargantaModerada);

                View.OnClickListener onClickChkDolorGargantaSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaSeveraDia12).setOnClickListener(onClickChkDolorGargantaSevera);
                /*DOLOR DE CABEZA DIA 12*/
                View.OnClickListener onClickChkDolorCabezaLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaLeveDia12).setOnClickListener(onClickChkDolorCabezaLeve);

                View.OnClickListener onClickChkDolorCabezaModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaModeradaDia12).setOnClickListener(onClickChkDolorCabezaModerada);

                View.OnClickListener onClickChkDolorCabezaSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaSeveraDia12).setOnClickListener(onClickChkDolorCabezaSevera);

                /*DOLOR DOLOR MUSCULAR DIA 12*/
                View.OnClickListener onClickChkDolorMuscularLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularLeveDia12).setOnClickListener(onClickChkDolorMuscularLeve);

                View.OnClickListener onClickChkDolorMuscularModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularModeradaDia12).setOnClickListener(onClickChkDolorMuscularModerada);

                View.OnClickListener onClickChkDolorMuscularSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularSeveraDia12).setOnClickListener(onClickChkDolorMuscularSevera);
                /*DOLOR ARTICULAR DIA 12*/
                View.OnClickListener onClickChkDolorArticularLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularLeveDia12).setOnClickListener(onClickChkDolorArticularLeve);

                View.OnClickListener onClickChkDolorArticularModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularModeradaDia12).setOnClickListener(onClickChkDolorArticularModerada);

                View.OnClickListener onClickChkDolorArticularSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularSeveraDia12).setOnClickListener(onClickChkDolorArticularSevera);
                /*-----------------------------*/
            }

            /*Nuevos controles agregados SC*/
            public void cargarDatosSintomasDia13() {
                ((Spinner) getActivity().findViewById(R.id.spnDia13Fila1)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarConsultaInicial(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia13Fila2)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFiebre(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia13Fila3)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarTos(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia13Fila4)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarSecrecionNasal(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia13Fila5)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorGarganta(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia13Fila6)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCongestionNasal(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia13Fila7)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorCabeza(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia13Fila8)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFaltaApetito(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia13Fila9)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorMuscular(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia13Fila10)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorArticular(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia13Fila11)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorOido(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia13Fila12)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarRespiracionRapida(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia13Fila13)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDificultadRespirar(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia13Fila14)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFaltaEscuela(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia13Fila15)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarQuedoEnCama(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                /*************************************************/
                ((Spinner) getActivity().findViewById(R.id.spnDia13Fila16)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCuadroConfusional(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia13Fila17)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCuadroNeurologico(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia13Fila18)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarConfusionMental(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia13Fila19)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarAnosmia(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia13Fila20)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarAgeusia(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia13Fila21)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarMareo(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia13Fila22)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarIctus(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia13Fila23)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarSincope(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });
                /************************************************/

                /*FIEBRE DIA 12*/
                View.OnClickListener onClickChkFiebreLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreLeveDia13).setOnClickListener(onClickChkFiebreLeve);

                View.OnClickListener onClickChkFiebreModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreModeradaDia13).setOnClickListener(onClickChkFiebreModerada);

                View.OnClickListener onClickChkFiebreSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreSeveraDia13).setOnClickListener(onClickChkFiebreSevera);
                /*-------------------------------*/
                /*TOS DIA 12*/
                View.OnClickListener onClickChkTosLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosLeveDia13).setOnClickListener(onClickChkTosLeve);

                View.OnClickListener onClickChkTosModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosModeradaDia13).setOnClickListener(onClickChkTosModerada);

                View.OnClickListener onClickChkTosSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosSeveraDia13).setOnClickListener(onClickChkTosSevera);
                /*-------------------------------*/
                /*SECRECION NASAL DIA 12*/
                View.OnClickListener onClickChkSecrecionNasalLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalLeveDia13).setOnClickListener(onClickChkSecrecionNasalLeve);

                View.OnClickListener onClickChkSecrecionNasalModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia13).setOnClickListener(onClickChkSecrecionNasalModerada);

                View.OnClickListener onClickChkSecrecionNasalSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia13).setOnClickListener(onClickChkSecrecionNasalSevera);
                /*-------------------------------*/
                /*DOLOR DE GARGANTA DIA 12*/
                View.OnClickListener onClickChkDolorGargantaLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaLeveDia13).setOnClickListener(onClickChkDolorGargantaLeve);

                View.OnClickListener onClickChkDolorGargantaModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaModeradaDia13).setOnClickListener(onClickChkDolorGargantaModerada);

                View.OnClickListener onClickChkDolorGargantaSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaSeveraDia13).setOnClickListener(onClickChkDolorGargantaSevera);
                /*DOLOR DE CABEZA DIA 12*/
                View.OnClickListener onClickChkDolorCabezaLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaLeveDia13).setOnClickListener(onClickChkDolorCabezaLeve);

                View.OnClickListener onClickChkDolorCabezaModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaModeradaDia13).setOnClickListener(onClickChkDolorCabezaModerada);

                View.OnClickListener onClickChkDolorCabezaSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaSeveraDia13).setOnClickListener(onClickChkDolorCabezaSevera);

                /*DOLOR DOLOR MUSCULAR DIA 12*/
                View.OnClickListener onClickChkDolorMuscularLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularLeveDia13).setOnClickListener(onClickChkDolorMuscularLeve);

                View.OnClickListener onClickChkDolorMuscularModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularModeradaDia13).setOnClickListener(onClickChkDolorMuscularModerada);

                View.OnClickListener onClickChkDolorMuscularSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularSeveraDia13).setOnClickListener(onClickChkDolorMuscularSevera);
                /*DOLOR ARTICULAR DIA 12*/
                View.OnClickListener onClickChkDolorArticularLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularLeveDia13).setOnClickListener(onClickChkDolorArticularLeve);

                View.OnClickListener onClickChkDolorArticularModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularModeradaDia13).setOnClickListener(onClickChkDolorArticularModerada);

                View.OnClickListener onClickChkDolorArticularSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularSeveraDia13).setOnClickListener(onClickChkDolorArticularSevera);
            }

            public void cargarDatosSintomasDia14() {
                ((Spinner) getActivity().findViewById(R.id.spnDia14Fila1)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarConsultaInicial(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia14Fila2)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFiebre(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia14Fila3)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarTos(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia14Fila4)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarSecrecionNasal(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia14Fila5)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorGarganta(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia14Fila6)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCongestionNasal(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia14Fila7)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorCabeza(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia14Fila8)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFaltaApetito(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia14Fila9)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorMuscular(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia14Fila10)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorArticular(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia14Fila11)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorOido(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia14Fila12)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarRespiracionRapida(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia14Fila13)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDificultadRespirar(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia14Fila14)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFaltaEscuela(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia14Fila15)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarQuedoEnCama(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                /*************************************************/
                ((Spinner) getActivity().findViewById(R.id.spnDia14Fila16)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCuadroConfusional(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia14Fila17)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCuadroNeurologico(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia14Fila18)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarConfusionMental(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia14Fila19)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarAnosmia(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia14Fila20)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarAgeusia(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia14Fila21)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarMareo(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia14Fila22)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarIctus(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia14Fila23)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarSincope(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });
                /************************************************/

                /*FIEBRE DIA 12*/
                View.OnClickListener onClickChkFiebreLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreLeveDia14).setOnClickListener(onClickChkFiebreLeve);

                View.OnClickListener onClickChkFiebreModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreModeradaDia14).setOnClickListener(onClickChkFiebreModerada);

                View.OnClickListener onClickChkFiebreSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreSeveraDia14).setOnClickListener(onClickChkFiebreSevera);
                /*-------------------------------*/
                /*TOS DIA 12*/
                View.OnClickListener onClickChkTosLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosLeveDia14).setOnClickListener(onClickChkTosLeve);

                View.OnClickListener onClickChkTosModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosModeradaDia14).setOnClickListener(onClickChkTosModerada);

                View.OnClickListener onClickChkTosSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosSeveraDia14).setOnClickListener(onClickChkTosSevera);
                /*-------------------------------*/
                /*SECRECION NASAL DIA 12*/
                View.OnClickListener onClickChkSecrecionNasalLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalLeveDia14).setOnClickListener(onClickChkSecrecionNasalLeve);

                View.OnClickListener onClickChkSecrecionNasalModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia14).setOnClickListener(onClickChkSecrecionNasalModerada);

                View.OnClickListener onClickChkSecrecionNasalSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia14).setOnClickListener(onClickChkSecrecionNasalSevera);
                /*-------------------------------*/
                /*DOLOR DE GARGANTA DIA 12*/
                View.OnClickListener onClickChkDolorGargantaLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaLeveDia14).setOnClickListener(onClickChkDolorGargantaLeve);

                View.OnClickListener onClickChkDolorGargantaModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaModeradaDia14).setOnClickListener(onClickChkDolorGargantaModerada);

                View.OnClickListener onClickChkDolorGargantaSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaSeveraDia14).setOnClickListener(onClickChkDolorGargantaSevera);
                /*DOLOR DE CABEZA DIA 12*/
                View.OnClickListener onClickChkDolorCabezaLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaLeveDia14).setOnClickListener(onClickChkDolorCabezaLeve);

                View.OnClickListener onClickChkDolorCabezaModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaModeradaDia14).setOnClickListener(onClickChkDolorCabezaModerada);

                View.OnClickListener onClickChkDolorCabezaSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaSeveraDia14).setOnClickListener(onClickChkDolorCabezaSevera);

                /*DOLOR DOLOR MUSCULAR DIA 12*/
                View.OnClickListener onClickChkDolorMuscularLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularLeveDia14).setOnClickListener(onClickChkDolorMuscularLeve);

                View.OnClickListener onClickChkDolorMuscularModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularModeradaDia14).setOnClickListener(onClickChkDolorMuscularModerada);

                View.OnClickListener onClickChkDolorMuscularSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularSeveraDia14).setOnClickListener(onClickChkDolorMuscularSevera);
                /*DOLOR ARTICULAR DIA 12*/
                View.OnClickListener onClickChkDolorArticularLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularLeveDia14).setOnClickListener(onClickChkDolorArticularLeve);

                View.OnClickListener onClickChkDolorArticularModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularModeradaDia14).setOnClickListener(onClickChkDolorArticularModerada);

                View.OnClickListener onClickChkDolorArticularSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularSeveraDia14).setOnClickListener(onClickChkDolorArticularSevera);
                /*-----------------------------*/
            }

            public void cargarDatosSintomasDia15() {
                ((Spinner) getActivity().findViewById(R.id.spnDia15Fila1)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarConsultaInicial(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia15Fila2)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFiebre(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia15Fila3)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarTos(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia15Fila4)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarSecrecionNasal(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia15Fila5)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorGarganta(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia15Fila6)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCongestionNasal(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia15Fila7)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorCabeza(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia15Fila8)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFaltaApetito(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia15Fila9)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorMuscular(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia15Fila10)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorArticular(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia15Fila11)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorOido(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia15Fila12)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarRespiracionRapida(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia15Fila13)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDificultadRespirar(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia15Fila14)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFaltaEscuela(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia15Fila15)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarQuedoEnCama(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                /*************************************************/
                ((Spinner) getActivity().findViewById(R.id.spnDia15Fila16)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCuadroConfusional(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia15Fila17)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCuadroNeurologico(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia15Fila18)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarConfusionMental(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia15Fila19)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarAnosmia(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia15Fila20)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarAgeusia(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia15Fila21)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarMareo(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia15Fila22)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarIctus(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia15Fila23)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarSincope(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });
                /************************************************/

                /*FIEBRE DIA 12*/
                View.OnClickListener onClickChkFiebreLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreLeveDia15).setOnClickListener(onClickChkFiebreLeve);

                View.OnClickListener onClickChkFiebreModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreModeradaDia15).setOnClickListener(onClickChkFiebreModerada);

                View.OnClickListener onClickChkFiebreSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreSeveraDia15).setOnClickListener(onClickChkFiebreSevera);
                /*-------------------------------*/
                /*TOS DIA 12*/
                View.OnClickListener onClickChkTosLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosLeveDia15).setOnClickListener(onClickChkTosLeve);

                View.OnClickListener onClickChkTosModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosModeradaDia15).setOnClickListener(onClickChkTosModerada);

                View.OnClickListener onClickChkTosSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosSeveraDia15).setOnClickListener(onClickChkTosSevera);
                /*-------------------------------*/
                /*SECRECION NASAL DIA 12*/
                View.OnClickListener onClickChkSecrecionNasalLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalLeveDia15).setOnClickListener(onClickChkSecrecionNasalLeve);

                View.OnClickListener onClickChkSecrecionNasalModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia15).setOnClickListener(onClickChkSecrecionNasalModerada);

                View.OnClickListener onClickChkSecrecionNasalSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia15).setOnClickListener(onClickChkSecrecionNasalSevera);
                /*-------------------------------*/
                /*DOLOR DE GARGANTA DIA 12*/
                View.OnClickListener onClickChkDolorGargantaLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaLeveDia15).setOnClickListener(onClickChkDolorGargantaLeve);

                View.OnClickListener onClickChkDolorGargantaModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaModeradaDia15).setOnClickListener(onClickChkDolorGargantaModerada);

                View.OnClickListener onClickChkDolorGargantaSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaSeveraDia15).setOnClickListener(onClickChkDolorGargantaSevera);
                /*DOLOR DE CABEZA DIA 12*/
                View.OnClickListener onClickChkDolorCabezaLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaLeveDia15).setOnClickListener(onClickChkDolorCabezaLeve);

                View.OnClickListener onClickChkDolorCabezaModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaModeradaDia15).setOnClickListener(onClickChkDolorCabezaModerada);

                View.OnClickListener onClickChkDolorCabezaSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaSeveraDia15).setOnClickListener(onClickChkDolorCabezaSevera);

                /*DOLOR DOLOR MUSCULAR DIA 12*/
                View.OnClickListener onClickChkDolorMuscularLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularLeveDia15).setOnClickListener(onClickChkDolorMuscularLeve);

                View.OnClickListener onClickChkDolorMuscularModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularModeradaDia15).setOnClickListener(onClickChkDolorMuscularModerada);

                View.OnClickListener onClickChkDolorMuscularSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularSeveraDia15).setOnClickListener(onClickChkDolorMuscularSevera);
                /*DOLOR ARTICULAR DIA 12*/
                View.OnClickListener onClickChkDolorArticularLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularLeveDia15).setOnClickListener(onClickChkDolorArticularLeve);

                View.OnClickListener onClickChkDolorArticularModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularModeradaDia15).setOnClickListener(onClickChkDolorArticularModerada);

                View.OnClickListener onClickChkDolorArticularSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularSeveraDia15).setOnClickListener(onClickChkDolorArticularSevera);
                /*-----------------------------*/
            }

            public void cargarDatosSintomasDia16() {
                ((Spinner) getActivity().findViewById(R.id.spnDia16Fila1)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarConsultaInicial(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia16Fila2)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFiebre(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia16Fila3)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarTos(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia16Fila4)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarSecrecionNasal(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia16Fila5)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorGarganta(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia16Fila6)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCongestionNasal(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia16Fila7)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorCabeza(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia16Fila8)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFaltaApetito(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia16Fila9)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorMuscular(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia16Fila10)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorArticular(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia16Fila11)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorOido(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia16Fila12)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarRespiracionRapida(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia16Fila13)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDificultadRespirar(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia16Fila14)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFaltaEscuela(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia16Fila15)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarQuedoEnCama(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                /*************************************************/
                ((Spinner) getActivity().findViewById(R.id.spnDia16Fila16)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCuadroConfusional(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia16Fila17)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCuadroNeurologico(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia16Fila18)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarConfusionMental(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia16Fila19)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarAnosmia(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia16Fila20)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarAgeusia(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia16Fila21)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarMareo(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia16Fila22)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarIctus(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia16Fila23)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarSincope(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });
                /************************************************/

                /*FIEBRE DIA 12*/
                View.OnClickListener onClickChkFiebreLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreLeveDia16).setOnClickListener(onClickChkFiebreLeve);

                View.OnClickListener onClickChkFiebreModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreModeradaDia16).setOnClickListener(onClickChkFiebreModerada);

                View.OnClickListener onClickChkFiebreSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreSeveraDia16).setOnClickListener(onClickChkFiebreSevera);
                /*-------------------------------*/
                /*TOS DIA 12*/
                View.OnClickListener onClickChkTosLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosLeveDia16).setOnClickListener(onClickChkTosLeve);

                View.OnClickListener onClickChkTosModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosModeradaDia16).setOnClickListener(onClickChkTosModerada);

                View.OnClickListener onClickChkTosSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosSeveraDia16).setOnClickListener(onClickChkTosSevera);
                /*-------------------------------*/
                /*SECRECION NASAL DIA 12*/
                View.OnClickListener onClickChkSecrecionNasalLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalLeveDia16).setOnClickListener(onClickChkSecrecionNasalLeve);

                View.OnClickListener onClickChkSecrecionNasalModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia16).setOnClickListener(onClickChkSecrecionNasalModerada);

                View.OnClickListener onClickChkSecrecionNasalSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia16).setOnClickListener(onClickChkSecrecionNasalSevera);
                /*-------------------------------*/
                /*DOLOR DE GARGANTA DIA 12*/
                View.OnClickListener onClickChkDolorGargantaLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaLeveDia16).setOnClickListener(onClickChkDolorGargantaLeve);

                View.OnClickListener onClickChkDolorGargantaModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaModeradaDia16).setOnClickListener(onClickChkDolorGargantaModerada);

                View.OnClickListener onClickChkDolorGargantaSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaSeveraDia16).setOnClickListener(onClickChkDolorGargantaSevera);
                /*DOLOR DE CABEZA DIA 12*/
                View.OnClickListener onClickChkDolorCabezaLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaLeveDia16).setOnClickListener(onClickChkDolorCabezaLeve);

                View.OnClickListener onClickChkDolorCabezaModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaModeradaDia16).setOnClickListener(onClickChkDolorCabezaModerada);

                View.OnClickListener onClickChkDolorCabezaSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaSeveraDia16).setOnClickListener(onClickChkDolorCabezaSevera);

                /*DOLOR DOLOR MUSCULAR DIA 12*/
                View.OnClickListener onClickChkDolorMuscularLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularLeveDia16).setOnClickListener(onClickChkDolorMuscularLeve);

                View.OnClickListener onClickChkDolorMuscularModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularModeradaDia16).setOnClickListener(onClickChkDolorMuscularModerada);

                View.OnClickListener onClickChkDolorMuscularSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularSeveraDia16).setOnClickListener(onClickChkDolorMuscularSevera);
                /*DOLOR ARTICULAR DIA 12*/
                View.OnClickListener onClickChkDolorArticularLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularLeveDia16).setOnClickListener(onClickChkDolorArticularLeve);

                View.OnClickListener onClickChkDolorArticularModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularModeradaDia16).setOnClickListener(onClickChkDolorArticularModerada);

                View.OnClickListener onClickChkDolorArticularSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularSeveraDia16).setOnClickListener(onClickChkDolorArticularSevera);
                /*-----------------------------*/
            }

            public void cargarDatosSintomasDia17() {
                ((Spinner) getActivity().findViewById(R.id.spnDia17Fila1)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarConsultaInicial(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia17Fila2)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFiebre(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia17Fila3)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarTos(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia17Fila4)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarSecrecionNasal(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia17Fila5)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorGarganta(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia17Fila6)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCongestionNasal(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia17Fila7)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorCabeza(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia17Fila8)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFaltaApetito(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia17Fila9)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorMuscular(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia17Fila10)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorArticular(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia17Fila11)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorOido(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia17Fila12)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarRespiracionRapida(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia17Fila13)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDificultadRespirar(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia17Fila14)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFaltaEscuela(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia17Fila15)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarQuedoEnCama(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                /*************************************************/
                ((Spinner) getActivity().findViewById(R.id.spnDia17Fila16)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCuadroConfusional(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia17Fila17)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCuadroNeurologico(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia17Fila18)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarConfusionMental(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia17Fila19)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarAnosmia(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia17Fila20)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarAgeusia(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia17Fila21)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarMareo(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia17Fila22)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarIctus(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia17Fila23)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarSincope(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });
                /************************************************/

                /*FIEBRE DIA 12*/
                View.OnClickListener onClickChkFiebreLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreLeveDia17).setOnClickListener(onClickChkFiebreLeve);

                View.OnClickListener onClickChkFiebreModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreModeradaDia17).setOnClickListener(onClickChkFiebreModerada);

                View.OnClickListener onClickChkFiebreSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreSeveraDia17).setOnClickListener(onClickChkFiebreSevera);
                /*-------------------------------*/
                /*TOS DIA 12*/
                View.OnClickListener onClickChkTosLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosLeveDia17).setOnClickListener(onClickChkTosLeve);

                View.OnClickListener onClickChkTosModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosModeradaDia17).setOnClickListener(onClickChkTosModerada);

                View.OnClickListener onClickChkTosSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosSeveraDia17).setOnClickListener(onClickChkTosSevera);
                /*-------------------------------*/
                /*SECRECION NASAL DIA 12*/
                View.OnClickListener onClickChkSecrecionNasalLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalLeveDia17).setOnClickListener(onClickChkSecrecionNasalLeve);

                View.OnClickListener onClickChkSecrecionNasalModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia17).setOnClickListener(onClickChkSecrecionNasalModerada);

                View.OnClickListener onClickChkSecrecionNasalSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia17).setOnClickListener(onClickChkSecrecionNasalSevera);
                /*-------------------------------*/
                /*DOLOR DE GARGANTA DIA 12*/
                View.OnClickListener onClickChkDolorGargantaLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaLeveDia17).setOnClickListener(onClickChkDolorGargantaLeve);

                View.OnClickListener onClickChkDolorGargantaModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaModeradaDia17).setOnClickListener(onClickChkDolorGargantaModerada);

                View.OnClickListener onClickChkDolorGargantaSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaSeveraDia17).setOnClickListener(onClickChkDolorGargantaSevera);
                /*DOLOR DE CABEZA DIA 12*/
                View.OnClickListener onClickChkDolorCabezaLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaLeveDia17).setOnClickListener(onClickChkDolorCabezaLeve);

                View.OnClickListener onClickChkDolorCabezaModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaModeradaDia17).setOnClickListener(onClickChkDolorCabezaModerada);

                View.OnClickListener onClickChkDolorCabezaSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaSeveraDia17).setOnClickListener(onClickChkDolorCabezaSevera);

                /*DOLOR DOLOR MUSCULAR DIA 12*/
                View.OnClickListener onClickChkDolorMuscularLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularLeveDia17).setOnClickListener(onClickChkDolorMuscularLeve);

                View.OnClickListener onClickChkDolorMuscularModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularModeradaDia17).setOnClickListener(onClickChkDolorMuscularModerada);

                View.OnClickListener onClickChkDolorMuscularSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularSeveraDia17).setOnClickListener(onClickChkDolorMuscularSevera);
                /*DOLOR ARTICULAR DIA 12*/
                View.OnClickListener onClickChkDolorArticularLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularLeveDia17).setOnClickListener(onClickChkDolorArticularLeve);

                View.OnClickListener onClickChkDolorArticularModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularModeradaDia17).setOnClickListener(onClickChkDolorArticularModerada);

                View.OnClickListener onClickChkDolorArticularSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularSeveraDia17).setOnClickListener(onClickChkDolorArticularSevera);
                /*-----------------------------*/
            }

            public void cargarDatosSintomasDia18() {
                ((Spinner) getActivity().findViewById(R.id.spnDia18Fila1)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarConsultaInicial(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia18Fila2)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFiebre(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia18Fila3)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarTos(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia18Fila4)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarSecrecionNasal(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia18Fila5)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorGarganta(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia18Fila6)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCongestionNasal(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia18Fila7)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorCabeza(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia18Fila8)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFaltaApetito(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia18Fila9)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorMuscular(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia18Fila10)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorArticular(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia18Fila11)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorOido(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia18Fila12)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarRespiracionRapida(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia18Fila13)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDificultadRespirar(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia18Fila14)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFaltaEscuela(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia18Fila15)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarQuedoEnCama(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                /*************************************************/
                ((Spinner) getActivity().findViewById(R.id.spnDia18Fila16)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCuadroConfusional(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia18Fila17)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCuadroNeurologico(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia18Fila18)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarConfusionMental(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia18Fila19)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarAnosmia(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia18Fila20)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarAgeusia(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia18Fila21)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarMareo(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia18Fila22)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarIctus(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia18Fila23)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarSincope(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });
                /************************************************/

                /*FIEBRE DIA 12*/
                View.OnClickListener onClickChkFiebreLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreLeveDia18).setOnClickListener(onClickChkFiebreLeve);

                View.OnClickListener onClickChkFiebreModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreModeradaDia18).setOnClickListener(onClickChkFiebreModerada);

                View.OnClickListener onClickChkFiebreSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreSeveraDia18).setOnClickListener(onClickChkFiebreSevera);
                /*-------------------------------*/
                /*TOS DIA 12*/
                View.OnClickListener onClickChkTosLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosLeveDia18).setOnClickListener(onClickChkTosLeve);

                View.OnClickListener onClickChkTosModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosModeradaDia18).setOnClickListener(onClickChkTosModerada);

                View.OnClickListener onClickChkTosSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosSeveraDia18).setOnClickListener(onClickChkTosSevera);
                /*-------------------------------*/
                /*SECRECION NASAL DIA 12*/
                View.OnClickListener onClickChkSecrecionNasalLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalLeveDia18).setOnClickListener(onClickChkSecrecionNasalLeve);

                View.OnClickListener onClickChkSecrecionNasalModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia18).setOnClickListener(onClickChkSecrecionNasalModerada);

                View.OnClickListener onClickChkSecrecionNasalSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia18).setOnClickListener(onClickChkSecrecionNasalSevera);
                /*-------------------------------*/
                /*DOLOR DE GARGANTA DIA 12*/
                View.OnClickListener onClickChkDolorGargantaLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaLeveDia18).setOnClickListener(onClickChkDolorGargantaLeve);

                View.OnClickListener onClickChkDolorGargantaModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaModeradaDia18).setOnClickListener(onClickChkDolorGargantaModerada);

                View.OnClickListener onClickChkDolorGargantaSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaSeveraDia18).setOnClickListener(onClickChkDolorGargantaSevera);
                /*DOLOR DE CABEZA DIA 12*/
                View.OnClickListener onClickChkDolorCabezaLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaLeveDia18).setOnClickListener(onClickChkDolorCabezaLeve);

                View.OnClickListener onClickChkDolorCabezaModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaModeradaDia18).setOnClickListener(onClickChkDolorCabezaModerada);

                View.OnClickListener onClickChkDolorCabezaSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaSeveraDia18).setOnClickListener(onClickChkDolorCabezaSevera);

                /*DOLOR DOLOR MUSCULAR DIA 12*/
                View.OnClickListener onClickChkDolorMuscularLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularLeveDia18).setOnClickListener(onClickChkDolorMuscularLeve);

                View.OnClickListener onClickChkDolorMuscularModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularModeradaDia18).setOnClickListener(onClickChkDolorMuscularModerada);

                View.OnClickListener onClickChkDolorMuscularSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularSeveraDia18).setOnClickListener(onClickChkDolorMuscularSevera);
                /*DOLOR ARTICULAR DIA 12*/
                View.OnClickListener onClickChkDolorArticularLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularLeveDia18).setOnClickListener(onClickChkDolorArticularLeve);

                View.OnClickListener onClickChkDolorArticularModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularModeradaDia18).setOnClickListener(onClickChkDolorArticularModerada);

                View.OnClickListener onClickChkDolorArticularSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularSeveraDia18).setOnClickListener(onClickChkDolorArticularSevera);
                /*-----------------------------*/
            }

            public void cargarDatosSintomasDia19() {
                ((Spinner) getActivity().findViewById(R.id.spnDia19Fila1)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarConsultaInicial(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia19Fila2)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFiebre(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia19Fila3)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarTos(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia19Fila4)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarSecrecionNasal(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia19Fila5)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorGarganta(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia19Fila6)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCongestionNasal(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia19Fila7)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorCabeza(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia19Fila8)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFaltaApetito(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia19Fila9)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorMuscular(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia19Fila10)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorArticular(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia19Fila11)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorOido(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia19Fila12)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarRespiracionRapida(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia19Fila13)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDificultadRespirar(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia19Fila14)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFaltaEscuela(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia19Fila15)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarQuedoEnCama(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                /*************************************************/
                ((Spinner) getActivity().findViewById(R.id.spnDia19Fila16)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCuadroConfusional(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia19Fila17)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCuadroNeurologico(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia19Fila18)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarConfusionMental(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia19Fila19)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarAnosmia(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia19Fila20)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarAgeusia(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia19Fila21)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarMareo(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia19Fila22)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarIctus(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia19Fila23)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarSincope(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });
                /************************************************/

                /*FIEBRE DIA 12*/
                View.OnClickListener onClickChkFiebreLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreLeveDia19).setOnClickListener(onClickChkFiebreLeve);

                View.OnClickListener onClickChkFiebreModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreModeradaDia19).setOnClickListener(onClickChkFiebreModerada);

                View.OnClickListener onClickChkFiebreSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreSeveraDia19).setOnClickListener(onClickChkFiebreSevera);
                /*-------------------------------*/
                /*TOS DIA 12*/
                View.OnClickListener onClickChkTosLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosLeveDia19).setOnClickListener(onClickChkTosLeve);

                View.OnClickListener onClickChkTosModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosModeradaDia19).setOnClickListener(onClickChkTosModerada);

                View.OnClickListener onClickChkTosSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosSeveraDia19).setOnClickListener(onClickChkTosSevera);
                /*-------------------------------*/
                /*SECRECION NASAL DIA 12*/
                View.OnClickListener onClickChkSecrecionNasalLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalLeveDia19).setOnClickListener(onClickChkSecrecionNasalLeve);

                View.OnClickListener onClickChkSecrecionNasalModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia19).setOnClickListener(onClickChkSecrecionNasalModerada);

                View.OnClickListener onClickChkSecrecionNasalSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia19).setOnClickListener(onClickChkSecrecionNasalSevera);
                /*-------------------------------*/
                /*DOLOR DE GARGANTA DIA 12*/
                View.OnClickListener onClickChkDolorGargantaLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaLeveDia19).setOnClickListener(onClickChkDolorGargantaLeve);

                View.OnClickListener onClickChkDolorGargantaModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaModeradaDia19).setOnClickListener(onClickChkDolorGargantaModerada);

                View.OnClickListener onClickChkDolorGargantaSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaSeveraDia19).setOnClickListener(onClickChkDolorGargantaSevera);
                /*DOLOR DE CABEZA DIA 12*/
                View.OnClickListener onClickChkDolorCabezaLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaLeveDia19).setOnClickListener(onClickChkDolorCabezaLeve);

                View.OnClickListener onClickChkDolorCabezaModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaModeradaDia19).setOnClickListener(onClickChkDolorCabezaModerada);

                View.OnClickListener onClickChkDolorCabezaSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaSeveraDia19).setOnClickListener(onClickChkDolorCabezaSevera);

                /*DOLOR DOLOR MUSCULAR DIA 12*/
                View.OnClickListener onClickChkDolorMuscularLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularLeveDia19).setOnClickListener(onClickChkDolorMuscularLeve);

                View.OnClickListener onClickChkDolorMuscularModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularModeradaDia19).setOnClickListener(onClickChkDolorMuscularModerada);

                View.OnClickListener onClickChkDolorMuscularSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularSeveraDia19).setOnClickListener(onClickChkDolorMuscularSevera);
                /*DOLOR ARTICULAR DIA 12*/
                View.OnClickListener onClickChkDolorArticularLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularLeveDia19).setOnClickListener(onClickChkDolorArticularLeve);

                View.OnClickListener onClickChkDolorArticularModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularModeradaDia19).setOnClickListener(onClickChkDolorArticularModerada);

                View.OnClickListener onClickChkDolorArticularSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularSeveraDia19).setOnClickListener(onClickChkDolorArticularSevera);
                /*-----------------------------*/
            }

            public void cargarDatosSintomasDia20() {
                ((Spinner) getActivity().findViewById(R.id.spnDia20Fila1)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarConsultaInicial(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia20Fila2)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFiebre(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia20Fila3)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarTos(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia20Fila4)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarSecrecionNasal(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia20Fila5)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorGarganta(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia20Fila6)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCongestionNasal(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia20Fila7)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorCabeza(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia20Fila8)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFaltaApetito(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia20Fila9)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorMuscular(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia20Fila10)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorArticular(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia20Fila11)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorOido(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia20Fila12)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarRespiracionRapida(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia20Fila13)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDificultadRespirar(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia20Fila14)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFaltaEscuela(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia20Fila15)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarQuedoEnCama(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                /*************************************************/
                ((Spinner) getActivity().findViewById(R.id.spnDia20Fila16)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCuadroConfusional(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia20Fila17)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCuadroNeurologico(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia20Fila18)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarConfusionMental(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia20Fila19)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarAnosmia(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia20Fila20)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarAgeusia(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia20Fila21)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarMareo(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia20Fila22)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarIctus(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia20Fila23)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarSincope(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });
                /************************************************/

                /*FIEBRE DIA 12*/
                View.OnClickListener onClickChkFiebreLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreLeveDia20).setOnClickListener(onClickChkFiebreLeve);

                View.OnClickListener onClickChkFiebreModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreModeradaDia20).setOnClickListener(onClickChkFiebreModerada);

                View.OnClickListener onClickChkFiebreSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreSeveraDia20).setOnClickListener(onClickChkFiebreSevera);
                /*-------------------------------*/
                /*TOS DIA 12*/
                View.OnClickListener onClickChkTosLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosLeveDia20).setOnClickListener(onClickChkTosLeve);

                View.OnClickListener onClickChkTosModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosModeradaDia20).setOnClickListener(onClickChkTosModerada);

                View.OnClickListener onClickChkTosSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosSeveraDia20).setOnClickListener(onClickChkTosSevera);
                /*-------------------------------*/
                /*SECRECION NASAL DIA 12*/
                View.OnClickListener onClickChkSecrecionNasalLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalLeveDia20).setOnClickListener(onClickChkSecrecionNasalLeve);

                View.OnClickListener onClickChkSecrecionNasalModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia20).setOnClickListener(onClickChkSecrecionNasalModerada);

                View.OnClickListener onClickChkSecrecionNasalSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia20).setOnClickListener(onClickChkSecrecionNasalSevera);
                /*-------------------------------*/
                /*DOLOR DE GARGANTA DIA 12*/
                View.OnClickListener onClickChkDolorGargantaLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaLeveDia20).setOnClickListener(onClickChkDolorGargantaLeve);

                View.OnClickListener onClickChkDolorGargantaModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaModeradaDia20).setOnClickListener(onClickChkDolorGargantaModerada);

                View.OnClickListener onClickChkDolorGargantaSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaSeveraDia20).setOnClickListener(onClickChkDolorGargantaSevera);
                /*DOLOR DE CABEZA DIA 12*/
                View.OnClickListener onClickChkDolorCabezaLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaLeveDia20).setOnClickListener(onClickChkDolorCabezaLeve);

                View.OnClickListener onClickChkDolorCabezaModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaModeradaDia20).setOnClickListener(onClickChkDolorCabezaModerada);

                View.OnClickListener onClickChkDolorCabezaSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaSeveraDia20).setOnClickListener(onClickChkDolorCabezaSevera);

                /*DOLOR DOLOR MUSCULAR DIA 12*/
                View.OnClickListener onClickChkDolorMuscularLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularLeveDia20).setOnClickListener(onClickChkDolorMuscularLeve);

                View.OnClickListener onClickChkDolorMuscularModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularModeradaDia20).setOnClickListener(onClickChkDolorMuscularModerada);

                View.OnClickListener onClickChkDolorMuscularSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularSeveraDia20).setOnClickListener(onClickChkDolorMuscularSevera);
                /*DOLOR ARTICULAR DIA 12*/
                View.OnClickListener onClickChkDolorArticularLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularLeveDia20).setOnClickListener(onClickChkDolorArticularLeve);

                View.OnClickListener onClickChkDolorArticularModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularModeradaDia20).setOnClickListener(onClickChkDolorArticularModerada);

                View.OnClickListener onClickChkDolorArticularSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularSeveraDia20).setOnClickListener(onClickChkDolorArticularSevera);
                /*-----------------------------*/
            }

            public void cargarDatosSintomasDia21() {
                ((Spinner) getActivity().findViewById(R.id.spnDia21Fila1)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarConsultaInicial(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia21Fila2)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFiebre(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia21Fila3)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarTos(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia21Fila4)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarSecrecionNasal(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia21Fila5)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorGarganta(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia21Fila6)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCongestionNasal(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia21Fila7)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorCabeza(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia21Fila8)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFaltaApetito(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia21Fila9)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorMuscular(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia21Fila10)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorArticular(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia21Fila11)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorOido(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia21Fila12)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarRespiracionRapida(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia21Fila13)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDificultadRespirar(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia21Fila14)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFaltaEscuela(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia21Fila15)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarQuedoEnCama(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                /*************************************************/
                ((Spinner) getActivity().findViewById(R.id.spnDia21Fila16)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCuadroConfusional(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia21Fila17)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCuadroNeurologico(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia21Fila18)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarConfusionMental(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia21Fila19)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarAnosmia(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia21Fila20)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarAgeusia(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia21Fila21)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarMareo(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia21Fila22)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarIctus(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia21Fila23)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarSincope(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });
                /************************************************/

                /*FIEBRE DIA 12*/
                View.OnClickListener onClickChkFiebreLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreLeveDia21).setOnClickListener(onClickChkFiebreLeve);

                View.OnClickListener onClickChkFiebreModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreModeradaDia21).setOnClickListener(onClickChkFiebreModerada);

                View.OnClickListener onClickChkFiebreSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreSeveraDia21).setOnClickListener(onClickChkFiebreSevera);
                /*-------------------------------*/
                /*TOS DIA 12*/
                View.OnClickListener onClickChkTosLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosLeveDia21).setOnClickListener(onClickChkTosLeve);

                View.OnClickListener onClickChkTosModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosModeradaDia21).setOnClickListener(onClickChkTosModerada);

                View.OnClickListener onClickChkTosSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosSeveraDia21).setOnClickListener(onClickChkTosSevera);
                /*-------------------------------*/
                /*SECRECION NASAL DIA 12*/
                View.OnClickListener onClickChkSecrecionNasalLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalLeveDia21).setOnClickListener(onClickChkSecrecionNasalLeve);

                View.OnClickListener onClickChkSecrecionNasalModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia21).setOnClickListener(onClickChkSecrecionNasalModerada);

                View.OnClickListener onClickChkSecrecionNasalSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia21).setOnClickListener(onClickChkSecrecionNasalSevera);
                /*-------------------------------*/
                /*DOLOR DE GARGANTA DIA 12*/
                View.OnClickListener onClickChkDolorGargantaLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaLeveDia21).setOnClickListener(onClickChkDolorGargantaLeve);

                View.OnClickListener onClickChkDolorGargantaModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaModeradaDia21).setOnClickListener(onClickChkDolorGargantaModerada);

                View.OnClickListener onClickChkDolorGargantaSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaSeveraDia21).setOnClickListener(onClickChkDolorGargantaSevera);
                /*DOLOR DE CABEZA DIA 12*/
                View.OnClickListener onClickChkDolorCabezaLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaLeveDia21).setOnClickListener(onClickChkDolorCabezaLeve);

                View.OnClickListener onClickChkDolorCabezaModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaModeradaDia21).setOnClickListener(onClickChkDolorCabezaModerada);

                View.OnClickListener onClickChkDolorCabezaSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaSeveraDia21).setOnClickListener(onClickChkDolorCabezaSevera);

                /*DOLOR DOLOR MUSCULAR DIA 12*/
                View.OnClickListener onClickChkDolorMuscularLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularLeveDia21).setOnClickListener(onClickChkDolorMuscularLeve);

                View.OnClickListener onClickChkDolorMuscularModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularModeradaDia21).setOnClickListener(onClickChkDolorMuscularModerada);

                View.OnClickListener onClickChkDolorMuscularSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularSeveraDia21).setOnClickListener(onClickChkDolorMuscularSevera);
                /*DOLOR ARTICULAR DIA 12*/
                View.OnClickListener onClickChkDolorArticularLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularLeveDia21).setOnClickListener(onClickChkDolorArticularLeve);

                View.OnClickListener onClickChkDolorArticularModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularModeradaDia21).setOnClickListener(onClickChkDolorArticularModerada);

                View.OnClickListener onClickChkDolorArticularSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularSeveraDia21).setOnClickListener(onClickChkDolorArticularSevera);
                /*-----------------------------*/
            }

            public void cargarDatosSintomasDia22() {
                ((Spinner) getActivity().findViewById(R.id.spnDia22Fila1)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarConsultaInicial(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia22Fila2)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFiebre(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia22Fila3)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarTos(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia22Fila4)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarSecrecionNasal(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia22Fila5)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorGarganta(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia22Fila6)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCongestionNasal(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia22Fila7)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorCabeza(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia22Fila8)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFaltaApetito(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia22Fila9)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorMuscular(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia22Fila10)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorArticular(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia22Fila11)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorOido(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia22Fila12)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarRespiracionRapida(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia22Fila13)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDificultadRespirar(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia22Fila14)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFaltaEscuela(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia22Fila15)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarQuedoEnCama(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                /*************************************************/
                ((Spinner) getActivity().findViewById(R.id.spnDia22Fila16)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCuadroConfusional(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia22Fila17)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCuadroNeurologico(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia22Fila18)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarConfusionMental(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia22Fila19)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarAnosmia(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia22Fila20)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarAgeusia(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia22Fila21)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarMareo(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia22Fila22)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarIctus(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia22Fila23)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarSincope(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });
                /************************************************/

                /*FIEBRE DIA 12*/
                View.OnClickListener onClickChkFiebreLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreLeveDia22).setOnClickListener(onClickChkFiebreLeve);

                View.OnClickListener onClickChkFiebreModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreModeradaDia22).setOnClickListener(onClickChkFiebreModerada);

                View.OnClickListener onClickChkFiebreSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreSeveraDia22).setOnClickListener(onClickChkFiebreSevera);
                /*-------------------------------*/
                /*TOS DIA 12*/
                View.OnClickListener onClickChkTosLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosLeveDia22).setOnClickListener(onClickChkTosLeve);

                View.OnClickListener onClickChkTosModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosModeradaDia22).setOnClickListener(onClickChkTosModerada);

                View.OnClickListener onClickChkTosSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosSeveraDia22).setOnClickListener(onClickChkTosSevera);
                /*-------------------------------*/
                /*SECRECION NASAL DIA 12*/
                View.OnClickListener onClickChkSecrecionNasalLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalLeveDia22).setOnClickListener(onClickChkSecrecionNasalLeve);

                View.OnClickListener onClickChkSecrecionNasalModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia22).setOnClickListener(onClickChkSecrecionNasalModerada);

                View.OnClickListener onClickChkSecrecionNasalSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia22).setOnClickListener(onClickChkSecrecionNasalSevera);
                /*-------------------------------*/
                /*DOLOR DE GARGANTA DIA 12*/
                View.OnClickListener onClickChkDolorGargantaLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaLeveDia22).setOnClickListener(onClickChkDolorGargantaLeve);

                View.OnClickListener onClickChkDolorGargantaModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaModeradaDia22).setOnClickListener(onClickChkDolorGargantaModerada);

                View.OnClickListener onClickChkDolorGargantaSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaSeveraDia22).setOnClickListener(onClickChkDolorGargantaSevera);
                /*DOLOR DE CABEZA DIA 12*/
                View.OnClickListener onClickChkDolorCabezaLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaLeveDia22).setOnClickListener(onClickChkDolorCabezaLeve);

                View.OnClickListener onClickChkDolorCabezaModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaModeradaDia22).setOnClickListener(onClickChkDolorCabezaModerada);

                View.OnClickListener onClickChkDolorCabezaSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaSeveraDia22).setOnClickListener(onClickChkDolorCabezaSevera);

                /*DOLOR DOLOR MUSCULAR DIA 12*/
                View.OnClickListener onClickChkDolorMuscularLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularLeveDia22).setOnClickListener(onClickChkDolorMuscularLeve);

                View.OnClickListener onClickChkDolorMuscularModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularModeradaDia22).setOnClickListener(onClickChkDolorMuscularModerada);

                View.OnClickListener onClickChkDolorMuscularSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularSeveraDia22).setOnClickListener(onClickChkDolorMuscularSevera);
                /*DOLOR ARTICULAR DIA 12*/
                View.OnClickListener onClickChkDolorArticularLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularLeveDia22).setOnClickListener(onClickChkDolorArticularLeve);

                View.OnClickListener onClickChkDolorArticularModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularModeradaDia22).setOnClickListener(onClickChkDolorArticularModerada);

                View.OnClickListener onClickChkDolorArticularSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularSeveraDia22).setOnClickListener(onClickChkDolorArticularSevera);
                /*-----------------------------*/
            }

            public void cargarDatosSintomasDia23() {
                ((Spinner) getActivity().findViewById(R.id.spnDia23Fila1)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarConsultaInicial(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia23Fila2)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFiebre(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia23Fila3)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarTos(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia23Fila4)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarSecrecionNasal(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia23Fila5)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorGarganta(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia23Fila6)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCongestionNasal(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia23Fila7)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorCabeza(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia23Fila8)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFaltaApetito(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia23Fila9)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorMuscular(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia23Fila10)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorArticular(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia23Fila11)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorOido(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia23Fila12)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarRespiracionRapida(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia23Fila13)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDificultadRespirar(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia23Fila14)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFaltaEscuela(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia23Fila15)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarQuedoEnCama(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                /*************************************************/
                ((Spinner) getActivity().findViewById(R.id.spnDia23Fila16)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCuadroConfusional(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia23Fila17)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCuadroNeurologico(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia23Fila18)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarConfusionMental(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia23Fila19)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarAnosmia(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia23Fila20)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarAgeusia(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia23Fila21)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarMareo(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia23Fila22)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarIctus(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia23Fila23)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarSincope(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });
                /************************************************/

                /*FIEBRE DIA 12*/
                View.OnClickListener onClickChkFiebreLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreLeveDia23).setOnClickListener(onClickChkFiebreLeve);

                View.OnClickListener onClickChkFiebreModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreModeradaDia23).setOnClickListener(onClickChkFiebreModerada);

                View.OnClickListener onClickChkFiebreSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreSeveraDia23).setOnClickListener(onClickChkFiebreSevera);
                /*-------------------------------*/
                /*TOS DIA 12*/
                View.OnClickListener onClickChkTosLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosLeveDia23).setOnClickListener(onClickChkTosLeve);

                View.OnClickListener onClickChkTosModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosModeradaDia23).setOnClickListener(onClickChkTosModerada);

                View.OnClickListener onClickChkTosSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosSeveraDia23).setOnClickListener(onClickChkTosSevera);
                /*-------------------------------*/
                /*SECRECION NASAL DIA 12*/
                View.OnClickListener onClickChkSecrecionNasalLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalLeveDia23).setOnClickListener(onClickChkSecrecionNasalLeve);

                View.OnClickListener onClickChkSecrecionNasalModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia23).setOnClickListener(onClickChkSecrecionNasalModerada);

                View.OnClickListener onClickChkSecrecionNasalSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia23).setOnClickListener(onClickChkSecrecionNasalSevera);
                /*-------------------------------*/
                /*DOLOR DE GARGANTA DIA 12*/
                View.OnClickListener onClickChkDolorGargantaLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaLeveDia23).setOnClickListener(onClickChkDolorGargantaLeve);

                View.OnClickListener onClickChkDolorGargantaModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaModeradaDia23).setOnClickListener(onClickChkDolorGargantaModerada);

                View.OnClickListener onClickChkDolorGargantaSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaSeveraDia23).setOnClickListener(onClickChkDolorGargantaSevera);
                /*DOLOR DE CABEZA DIA 12*/
                View.OnClickListener onClickChkDolorCabezaLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaLeveDia23).setOnClickListener(onClickChkDolorCabezaLeve);

                View.OnClickListener onClickChkDolorCabezaModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaModeradaDia23).setOnClickListener(onClickChkDolorCabezaModerada);

                View.OnClickListener onClickChkDolorCabezaSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaSeveraDia23).setOnClickListener(onClickChkDolorCabezaSevera);

                /*DOLOR DOLOR MUSCULAR DIA 12*/
                View.OnClickListener onClickChkDolorMuscularLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularLeveDia23).setOnClickListener(onClickChkDolorMuscularLeve);

                View.OnClickListener onClickChkDolorMuscularModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularModeradaDia23).setOnClickListener(onClickChkDolorMuscularModerada);

                View.OnClickListener onClickChkDolorMuscularSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularSeveraDia23).setOnClickListener(onClickChkDolorMuscularSevera);
                /*DOLOR ARTICULAR DIA 12*/
                View.OnClickListener onClickChkDolorArticularLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularLeveDia23).setOnClickListener(onClickChkDolorArticularLeve);

                View.OnClickListener onClickChkDolorArticularModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularModeradaDia23).setOnClickListener(onClickChkDolorArticularModerada);

                View.OnClickListener onClickChkDolorArticularSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularSeveraDia23).setOnClickListener(onClickChkDolorArticularSevera);
                /*-----------------------------*/
            }

            public void cargarDatosSintomasDia24() {
                ((Spinner) getActivity().findViewById(R.id.spnDia24Fila1)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarConsultaInicial(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia24Fila2)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFiebre(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia24Fila3)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarTos(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia24Fila4)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarSecrecionNasal(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia24Fila5)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorGarganta(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia24Fila6)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCongestionNasal(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia24Fila7)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorCabeza(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia24Fila8)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFaltaApetito(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia24Fila9)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorMuscular(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia24Fila10)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorArticular(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia24Fila11)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorOido(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia24Fila12)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarRespiracionRapida(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia24Fila13)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDificultadRespirar(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia24Fila14)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFaltaEscuela(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia24Fila15)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarQuedoEnCama(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                /*************************************************/
                ((Spinner) getActivity().findViewById(R.id.spnDia24Fila16)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCuadroConfusional(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia24Fila17)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCuadroNeurologico(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia24Fila18)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarConfusionMental(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia24Fila19)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarAnosmia(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia24Fila20)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarAgeusia(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia24Fila21)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarMareo(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia24Fila22)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarIctus(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia24Fila23)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarSincope(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });
                /************************************************/

                /*FIEBRE DIA 12*/
                View.OnClickListener onClickChkFiebreLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreLeveDia24).setOnClickListener(onClickChkFiebreLeve);

                View.OnClickListener onClickChkFiebreModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreModeradaDia24).setOnClickListener(onClickChkFiebreModerada);

                View.OnClickListener onClickChkFiebreSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreSeveraDia24).setOnClickListener(onClickChkFiebreSevera);
                /*-------------------------------*/
                /*TOS DIA 12*/
                View.OnClickListener onClickChkTosLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosLeveDia24).setOnClickListener(onClickChkTosLeve);

                View.OnClickListener onClickChkTosModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosModeradaDia24).setOnClickListener(onClickChkTosModerada);

                View.OnClickListener onClickChkTosSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosSeveraDia24).setOnClickListener(onClickChkTosSevera);
                /*-------------------------------*/
                /*SECRECION NASAL DIA 12*/
                View.OnClickListener onClickChkSecrecionNasalLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalLeveDia24).setOnClickListener(onClickChkSecrecionNasalLeve);

                View.OnClickListener onClickChkSecrecionNasalModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia24).setOnClickListener(onClickChkSecrecionNasalModerada);

                View.OnClickListener onClickChkSecrecionNasalSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia24).setOnClickListener(onClickChkSecrecionNasalSevera);
                /*-------------------------------*/
                /*DOLOR DE GARGANTA DIA 12*/
                View.OnClickListener onClickChkDolorGargantaLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaLeveDia24).setOnClickListener(onClickChkDolorGargantaLeve);

                View.OnClickListener onClickChkDolorGargantaModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaModeradaDia24).setOnClickListener(onClickChkDolorGargantaModerada);

                View.OnClickListener onClickChkDolorGargantaSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaSeveraDia24).setOnClickListener(onClickChkDolorGargantaSevera);
                /*DOLOR DE CABEZA DIA 12*/
                View.OnClickListener onClickChkDolorCabezaLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaLeveDia24).setOnClickListener(onClickChkDolorCabezaLeve);

                View.OnClickListener onClickChkDolorCabezaModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaModeradaDia24).setOnClickListener(onClickChkDolorCabezaModerada);

                View.OnClickListener onClickChkDolorCabezaSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaSeveraDia24).setOnClickListener(onClickChkDolorCabezaSevera);

                /*DOLOR DOLOR MUSCULAR DIA 12*/
                View.OnClickListener onClickChkDolorMuscularLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularLeveDia24).setOnClickListener(onClickChkDolorMuscularLeve);

                View.OnClickListener onClickChkDolorMuscularModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularModeradaDia24).setOnClickListener(onClickChkDolorMuscularModerada);

                View.OnClickListener onClickChkDolorMuscularSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularSeveraDia24).setOnClickListener(onClickChkDolorMuscularSevera);
                /*DOLOR ARTICULAR DIA 12*/
                View.OnClickListener onClickChkDolorArticularLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularLeveDia24).setOnClickListener(onClickChkDolorArticularLeve);

                View.OnClickListener onClickChkDolorArticularModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularModeradaDia24).setOnClickListener(onClickChkDolorArticularModerada);

                View.OnClickListener onClickChkDolorArticularSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularSeveraDia24).setOnClickListener(onClickChkDolorArticularSevera);
                /*-----------------------------*/
            }

            public void cargarDatosSintomasDia25() {
                ((Spinner) getActivity().findViewById(R.id.spnDia25Fila1)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarConsultaInicial(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia25Fila2)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFiebre(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia25Fila3)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarTos(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia25Fila4)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarSecrecionNasal(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia25Fila5)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorGarganta(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia25Fila6)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCongestionNasal(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia25Fila7)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorCabeza(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia25Fila8)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFaltaApetito(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia25Fila9)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorMuscular(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia25Fila10)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorArticular(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia25Fila11)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorOido(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia25Fila12)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarRespiracionRapida(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia25Fila13)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDificultadRespirar(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia25Fila14)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFaltaEscuela(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia25Fila15)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarQuedoEnCama(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                /*************************************************/
                ((Spinner) getActivity().findViewById(R.id.spnDia25Fila16)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCuadroConfusional(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia25Fila17)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCuadroNeurologico(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia25Fila18)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarConfusionMental(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia25Fila19)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarAnosmia(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia25Fila20)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarAgeusia(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia25Fila21)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarMareo(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia25Fila22)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarIctus(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia25Fila23)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarSincope(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });
                /************************************************/

                /*FIEBRE DIA 12*/
                View.OnClickListener onClickChkFiebreLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreLeveDia25).setOnClickListener(onClickChkFiebreLeve);

                View.OnClickListener onClickChkFiebreModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreModeradaDia25).setOnClickListener(onClickChkFiebreModerada);

                View.OnClickListener onClickChkFiebreSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreSeveraDia25).setOnClickListener(onClickChkFiebreSevera);
                /*-------------------------------*/
                /*TOS DIA 12*/
                View.OnClickListener onClickChkTosLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosLeveDia25).setOnClickListener(onClickChkTosLeve);

                View.OnClickListener onClickChkTosModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosModeradaDia25).setOnClickListener(onClickChkTosModerada);

                View.OnClickListener onClickChkTosSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosSeveraDia25).setOnClickListener(onClickChkTosSevera);
                /*-------------------------------*/
                /*SECRECION NASAL DIA 12*/
                View.OnClickListener onClickChkSecrecionNasalLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalLeveDia25).setOnClickListener(onClickChkSecrecionNasalLeve);

                View.OnClickListener onClickChkSecrecionNasalModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia25).setOnClickListener(onClickChkSecrecionNasalModerada);

                View.OnClickListener onClickChkSecrecionNasalSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia25).setOnClickListener(onClickChkSecrecionNasalSevera);
                /*-------------------------------*/
                /*DOLOR DE GARGANTA DIA 12*/
                View.OnClickListener onClickChkDolorGargantaLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaLeveDia25).setOnClickListener(onClickChkDolorGargantaLeve);

                View.OnClickListener onClickChkDolorGargantaModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaModeradaDia25).setOnClickListener(onClickChkDolorGargantaModerada);

                View.OnClickListener onClickChkDolorGargantaSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaSeveraDia25).setOnClickListener(onClickChkDolorGargantaSevera);
                /*DOLOR DE CABEZA DIA 12*/
                View.OnClickListener onClickChkDolorCabezaLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaLeveDia25).setOnClickListener(onClickChkDolorCabezaLeve);

                View.OnClickListener onClickChkDolorCabezaModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaModeradaDia25).setOnClickListener(onClickChkDolorCabezaModerada);

                View.OnClickListener onClickChkDolorCabezaSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaSeveraDia25).setOnClickListener(onClickChkDolorCabezaSevera);

                /*DOLOR DOLOR MUSCULAR DIA 12*/
                View.OnClickListener onClickChkDolorMuscularLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularLeveDia25).setOnClickListener(onClickChkDolorMuscularLeve);

                View.OnClickListener onClickChkDolorMuscularModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularModeradaDia25).setOnClickListener(onClickChkDolorMuscularModerada);

                View.OnClickListener onClickChkDolorMuscularSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularSeveraDia25).setOnClickListener(onClickChkDolorMuscularSevera);
                /*DOLOR ARTICULAR DIA 12*/
                View.OnClickListener onClickChkDolorArticularLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularLeveDia25).setOnClickListener(onClickChkDolorArticularLeve);

                View.OnClickListener onClickChkDolorArticularModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularModeradaDia25).setOnClickListener(onClickChkDolorArticularModerada);

                View.OnClickListener onClickChkDolorArticularSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularSeveraDia25).setOnClickListener(onClickChkDolorArticularSevera);
                /*-----------------------------*/
            }

            public void cargarDatosSintomasDia26() {
                ((Spinner) getActivity().findViewById(R.id.spnDia26Fila1)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarConsultaInicial(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia26Fila2)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFiebre(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia26Fila3)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarTos(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia26Fila4)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarSecrecionNasal(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia26Fila5)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorGarganta(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia26Fila6)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCongestionNasal(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia26Fila7)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorCabeza(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia26Fila8)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFaltaApetito(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia26Fila9)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorMuscular(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia26Fila10)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorArticular(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia26Fila11)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorOido(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia26Fila12)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarRespiracionRapida(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia26Fila13)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDificultadRespirar(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia26Fila14)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFaltaEscuela(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia26Fila15)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarQuedoEnCama(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                /*************************************************/
                ((Spinner) getActivity().findViewById(R.id.spnDia26Fila16)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCuadroConfusional(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia26Fila17)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCuadroNeurologico(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia26Fila18)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarConfusionMental(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia26Fila19)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarAnosmia(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia26Fila20)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarAgeusia(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia26Fila21)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarMareo(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia26Fila22)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarIctus(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia26Fila23)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarSincope(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });
                /************************************************/

                /*FIEBRE DIA 12*/
                View.OnClickListener onClickChkFiebreLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreLeveDia26).setOnClickListener(onClickChkFiebreLeve);

                View.OnClickListener onClickChkFiebreModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreModeradaDia26).setOnClickListener(onClickChkFiebreModerada);

                View.OnClickListener onClickChkFiebreSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreSeveraDia26).setOnClickListener(onClickChkFiebreSevera);
                /*-------------------------------*/
                /*TOS DIA 12*/
                View.OnClickListener onClickChkTosLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosLeveDia26).setOnClickListener(onClickChkTosLeve);

                View.OnClickListener onClickChkTosModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosModeradaDia26).setOnClickListener(onClickChkTosModerada);

                View.OnClickListener onClickChkTosSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosSeveraDia26).setOnClickListener(onClickChkTosSevera);
                /*-------------------------------*/
                /*SECRECION NASAL DIA 12*/
                View.OnClickListener onClickChkSecrecionNasalLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalLeveDia26).setOnClickListener(onClickChkSecrecionNasalLeve);

                View.OnClickListener onClickChkSecrecionNasalModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia26).setOnClickListener(onClickChkSecrecionNasalModerada);

                View.OnClickListener onClickChkSecrecionNasalSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia26).setOnClickListener(onClickChkSecrecionNasalSevera);
                /*-------------------------------*/
                /*DOLOR DE GARGANTA DIA 12*/
                View.OnClickListener onClickChkDolorGargantaLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaLeveDia26).setOnClickListener(onClickChkDolorGargantaLeve);

                View.OnClickListener onClickChkDolorGargantaModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaModeradaDia26).setOnClickListener(onClickChkDolorGargantaModerada);

                View.OnClickListener onClickChkDolorGargantaSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaSeveraDia26).setOnClickListener(onClickChkDolorGargantaSevera);
                /*DOLOR DE CABEZA DIA 12*/
                View.OnClickListener onClickChkDolorCabezaLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaLeveDia26).setOnClickListener(onClickChkDolorCabezaLeve);

                View.OnClickListener onClickChkDolorCabezaModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaModeradaDia26).setOnClickListener(onClickChkDolorCabezaModerada);

                View.OnClickListener onClickChkDolorCabezaSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaSeveraDia26).setOnClickListener(onClickChkDolorCabezaSevera);

                /*DOLOR DOLOR MUSCULAR DIA 12*/
                View.OnClickListener onClickChkDolorMuscularLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularLeveDia26).setOnClickListener(onClickChkDolorMuscularLeve);

                View.OnClickListener onClickChkDolorMuscularModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularModeradaDia26).setOnClickListener(onClickChkDolorMuscularModerada);

                View.OnClickListener onClickChkDolorMuscularSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularSeveraDia26).setOnClickListener(onClickChkDolorMuscularSevera);
                /*DOLOR ARTICULAR DIA 12*/
                View.OnClickListener onClickChkDolorArticularLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularLeveDia26).setOnClickListener(onClickChkDolorArticularLeve);

                View.OnClickListener onClickChkDolorArticularModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularModeradaDia26).setOnClickListener(onClickChkDolorArticularModerada);

                View.OnClickListener onClickChkDolorArticularSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularSeveraDia26).setOnClickListener(onClickChkDolorArticularSevera);
                /*-----------------------------*/
            }

            public void cargarDatosSintomasDia27() {
                ((Spinner) getActivity().findViewById(R.id.spnDia27Fila1)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarConsultaInicial(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia27Fila2)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFiebre(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia27Fila3)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarTos(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia27Fila4)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarSecrecionNasal(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia27Fila5)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorGarganta(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia27Fila6)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCongestionNasal(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia27Fila7)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorCabeza(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia27Fila8)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFaltaApetito(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia27Fila9)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorMuscular(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia27Fila10)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorArticular(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia27Fila11)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorOido(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia27Fila12)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarRespiracionRapida(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia27Fila13)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDificultadRespirar(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia27Fila14)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFaltaEscuela(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia27Fila15)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarQuedoEnCama(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                /*************************************************/
                ((Spinner) getActivity().findViewById(R.id.spnDia27Fila16)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCuadroConfusional(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia27Fila17)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCuadroNeurologico(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia27Fila18)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarConfusionMental(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia27Fila19)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarAnosmia(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia27Fila20)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarAgeusia(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia27Fila21)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarMareo(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia27Fila22)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarIctus(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia27Fila23)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarSincope(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });
                /************************************************/

                /*FIEBRE DIA 12*/
                View.OnClickListener onClickChkFiebreLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreLeveDia27).setOnClickListener(onClickChkFiebreLeve);

                View.OnClickListener onClickChkFiebreModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreModeradaDia27).setOnClickListener(onClickChkFiebreModerada);

                View.OnClickListener onClickChkFiebreSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreSeveraDia27).setOnClickListener(onClickChkFiebreSevera);
                /*-------------------------------*/
                /*TOS DIA 12*/
                View.OnClickListener onClickChkTosLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosLeveDia27).setOnClickListener(onClickChkTosLeve);

                View.OnClickListener onClickChkTosModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosModeradaDia27).setOnClickListener(onClickChkTosModerada);

                View.OnClickListener onClickChkTosSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosSeveraDia27).setOnClickListener(onClickChkTosSevera);
                /*-------------------------------*/
                /*SECRECION NASAL DIA 12*/
                View.OnClickListener onClickChkSecrecionNasalLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalLeveDia27).setOnClickListener(onClickChkSecrecionNasalLeve);

                View.OnClickListener onClickChkSecrecionNasalModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia27).setOnClickListener(onClickChkSecrecionNasalModerada);

                View.OnClickListener onClickChkSecrecionNasalSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia27).setOnClickListener(onClickChkSecrecionNasalSevera);
                /*-------------------------------*/
                /*DOLOR DE GARGANTA DIA 12*/
                View.OnClickListener onClickChkDolorGargantaLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaLeveDia27).setOnClickListener(onClickChkDolorGargantaLeve);

                View.OnClickListener onClickChkDolorGargantaModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaModeradaDia27).setOnClickListener(onClickChkDolorGargantaModerada);

                View.OnClickListener onClickChkDolorGargantaSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaSeveraDia27).setOnClickListener(onClickChkDolorGargantaSevera);
                /*DOLOR DE CABEZA DIA 12*/
                View.OnClickListener onClickChkDolorCabezaLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaLeveDia27).setOnClickListener(onClickChkDolorCabezaLeve);

                View.OnClickListener onClickChkDolorCabezaModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaModeradaDia27).setOnClickListener(onClickChkDolorCabezaModerada);

                View.OnClickListener onClickChkDolorCabezaSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaSeveraDia27).setOnClickListener(onClickChkDolorCabezaSevera);

                /*DOLOR DOLOR MUSCULAR DIA 12*/
                View.OnClickListener onClickChkDolorMuscularLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularLeveDia27).setOnClickListener(onClickChkDolorMuscularLeve);

                View.OnClickListener onClickChkDolorMuscularModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularModeradaDia27).setOnClickListener(onClickChkDolorMuscularModerada);

                View.OnClickListener onClickChkDolorMuscularSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularSeveraDia27).setOnClickListener(onClickChkDolorMuscularSevera);
                /*DOLOR ARTICULAR DIA 12*/
                View.OnClickListener onClickChkDolorArticularLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularLeveDia27).setOnClickListener(onClickChkDolorArticularLeve);

                View.OnClickListener onClickChkDolorArticularModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularModeradaDia27).setOnClickListener(onClickChkDolorArticularModerada);

                View.OnClickListener onClickChkDolorArticularSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularSeveraDia27).setOnClickListener(onClickChkDolorArticularSevera);
                /*-----------------------------*/
            }

            public void cargarDatosSintomasDia28() {
                ((Spinner) getActivity().findViewById(R.id.spnDia28Fila1)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarConsultaInicial(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia28Fila2)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFiebre(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia28Fila3)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarTos(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia28Fila4)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarSecrecionNasal(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia28Fila5)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorGarganta(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia28Fila6)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCongestionNasal(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia28Fila7)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorCabeza(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia28Fila8)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFaltaApetito(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia28Fila9)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorMuscular(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia28Fila10)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorArticular(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia28Fila11)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDolorOido(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia28Fila12)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarRespiracionRapida(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia28Fila13)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarDificultadRespirar(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia28Fila14)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarFaltaEscuela(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia28Fila15)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarQuedoEnCama(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                /*************************************************/
                ((Spinner) getActivity().findViewById(R.id.spnDia28Fila16)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCuadroConfusional(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia28Fila17)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarCuadroNeurologico(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia28Fila18)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarConfusionMental(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia28Fila19)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarAnosmia(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia28Fila20)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarAgeusia(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia28Fila21)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarMareo(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia28Fila22)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarIctus(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });

                ((Spinner) getActivity().findViewById(R.id.spnDia28Fila23)).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                    @Override
                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                        cargarSincope(position);
                    }

                    @Override
                    public void onNothingSelected(AdapterView<?> parent) {

                    }
                });
                /************************************************/

                /*FIEBRE DIA 12*/
                View.OnClickListener onClickChkFiebreLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreLeveDia28).setOnClickListener(onClickChkFiebreLeve);

                View.OnClickListener onClickChkFiebreModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreModeradaDia28).setOnClickListener(onClickChkFiebreModerada);

                View.OnClickListener onClickChkFiebreSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkFiebreSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkFiebreSeveraDia28).setOnClickListener(onClickChkFiebreSevera);
                /*-------------------------------*/
                /*TOS DIA 12*/
                View.OnClickListener onClickChkTosLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosLeveDia28).setOnClickListener(onClickChkTosLeve);

                View.OnClickListener onClickChkTosModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosModeradaDia28).setOnClickListener(onClickChkTosModerada);

                View.OnClickListener onClickChkTosSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkTosSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkTosSeveraDia28).setOnClickListener(onClickChkTosSevera);
                /*-------------------------------*/
                /*SECRECION NASAL DIA 12*/
                View.OnClickListener onClickChkSecrecionNasalLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalLeveDia28).setOnClickListener(onClickChkSecrecionNasalLeve);

                View.OnClickListener onClickChkSecrecionNasalModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia28).setOnClickListener(onClickChkSecrecionNasalModerada);

                View.OnClickListener onClickChkSecrecionNasalSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkSecrecionNasalSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia28).setOnClickListener(onClickChkSecrecionNasalSevera);
                /*-------------------------------*/
                /*DOLOR DE GARGANTA DIA 12*/
                View.OnClickListener onClickChkDolorGargantaLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaLeveDia28).setOnClickListener(onClickChkDolorGargantaLeve);

                View.OnClickListener onClickChkDolorGargantaModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaModeradaDia28).setOnClickListener(onClickChkDolorGargantaModerada);

                View.OnClickListener onClickChkDolorGargantaSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorGargantaSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorGargantaSeveraDia28).setOnClickListener(onClickChkDolorGargantaSevera);
                /*DOLOR DE CABEZA DIA 12*/
                View.OnClickListener onClickChkDolorCabezaLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaLeveDia28).setOnClickListener(onClickChkDolorCabezaLeve);

                View.OnClickListener onClickChkDolorCabezaModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaModeradaDia28).setOnClickListener(onClickChkDolorCabezaModerada);

                View.OnClickListener onClickChkDolorCabezaSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorCabezaSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorCabezaSeveraDia28).setOnClickListener(onClickChkDolorCabezaSevera);

                /*DOLOR DOLOR MUSCULAR DIA 12*/
                View.OnClickListener onClickChkDolorMuscularLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularLeveDia28).setOnClickListener(onClickChkDolorMuscularLeve);

                View.OnClickListener onClickChkDolorMuscularModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularModeradaDia28).setOnClickListener(onClickChkDolorMuscularModerada);

                View.OnClickListener onClickChkDolorMuscularSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorMuscularSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorMuscularSeveraDia28).setOnClickListener(onClickChkDolorMuscularSevera);
                /*DOLOR ARTICULAR DIA 12*/
                View.OnClickListener onClickChkDolorArticularLeve = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularLeve(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularLeveDia28).setOnClickListener(onClickChkDolorArticularLeve);

                View.OnClickListener onClickChkDolorArticularModerada = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularModerada(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularModeradaDia28).setOnClickListener(onClickChkDolorArticularModerada);

                View.OnClickListener onClickChkDolorArticularSevera = new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        onChkDolorArticularSevera(view);
                    }
                };
                getActivity().findViewById(R.id.chkDolorArticularSeveraDia28).setOnClickListener(onClickChkDolorArticularSevera);
                /*-----------------------------*/
            }

            /*--------FIEBRE-------------------*/
            public void onChkFiebreLeve(View view) {
                SeguimientoInfluenzaDTO seguimientoInfluenza = obtenerNuevoSeguimientoPorDia(mPage);
                if (mSeguimientoInfluenzaActivity.adapter != null && seguimientoInfluenza != null) {
                    switch (mPage) {
                        case 1:
                            boolean chkFiebreLeveDia1 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia1)).isChecked();
                            if (chkFiebreLeveDia1) {
                                seguimientoInfluenza.setFiebreLeve("S");
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia1)).setChecked(!chkFiebreLeveDia1);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia1)).setChecked(!chkFiebreLeveDia1);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 2:
                            boolean chkFiebreLeveDia2 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia2)).isChecked();
                            if (chkFiebreLeveDia2) {
                                seguimientoInfluenza.setFiebreLeve("S");
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia2)).setChecked(!chkFiebreLeveDia2);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia2)).setChecked(!chkFiebreLeveDia2);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 3:
                            boolean chkFiebreLeveDia3 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia3)).isChecked();
                            if (chkFiebreLeveDia3) {
                                seguimientoInfluenza.setFiebreLeve("S");
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia3)).setChecked(!chkFiebreLeveDia3);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia3)).setChecked(!chkFiebreLeveDia3);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 4:
                            boolean chkFiebreLeveDia4 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia4)).isChecked();
                            if (chkFiebreLeveDia4) {
                                seguimientoInfluenza.setFiebreLeve("S");
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia4)).setChecked(!chkFiebreLeveDia4);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia4)).setChecked(!chkFiebreLeveDia4);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 5:
                            boolean chkFiebreLeveDia5 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia5)).isChecked();
                            if (chkFiebreLeveDia5) {
                                seguimientoInfluenza.setFiebreLeve("S");
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia5)).setChecked(!chkFiebreLeveDia5);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia5)).setChecked(!chkFiebreLeveDia5);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 6:
                            boolean chkFiebreLeveDia6 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia6)).isChecked();
                            if (chkFiebreLeveDia6) {
                                seguimientoInfluenza.setFiebreLeve("S");
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia6)).setChecked(!chkFiebreLeveDia6);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia6)).setChecked(!chkFiebreLeveDia6);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 7:
                            boolean chkFiebreLeveDia7 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia7)).isChecked();
                            if (chkFiebreLeveDia7) {
                                seguimientoInfluenza.setFiebreLeve("S");
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia7)).setChecked(!chkFiebreLeveDia7);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia7)).setChecked(!chkFiebreLeveDia7);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 8:
                            boolean chkFiebreLeveDia8 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia8)).isChecked();
                            if (chkFiebreLeveDia8) {
                                seguimientoInfluenza.setFiebreLeve("S");
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia8)).setChecked(!chkFiebreLeveDia8);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia8)).setChecked(!chkFiebreLeveDia8);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 9:
                            boolean chkFiebreLeveDia9 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia9)).isChecked();
                            if (chkFiebreLeveDia9) {
                                seguimientoInfluenza.setFiebreLeve("S");
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia9)).setChecked(!chkFiebreLeveDia9);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia9)).setChecked(!chkFiebreLeveDia9);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 10:
                            boolean chkFiebreLeveDia10 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia10)).isChecked();
                            if (chkFiebreLeveDia10) {
                                seguimientoInfluenza.setFiebreLeve("S");
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia10)).setChecked(!chkFiebreLeveDia10);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia10)).setChecked(!chkFiebreLeveDia10);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 11:
                            boolean chkFiebreLeveDia11 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia11)).isChecked();
                            if (chkFiebreLeveDia11) {
                                seguimientoInfluenza.setFiebreLeve("S");
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia11)).setChecked(!chkFiebreLeveDia11);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia11)).setChecked(!chkFiebreLeveDia11);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 12:
                            boolean chkFiebreLeveDia12 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia12)).isChecked();
                            if (chkFiebreLeveDia12) {
                                seguimientoInfluenza.setFiebreLeve("S");
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia12)).setChecked(!chkFiebreLeveDia12);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia12)).setChecked(!chkFiebreLeveDia12);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 13:
                            boolean chkFiebreLeveDia13 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia13)).isChecked();
                            if (chkFiebreLeveDia13) {
                                seguimientoInfluenza.setFiebreLeve("S");
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia13)).setChecked(!chkFiebreLeveDia13);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia13)).setChecked(!chkFiebreLeveDia13);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 14:
                            boolean chkFiebreLeveDia14 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia14)).isChecked();
                            if (chkFiebreLeveDia14) {
                                seguimientoInfluenza.setFiebreLeve("S");
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia14)).setChecked(!chkFiebreLeveDia14);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia14)).setChecked(!chkFiebreLeveDia14);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 15:
                            boolean chkFiebreLeveDia15 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia15)).isChecked();
                            if (chkFiebreLeveDia15) {
                                seguimientoInfluenza.setFiebreLeve("S");
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia15)).setChecked(!chkFiebreLeveDia15);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia15)).setChecked(!chkFiebreLeveDia15);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 16:
                            boolean chkFiebreLeveDia16 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia16)).isChecked();
                            if (chkFiebreLeveDia16) {
                                seguimientoInfluenza.setFiebreLeve("S");
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia16)).setChecked(!chkFiebreLeveDia16);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia16)).setChecked(!chkFiebreLeveDia16);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 17:
                            boolean chkFiebreLeveDia17 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia17)).isChecked();
                            if (chkFiebreLeveDia17) {
                                seguimientoInfluenza.setFiebreLeve("S");
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia17)).setChecked(!chkFiebreLeveDia17);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia17)).setChecked(!chkFiebreLeveDia17);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 18:
                            boolean chkFiebreLeveDia18 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia18)).isChecked();
                            if (chkFiebreLeveDia18) {
                                seguimientoInfluenza.setFiebreLeve("S");
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia18)).setChecked(!chkFiebreLeveDia18);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia18)).setChecked(!chkFiebreLeveDia18);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 19:
                            boolean chkFiebreLeveDia19 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia19)).isChecked();
                            if (chkFiebreLeveDia19) {
                                seguimientoInfluenza.setFiebreLeve("S");
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia19)).setChecked(!chkFiebreLeveDia19);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia19)).setChecked(!chkFiebreLeveDia19);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 20:
                            boolean chkFiebreLeveDia20 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia20)).isChecked();
                            if (chkFiebreLeveDia20) {
                                seguimientoInfluenza.setFiebreLeve("S");
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia20)).setChecked(!chkFiebreLeveDia20);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia20)).setChecked(!chkFiebreLeveDia20);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 21:
                            boolean chkFiebreLeveDia21 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia21)).isChecked();
                            if (chkFiebreLeveDia21) {
                                seguimientoInfluenza.setFiebreLeve("S");
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia21)).setChecked(!chkFiebreLeveDia21);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia21)).setChecked(!chkFiebreLeveDia21);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 22:
                            boolean chkFiebreLeveDia22 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia22)).isChecked();
                            if (chkFiebreLeveDia22) {
                                seguimientoInfluenza.setFiebreLeve("S");
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia22)).setChecked(!chkFiebreLeveDia22);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia22)).setChecked(!chkFiebreLeveDia22);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 23:
                            boolean chkFiebreLeveDia23 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia23)).isChecked();
                            if (chkFiebreLeveDia23) {
                                seguimientoInfluenza.setFiebreLeve("S");
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia23)).setChecked(!chkFiebreLeveDia23);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia23)).setChecked(!chkFiebreLeveDia23);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 24:
                            boolean chkFiebreLeveDia24 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia24)).isChecked();
                            if (chkFiebreLeveDia24) {
                                seguimientoInfluenza.setFiebreLeve("S");
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia24)).setChecked(!chkFiebreLeveDia24);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia24)).setChecked(!chkFiebreLeveDia24);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 25:
                            boolean chkFiebreLeveDia25 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia25)).isChecked();
                            if (chkFiebreLeveDia25) {
                                seguimientoInfluenza.setFiebreLeve("S");
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia25)).setChecked(!chkFiebreLeveDia25);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia25)).setChecked(!chkFiebreLeveDia25);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 26:
                            boolean chkFiebreLeveDia26 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia26)).isChecked();
                            if (chkFiebreLeveDia26) {
                                seguimientoInfluenza.setFiebreLeve("S");
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia26)).setChecked(!chkFiebreLeveDia26);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia26)).setChecked(!chkFiebreLeveDia26);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 27:
                            boolean chkFiebreLeveDia27 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia27)).isChecked();
                            if (chkFiebreLeveDia27) {
                                seguimientoInfluenza.setFiebreLeve("S");
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia27)).setChecked(!chkFiebreLeveDia27);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia27)).setChecked(!chkFiebreLeveDia27);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 28:
                            boolean chkFiebreLeveDia28 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia28)).isChecked();
                            if (chkFiebreLeveDia28) {
                                seguimientoInfluenza.setFiebreLeve("S");
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia28)).setChecked(!chkFiebreLeveDia28);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia28)).setChecked(!chkFiebreLeveDia28);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                    }
                }
            }

            public void onChkFiebreModerada(View view) {
                SeguimientoInfluenzaDTO seguimientoInfluenza = obtenerNuevoSeguimientoPorDia(mPage);
                if (mSeguimientoInfluenzaActivity.adapter != null && seguimientoInfluenza != null) {
                    switch (mPage) {
                        case 1:
                            boolean chkFiebreModeradaDia1 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia1)).isChecked();
                            if (chkFiebreModeradaDia1) {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada("S");
                                seguimientoInfluenza.setFiebreSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia1)).setChecked(!chkFiebreModeradaDia1);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia1)).setChecked(!chkFiebreModeradaDia1);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 2:
                            boolean chkFiebreModeradaDia2 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia2)).isChecked();
                            if (chkFiebreModeradaDia2) {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada("S");
                                seguimientoInfluenza.setFiebreSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia2)).setChecked(!chkFiebreModeradaDia2);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia2)).setChecked(!chkFiebreModeradaDia2);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 3:
                            boolean chkFiebreModeradaDia3 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia3)).isChecked();
                            if (chkFiebreModeradaDia3) {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada("S");
                                seguimientoInfluenza.setFiebreSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia3)).setChecked(!chkFiebreModeradaDia3);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia3)).setChecked(!chkFiebreModeradaDia3);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 4:
                            boolean chkFiebreModeradaDia4 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia4)).isChecked();
                            if (chkFiebreModeradaDia4) {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada("S");
                                seguimientoInfluenza.setFiebreSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia4)).setChecked(!chkFiebreModeradaDia4);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia4)).setChecked(!chkFiebreModeradaDia4);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 5:
                            boolean chkFiebreModeradaDia5 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia5)).isChecked();
                            if (chkFiebreModeradaDia5) {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada("S");
                                seguimientoInfluenza.setFiebreSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia5)).setChecked(!chkFiebreModeradaDia5);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia5)).setChecked(!chkFiebreModeradaDia5);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 6:
                            boolean chkFiebreModeradaDia6 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia6)).isChecked();
                            if (chkFiebreModeradaDia6) {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada("S");
                                seguimientoInfluenza.setFiebreSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia6)).setChecked(!chkFiebreModeradaDia6);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia6)).setChecked(!chkFiebreModeradaDia6);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 7:
                            boolean chkFiebreModeradaDia7 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia7)).isChecked();
                            if (chkFiebreModeradaDia7) {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada("S");
                                seguimientoInfluenza.setFiebreSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia7)).setChecked(!chkFiebreModeradaDia7);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia7)).setChecked(!chkFiebreModeradaDia7);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 8:
                            boolean chkFiebreModeradaDia8 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia8)).isChecked();
                            if (chkFiebreModeradaDia8) {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada("S");
                                seguimientoInfluenza.setFiebreSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia8)).setChecked(!chkFiebreModeradaDia8);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia8)).setChecked(!chkFiebreModeradaDia8);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 9:
                            boolean chkFiebreModeradaDia9 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia9)).isChecked();
                            if (chkFiebreModeradaDia9) {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada("S");
                                seguimientoInfluenza.setFiebreSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia9)).setChecked(!chkFiebreModeradaDia9);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia9)).setChecked(!chkFiebreModeradaDia9);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 10:
                            boolean chkFiebreModeradaDia10 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia10)).isChecked();
                            if (chkFiebreModeradaDia10) {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada("S");
                                seguimientoInfluenza.setFiebreSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia10)).setChecked(!chkFiebreModeradaDia10);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia10)).setChecked(!chkFiebreModeradaDia10);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 11:
                            boolean chkFiebreModeradaDia11 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia11)).isChecked();
                            if (chkFiebreModeradaDia11) {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada("S");
                                seguimientoInfluenza.setFiebreSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia11)).setChecked(!chkFiebreModeradaDia11);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia11)).setChecked(!chkFiebreModeradaDia11);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 12:
                            boolean chkFiebreModeradaDia12 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia12)).isChecked();
                            if (chkFiebreModeradaDia12) {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada("S");
                                seguimientoInfluenza.setFiebreSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia12)).setChecked(!chkFiebreModeradaDia12);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia12)).setChecked(!chkFiebreModeradaDia12);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 13:
                            boolean chkFiebreModeradaDia13 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia13)).isChecked();
                            if (chkFiebreModeradaDia13) {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada("S");
                                seguimientoInfluenza.setFiebreSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia13)).setChecked(!chkFiebreModeradaDia13);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia13)).setChecked(!chkFiebreModeradaDia13);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 14:
                            boolean chkFiebreModeradaDia14 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia14)).isChecked();
                            if (chkFiebreModeradaDia14) {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada("S");
                                seguimientoInfluenza.setFiebreSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia14)).setChecked(!chkFiebreModeradaDia14);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia14)).setChecked(!chkFiebreModeradaDia14);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 15:
                            boolean chkFiebreModeradaDia15 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia15)).isChecked();
                            if (chkFiebreModeradaDia15) {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada("S");
                                seguimientoInfluenza.setFiebreSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia15)).setChecked(!chkFiebreModeradaDia15);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia15)).setChecked(!chkFiebreModeradaDia15);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 16:
                            boolean chkFiebreModeradaDia16 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia16)).isChecked();
                            if (chkFiebreModeradaDia16) {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada("S");
                                seguimientoInfluenza.setFiebreSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia16)).setChecked(!chkFiebreModeradaDia16);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia16)).setChecked(!chkFiebreModeradaDia16);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 17:
                            boolean chkFiebreModeradaDia17 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia17)).isChecked();
                            if (chkFiebreModeradaDia17) {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada("S");
                                seguimientoInfluenza.setFiebreSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia17)).setChecked(!chkFiebreModeradaDia17);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia17)).setChecked(!chkFiebreModeradaDia17);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 18:
                            boolean chkFiebreModeradaDia18 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia18)).isChecked();
                            if (chkFiebreModeradaDia18) {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada("S");
                                seguimientoInfluenza.setFiebreSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia18)).setChecked(!chkFiebreModeradaDia18);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia18)).setChecked(!chkFiebreModeradaDia18);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 19:
                            boolean chkFiebreModeradaDia19 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia19)).isChecked();
                            if (chkFiebreModeradaDia19) {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada("S");
                                seguimientoInfluenza.setFiebreSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia19)).setChecked(!chkFiebreModeradaDia19);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia19)).setChecked(!chkFiebreModeradaDia19);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 20:
                            boolean chkFiebreModeradaDia20 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia20)).isChecked();
                            if (chkFiebreModeradaDia20) {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada("S");
                                seguimientoInfluenza.setFiebreSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia20)).setChecked(!chkFiebreModeradaDia20);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia20)).setChecked(!chkFiebreModeradaDia20);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 21:
                            boolean chkFiebreModeradaDia21 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia21)).isChecked();
                            if (chkFiebreModeradaDia21) {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada("S");
                                seguimientoInfluenza.setFiebreSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia21)).setChecked(!chkFiebreModeradaDia21);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia21)).setChecked(!chkFiebreModeradaDia21);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 22:
                            boolean chkFiebreModeradaDia22 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia22)).isChecked();
                            if (chkFiebreModeradaDia22) {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada("S");
                                seguimientoInfluenza.setFiebreSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia22)).setChecked(!chkFiebreModeradaDia22);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia22)).setChecked(!chkFiebreModeradaDia22);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 23:
                            boolean chkFiebreModeradaDia23 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia23)).isChecked();
                            if (chkFiebreModeradaDia23) {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada("S");
                                seguimientoInfluenza.setFiebreSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia23)).setChecked(!chkFiebreModeradaDia23);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia23)).setChecked(!chkFiebreModeradaDia23);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 24:
                            boolean chkFiebreModeradaDia24 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia24)).isChecked();
                            if (chkFiebreModeradaDia24) {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada("S");
                                seguimientoInfluenza.setFiebreSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia24)).setChecked(!chkFiebreModeradaDia24);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia24)).setChecked(!chkFiebreModeradaDia24);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 25:
                            boolean chkFiebreModeradaDia25 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia25)).isChecked();
                            if (chkFiebreModeradaDia25) {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada("S");
                                seguimientoInfluenza.setFiebreSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia25)).setChecked(!chkFiebreModeradaDia25);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia25)).setChecked(!chkFiebreModeradaDia25);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 26:
                            boolean chkFiebreModeradaDia26 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia26)).isChecked();
                            if (chkFiebreModeradaDia26) {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada("S");
                                seguimientoInfluenza.setFiebreSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia26)).setChecked(!chkFiebreModeradaDia26);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia26)).setChecked(!chkFiebreModeradaDia26);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 27:
                            boolean chkFiebreModeradaDia27 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia27)).isChecked();
                            if (chkFiebreModeradaDia27) {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada("S");
                                seguimientoInfluenza.setFiebreSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia27)).setChecked(!chkFiebreModeradaDia27);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia27)).setChecked(!chkFiebreModeradaDia27);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 28:
                            boolean chkFiebreModeradaDia28 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia28)).isChecked();
                            if (chkFiebreModeradaDia28) {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada("S");
                                seguimientoInfluenza.setFiebreSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia28)).setChecked(!chkFiebreModeradaDia28);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia28)).setChecked(!chkFiebreModeradaDia28);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                    }
                }
            }

            public void onChkFiebreSevera(View view) {
                SeguimientoInfluenzaDTO seguimientoInfluenza = obtenerNuevoSeguimientoPorDia(mPage);
                if (mSeguimientoInfluenzaActivity.adapter != null && seguimientoInfluenza != null) {
                    switch (mPage) {
                        case 1:
                            boolean chkFiebreSeveraDia1 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia1)).isChecked();
                            if (chkFiebreSeveraDia1) {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia1)).setChecked(!chkFiebreSeveraDia1);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia1)).setChecked(!chkFiebreSeveraDia1);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 2:
                            boolean chkFiebreSeveraDia2 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia2)).isChecked();
                            if (chkFiebreSeveraDia2) {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia2)).setChecked(!chkFiebreSeveraDia2);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia2)).setChecked(!chkFiebreSeveraDia2);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 3:
                            boolean chkFiebreSeveraDia3 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia3)).isChecked();
                            if (chkFiebreSeveraDia3) {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia3)).setChecked(!chkFiebreSeveraDia3);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia3)).setChecked(!chkFiebreSeveraDia3);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 4:
                            boolean chkFiebreSeveraDia4 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia4)).isChecked();
                            if (chkFiebreSeveraDia4) {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia4)).setChecked(!chkFiebreSeveraDia4);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia4)).setChecked(!chkFiebreSeveraDia4);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 5:
                            boolean chkFiebreSeveraDia5 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia5)).isChecked();
                            if (chkFiebreSeveraDia5) {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia5)).setChecked(!chkFiebreSeveraDia5);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia5)).setChecked(!chkFiebreSeveraDia5);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 6:
                            boolean chkFiebreSeveraDia6 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia6)).isChecked();
                            if (chkFiebreSeveraDia6) {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia6)).setChecked(!chkFiebreSeveraDia6);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia6)).setChecked(!chkFiebreSeveraDia6);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 7:
                            boolean chkFiebreSeveraDia7 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia7)).isChecked();
                            if (chkFiebreSeveraDia7) {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia7)).setChecked(!chkFiebreSeveraDia7);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia7)).setChecked(!chkFiebreSeveraDia7);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 8:
                            boolean chkFiebreSeveraDia8 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia8)).isChecked();
                            if (chkFiebreSeveraDia8) {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia8)).setChecked(!chkFiebreSeveraDia8);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia8)).setChecked(!chkFiebreSeveraDia8);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 9:
                            boolean chkFiebreSeveraDia9 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia9)).isChecked();
                            if (chkFiebreSeveraDia9) {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia9)).setChecked(!chkFiebreSeveraDia9);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia9)).setChecked(!chkFiebreSeveraDia9);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 10:
                            boolean chkFiebreSeveraDia10 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia10)).isChecked();
                            if (chkFiebreSeveraDia10) {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia10)).setChecked(!chkFiebreSeveraDia10);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia10)).setChecked(!chkFiebreSeveraDia10);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 11:
                            boolean chkFiebreSeveraDia11 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia11)).isChecked();
                            if (chkFiebreSeveraDia11) {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia11)).setChecked(!chkFiebreSeveraDia11);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia11)).setChecked(!chkFiebreSeveraDia11);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 12:
                            boolean chkFiebreSeveraDia12 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia12)).isChecked();
                            if (chkFiebreSeveraDia12) {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia12)).setChecked(!chkFiebreSeveraDia12);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia12)).setChecked(!chkFiebreSeveraDia12);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 13:
                            boolean chkFiebreSeveraDia13 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia13)).isChecked();
                            if (chkFiebreSeveraDia13) {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia13)).setChecked(!chkFiebreSeveraDia13);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia13)).setChecked(!chkFiebreSeveraDia13);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 14:
                            boolean chkFiebreSeveraDia14 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia14)).isChecked();
                            if (chkFiebreSeveraDia14) {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia14)).setChecked(!chkFiebreSeveraDia14);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia14)).setChecked(!chkFiebreSeveraDia14);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 15:
                            boolean chkFiebreSeveraDia15 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia15)).isChecked();
                            if (chkFiebreSeveraDia15) {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia15)).setChecked(!chkFiebreSeveraDia15);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia15)).setChecked(!chkFiebreSeveraDia15);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 16:
                            boolean chkFiebreSeveraDia16 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia16)).isChecked();
                            if (chkFiebreSeveraDia16) {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia16)).setChecked(!chkFiebreSeveraDia16);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia16)).setChecked(!chkFiebreSeveraDia16);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 17:
                            boolean chkFiebreSeveraDia17 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia17)).isChecked();
                            if (chkFiebreSeveraDia17) {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia17)).setChecked(!chkFiebreSeveraDia17);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia17)).setChecked(!chkFiebreSeveraDia17);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 18:
                            boolean chkFiebreSeveraDia18 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia18)).isChecked();
                            if (chkFiebreSeveraDia18) {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia18)).setChecked(!chkFiebreSeveraDia18);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia18)).setChecked(!chkFiebreSeveraDia18);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 19:
                            boolean chkFiebreSeveraDia19 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia19)).isChecked();
                            if (chkFiebreSeveraDia19) {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia19)).setChecked(!chkFiebreSeveraDia19);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia19)).setChecked(!chkFiebreSeveraDia19);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 20:
                            boolean chkFiebreSeveraDia20 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia20)).isChecked();
                            if (chkFiebreSeveraDia20) {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia20)).setChecked(!chkFiebreSeveraDia20);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia20)).setChecked(!chkFiebreSeveraDia20);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 21:
                            boolean chkFiebreSeveraDia21 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia21)).isChecked();
                            if (chkFiebreSeveraDia21) {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia21)).setChecked(!chkFiebreSeveraDia21);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia21)).setChecked(!chkFiebreSeveraDia21);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 22:
                            boolean chkFiebreSeveraDia22 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia22)).isChecked();
                            if (chkFiebreSeveraDia22) {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia22)).setChecked(!chkFiebreSeveraDia22);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia22)).setChecked(!chkFiebreSeveraDia22);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 23:
                            boolean chkFiebreSeveraDia23 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia23)).isChecked();
                            if (chkFiebreSeveraDia23) {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia23)).setChecked(!chkFiebreSeveraDia23);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia23)).setChecked(!chkFiebreSeveraDia23);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 24:
                            boolean chkFiebreSeveraDia24 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia24)).isChecked();
                            if (chkFiebreSeveraDia24) {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia24)).setChecked(!chkFiebreSeveraDia24);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia24)).setChecked(!chkFiebreSeveraDia24);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 25:
                            boolean chkFiebreSeveraDia25 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia25)).isChecked();
                            if (chkFiebreSeveraDia25) {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia25)).setChecked(!chkFiebreSeveraDia25);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia25)).setChecked(!chkFiebreSeveraDia25);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 26:
                            boolean chkFiebreSeveraDia26 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia26)).isChecked();
                            if (chkFiebreSeveraDia26) {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia26)).setChecked(!chkFiebreSeveraDia26);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia26)).setChecked(!chkFiebreSeveraDia26);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 27:
                            boolean chkFiebreSeveraDia27 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia27)).isChecked();
                            if (chkFiebreSeveraDia27) {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia27)).setChecked(!chkFiebreSeveraDia27);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia27)).setChecked(!chkFiebreSeveraDia27);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                        case 28:
                            boolean chkFiebreSeveraDia28 = ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia28)).isChecked();
                            if (chkFiebreSeveraDia28) {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia28)).setChecked(!chkFiebreSeveraDia28);
                                ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia28)).setChecked(!chkFiebreSeveraDia28);
                            } else {
                                seguimientoInfluenza.setFiebreLeve(null);
                                seguimientoInfluenza.setFiebreModerada(null);
                                seguimientoInfluenza.setFiebreSevera(null);
                            }
                            break;
                    }
                }
            }

            /*---------------------------*/
            /*--------TOS-------------------*/
            public void onChkTosLeve(View view) {
                SeguimientoInfluenzaDTO seguimientoInfluenza = obtenerNuevoSeguimientoPorDia(mPage);
                if (mSeguimientoInfluenzaActivity.adapter != null && seguimientoInfluenza != null) {
                    switch (mPage) {
                        case 1:
                            boolean chkTosLeveDia1 = ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia1)).isChecked();
                            if (chkTosLeveDia1) {
                                seguimientoInfluenza.setTosLeve("S");
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia1)).setChecked(!chkTosLeveDia1);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia1)).setChecked(!chkTosLeveDia1);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 2:
                            boolean chkTosLeveDia2 = ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia2)).isChecked();
                            if (chkTosLeveDia2) {
                                seguimientoInfluenza.setTosLeve("S");
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia2)).setChecked(!chkTosLeveDia2);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia2)).setChecked(!chkTosLeveDia2);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 3:
                            boolean chkTosLeveDia3 = ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia3)).isChecked();
                            if (chkTosLeveDia3) {
                                seguimientoInfluenza.setTosLeve("S");
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia3)).setChecked(!chkTosLeveDia3);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia3)).setChecked(!chkTosLeveDia3);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 4:
                            boolean chkTosLeveDia4 = ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia4)).isChecked();
                            if (chkTosLeveDia4) {
                                seguimientoInfluenza.setTosLeve("S");
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia4)).setChecked(!chkTosLeveDia4);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia4)).setChecked(!chkTosLeveDia4);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 5:
                            boolean chkTosLeveDia5 = ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia5)).isChecked();
                            if (chkTosLeveDia5) {
                                seguimientoInfluenza.setTosLeve("S");
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia5)).setChecked(!chkTosLeveDia5);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia5)).setChecked(!chkTosLeveDia5);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 6:
                            boolean chkTosLeveDia6 = ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia6)).isChecked();
                            if (chkTosLeveDia6) {
                                seguimientoInfluenza.setTosLeve("S");
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia6)).setChecked(!chkTosLeveDia6);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia6)).setChecked(!chkTosLeveDia6);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 7:
                            boolean chkTosLeveDia7 = ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia7)).isChecked();
                            if (chkTosLeveDia7) {
                                seguimientoInfluenza.setTosLeve("S");
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia7)).setChecked(!chkTosLeveDia7);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia7)).setChecked(!chkTosLeveDia7);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 8:
                            boolean chkTosLeveDia8 = ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia8)).isChecked();
                            if (chkTosLeveDia8) {
                                seguimientoInfluenza.setTosLeve("S");
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia8)).setChecked(!chkTosLeveDia8);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia8)).setChecked(!chkTosLeveDia8);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 9:
                            boolean chkTosLeveDia9 = ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia9)).isChecked();
                            if (chkTosLeveDia9) {
                                seguimientoInfluenza.setTosLeve("S");
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia9)).setChecked(!chkTosLeveDia9);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia9)).setChecked(!chkTosLeveDia9);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 10:
                            boolean chkTosLeveDia10 = ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia10)).isChecked();
                            if (chkTosLeveDia10) {
                                seguimientoInfluenza.setTosLeve("S");
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia10)).setChecked(!chkTosLeveDia10);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia10)).setChecked(!chkTosLeveDia10);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 11:
                            boolean chkTosLeveDia11 = ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia11)).isChecked();
                            if (chkTosLeveDia11) {
                                seguimientoInfluenza.setTosLeve("S");
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia11)).setChecked(!chkTosLeveDia11);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia11)).setChecked(!chkTosLeveDia11);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 12:
                            boolean chkTosLeveDia12 = ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia12)).isChecked();
                            if (chkTosLeveDia12) {
                                seguimientoInfluenza.setTosLeve("S");
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia12)).setChecked(!chkTosLeveDia12);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia12)).setChecked(!chkTosLeveDia12);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 13:
                            boolean chkTosLeveDia13 = ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia13)).isChecked();
                            if (chkTosLeveDia13) {
                                seguimientoInfluenza.setTosLeve("S");
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia13)).setChecked(!chkTosLeveDia13);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia13)).setChecked(!chkTosLeveDia13);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 14:
                            boolean chkTosLeveDia14 = ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia14)).isChecked();
                            if (chkTosLeveDia14) {
                                seguimientoInfluenza.setTosLeve("S");
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia14)).setChecked(!chkTosLeveDia14);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia14)).setChecked(!chkTosLeveDia14);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 15:
                            boolean chkTosLeveDia15 = ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia15)).isChecked();
                            if (chkTosLeveDia15) {
                                seguimientoInfluenza.setTosLeve("S");
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia15)).setChecked(!chkTosLeveDia15);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia15)).setChecked(!chkTosLeveDia15);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 16:
                            boolean chkTosLeveDia16 = ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia16)).isChecked();
                            if (chkTosLeveDia16) {
                                seguimientoInfluenza.setTosLeve("S");
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia16)).setChecked(!chkTosLeveDia16);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia16)).setChecked(!chkTosLeveDia16);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 17:
                            boolean chkTosLeveDia17 = ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia17)).isChecked();
                            if (chkTosLeveDia17) {
                                seguimientoInfluenza.setTosLeve("S");
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia17)).setChecked(!chkTosLeveDia17);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia17)).setChecked(!chkTosLeveDia17);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 18:
                            boolean chkTosLeveDia18 = ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia18)).isChecked();
                            if (chkTosLeveDia18) {
                                seguimientoInfluenza.setTosLeve("S");
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia18)).setChecked(!chkTosLeveDia18);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia18)).setChecked(!chkTosLeveDia18);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 19:
                            boolean chkTosLeveDia19 = ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia19)).isChecked();
                            if (chkTosLeveDia19) {
                                seguimientoInfluenza.setTosLeve("S");
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia19)).setChecked(!chkTosLeveDia19);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia19)).setChecked(!chkTosLeveDia19);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 20:
                            boolean chkTosLeveDia20 = ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia20)).isChecked();
                            if (chkTosLeveDia20) {
                                seguimientoInfluenza.setTosLeve("S");
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia20)).setChecked(!chkTosLeveDia20);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia20)).setChecked(!chkTosLeveDia20);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 21:
                            boolean chkTosLeveDia21 = ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia21)).isChecked();
                            if (chkTosLeveDia21) {
                                seguimientoInfluenza.setTosLeve("S");
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia21)).setChecked(!chkTosLeveDia21);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia21)).setChecked(!chkTosLeveDia21);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 22:
                            boolean chkTosLeveDia22 = ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia22)).isChecked();
                            if (chkTosLeveDia22) {
                                seguimientoInfluenza.setTosLeve("S");
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia22)).setChecked(!chkTosLeveDia22);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia22)).setChecked(!chkTosLeveDia22);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 23:
                            boolean chkTosLeveDia23 = ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia23)).isChecked();
                            if (chkTosLeveDia23) {
                                seguimientoInfluenza.setTosLeve("S");
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia23)).setChecked(!chkTosLeveDia23);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia23)).setChecked(!chkTosLeveDia23);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 24:
                            boolean chkTosLeveDia24 = ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia24)).isChecked();
                            if (chkTosLeveDia24) {
                                seguimientoInfluenza.setTosLeve("S");
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia24)).setChecked(!chkTosLeveDia24);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia24)).setChecked(!chkTosLeveDia24);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 25:
                            boolean chkTosLeveDia25 = ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia25)).isChecked();
                            if (chkTosLeveDia25) {
                                seguimientoInfluenza.setTosLeve("S");
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia25)).setChecked(!chkTosLeveDia25);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia25)).setChecked(!chkTosLeveDia25);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 26:
                            boolean chkTosLeveDia26 = ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia26)).isChecked();
                            if (chkTosLeveDia26) {
                                seguimientoInfluenza.setTosLeve("S");
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia26)).setChecked(!chkTosLeveDia26);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia26)).setChecked(!chkTosLeveDia26);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 27:
                            boolean chkTosLeveDia27 = ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia27)).isChecked();
                            if (chkTosLeveDia27) {
                                seguimientoInfluenza.setTosLeve("S");
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia27)).setChecked(!chkTosLeveDia27);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia27)).setChecked(!chkTosLeveDia27);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 28:
                            boolean chkTosLeveDia28 = ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia28)).isChecked();
                            if (chkTosLeveDia28) {
                                seguimientoInfluenza.setTosLeve("S");
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia28)).setChecked(!chkTosLeveDia28);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia28)).setChecked(!chkTosLeveDia28);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                    }
                }
            }

            public void onChkTosModerada(View view) {
                SeguimientoInfluenzaDTO seguimientoInfluenza = obtenerNuevoSeguimientoPorDia(mPage);
                if (mSeguimientoInfluenzaActivity.adapter != null && seguimientoInfluenza != null) {
                    switch (mPage) {
                        case 1:
                            boolean chkTosModeradaDia1 = ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia1)).isChecked();
                            if (chkTosModeradaDia1) {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada("S");
                                seguimientoInfluenza.setTosSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia1)).setChecked(!chkTosModeradaDia1);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia1)).setChecked(!chkTosModeradaDia1);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 2:
                            boolean chkTosModeradaDia2 = ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia2)).isChecked();
                            if (chkTosModeradaDia2) {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada("S");
                                seguimientoInfluenza.setTosSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia2)).setChecked(!chkTosModeradaDia2);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia2)).setChecked(!chkTosModeradaDia2);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 3:
                            boolean chkTosModeradaDia3 = ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia3)).isChecked();
                            if (chkTosModeradaDia3) {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada("S");
                                seguimientoInfluenza.setTosSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia3)).setChecked(!chkTosModeradaDia3);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia3)).setChecked(!chkTosModeradaDia3);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 4:
                            boolean chkTosModeradaDia4 = ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia4)).isChecked();
                            if (chkTosModeradaDia4) {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada("S");
                                seguimientoInfluenza.setTosSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia4)).setChecked(!chkTosModeradaDia4);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia4)).setChecked(!chkTosModeradaDia4);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 5:
                            boolean chkTosModeradaDia5 = ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia5)).isChecked();
                            if (chkTosModeradaDia5) {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada("S");
                                seguimientoInfluenza.setTosSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia5)).setChecked(!chkTosModeradaDia5);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia5)).setChecked(!chkTosModeradaDia5);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 6:
                            boolean chkTosModeradaDia6 = ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia6)).isChecked();
                            if (chkTosModeradaDia6) {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada("S");
                                seguimientoInfluenza.setTosSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia6)).setChecked(!chkTosModeradaDia6);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia6)).setChecked(!chkTosModeradaDia6);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 7:
                            boolean chkTosModeradaDia7 = ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia7)).isChecked();
                            if (chkTosModeradaDia7) {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada("S");
                                seguimientoInfluenza.setTosSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia7)).setChecked(!chkTosModeradaDia7);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia7)).setChecked(!chkTosModeradaDia7);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 8:
                            boolean chkTosModeradaDia8 = ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia8)).isChecked();
                            if (chkTosModeradaDia8) {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada("S");
                                seguimientoInfluenza.setTosSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia8)).setChecked(!chkTosModeradaDia8);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia8)).setChecked(!chkTosModeradaDia8);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 9:
                            boolean chkTosModeradaDia9 = ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia9)).isChecked();
                            if (chkTosModeradaDia9) {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada("S");
                                seguimientoInfluenza.setTosSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia9)).setChecked(!chkTosModeradaDia9);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia9)).setChecked(!chkTosModeradaDia9);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 10:
                            boolean chkTosModeradaDia10 = ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia10)).isChecked();
                            if (chkTosModeradaDia10) {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada("S");
                                seguimientoInfluenza.setTosSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia10)).setChecked(!chkTosModeradaDia10);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia10)).setChecked(!chkTosModeradaDia10);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 11:
                            boolean chkTosModeradaDia11 = ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia11)).isChecked();
                            if (chkTosModeradaDia11) {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada("S");
                                seguimientoInfluenza.setTosSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia11)).setChecked(!chkTosModeradaDia11);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia11)).setChecked(!chkTosModeradaDia11);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 12:
                            boolean chkTosModeradaDia12 = ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia12)).isChecked();
                            if (chkTosModeradaDia12) {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada("S");
                                seguimientoInfluenza.setTosSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia12)).setChecked(!chkTosModeradaDia12);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia12)).setChecked(!chkTosModeradaDia12);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 13:
                            boolean chkTosModeradaDia13 = ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia13)).isChecked();
                            if (chkTosModeradaDia13) {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada("S");
                                seguimientoInfluenza.setTosSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia13)).setChecked(!chkTosModeradaDia13);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia13)).setChecked(!chkTosModeradaDia13);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 14:
                            boolean chkTosModeradaDia14 = ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia14)).isChecked();
                            if (chkTosModeradaDia14) {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada("S");
                                seguimientoInfluenza.setTosSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia14)).setChecked(!chkTosModeradaDia14);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia14)).setChecked(!chkTosModeradaDia14);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 15:
                            boolean chkTosModeradaDia15 = ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia15)).isChecked();
                            if (chkTosModeradaDia15) {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada("S");
                                seguimientoInfluenza.setTosSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia15)).setChecked(!chkTosModeradaDia15);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia15)).setChecked(!chkTosModeradaDia15);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 16:
                            boolean chkTosModeradaDia16 = ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia16)).isChecked();
                            if (chkTosModeradaDia16) {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada("S");
                                seguimientoInfluenza.setTosSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia16)).setChecked(!chkTosModeradaDia16);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia16)).setChecked(!chkTosModeradaDia16);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 17:
                            boolean chkTosModeradaDia17 = ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia17)).isChecked();
                            if (chkTosModeradaDia17) {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada("S");
                                seguimientoInfluenza.setTosSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia17)).setChecked(!chkTosModeradaDia17);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia17)).setChecked(!chkTosModeradaDia17);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 18:
                            boolean chkTosModeradaDia18 = ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia18)).isChecked();
                            if (chkTosModeradaDia18) {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada("S");
                                seguimientoInfluenza.setTosSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia18)).setChecked(!chkTosModeradaDia18);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia18)).setChecked(!chkTosModeradaDia18);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 19:
                            boolean chkTosModeradaDia19 = ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia19)).isChecked();
                            if (chkTosModeradaDia19) {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada("S");
                                seguimientoInfluenza.setTosSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia19)).setChecked(!chkTosModeradaDia19);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia19)).setChecked(!chkTosModeradaDia19);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 20:
                            boolean chkTosModeradaDia20 = ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia20)).isChecked();
                            if (chkTosModeradaDia20) {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada("S");
                                seguimientoInfluenza.setTosSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia20)).setChecked(!chkTosModeradaDia20);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia20)).setChecked(!chkTosModeradaDia20);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 21:
                            boolean chkTosModeradaDia21 = ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia21)).isChecked();
                            if (chkTosModeradaDia21) {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada("S");
                                seguimientoInfluenza.setTosSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia21)).setChecked(!chkTosModeradaDia21);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia21)).setChecked(!chkTosModeradaDia21);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 22:
                            boolean chkTosModeradaDia22 = ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia22)).isChecked();
                            if (chkTosModeradaDia22) {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada("S");
                                seguimientoInfluenza.setTosSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia22)).setChecked(!chkTosModeradaDia22);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia22)).setChecked(!chkTosModeradaDia22);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 23:
                            boolean chkTosModeradaDia23 = ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia23)).isChecked();
                            if (chkTosModeradaDia23) {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada("S");
                                seguimientoInfluenza.setTosSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia23)).setChecked(!chkTosModeradaDia23);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia23)).setChecked(!chkTosModeradaDia23);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 24:
                            boolean chkTosModeradaDia24 = ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia24)).isChecked();
                            if (chkTosModeradaDia24) {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada("S");
                                seguimientoInfluenza.setTosSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia24)).setChecked(!chkTosModeradaDia24);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia24)).setChecked(!chkTosModeradaDia24);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 25:
                            boolean chkTosModeradaDia25 = ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia25)).isChecked();
                            if (chkTosModeradaDia25) {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada("S");
                                seguimientoInfluenza.setTosSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia25)).setChecked(!chkTosModeradaDia25);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia25)).setChecked(!chkTosModeradaDia25);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 26:
                            boolean chkTosModeradaDia26 = ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia26)).isChecked();
                            if (chkTosModeradaDia26) {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada("S");
                                seguimientoInfluenza.setTosSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia26)).setChecked(!chkTosModeradaDia26);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia26)).setChecked(!chkTosModeradaDia26);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 27:
                            boolean chkTosModeradaDia27 = ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia27)).isChecked();
                            if (chkTosModeradaDia27) {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada("S");
                                seguimientoInfluenza.setTosSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia27)).setChecked(!chkTosModeradaDia27);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia27)).setChecked(!chkTosModeradaDia27);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 28:
                            boolean chkTosModeradaDia28 = ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia28)).isChecked();
                            if (chkTosModeradaDia28) {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada("S");
                                seguimientoInfluenza.setTosSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia28)).setChecked(!chkTosModeradaDia28);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia28)).setChecked(!chkTosModeradaDia28);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                    }
                }
            }

            public void onChkTosSevera(View view) {
                SeguimientoInfluenzaDTO seguimientoInfluenza = obtenerNuevoSeguimientoPorDia(mPage);
                if (mSeguimientoInfluenzaActivity.adapter != null && seguimientoInfluenza != null) {
                    switch (mPage) {
                        case 1:
                            boolean chkTosSeveraDia1 = ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia1)).isChecked();
                            if (chkTosSeveraDia1) {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia1)).setChecked(!chkTosSeveraDia1);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia1)).setChecked(!chkTosSeveraDia1);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 2:
                            boolean chkTosSeveraDia2 = ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia2)).isChecked();
                            if (chkTosSeveraDia2) {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia2)).setChecked(!chkTosSeveraDia2);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia2)).setChecked(!chkTosSeveraDia2);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 3:
                            boolean chkTosSeveraDia3 = ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia3)).isChecked();
                            if (chkTosSeveraDia3) {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia3)).setChecked(!chkTosSeveraDia3);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia3)).setChecked(!chkTosSeveraDia3);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 4:
                            boolean chkTosSeveraDia4 = ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia4)).isChecked();
                            if (chkTosSeveraDia4) {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia4)).setChecked(!chkTosSeveraDia4);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia4)).setChecked(!chkTosSeveraDia4);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 5:
                            boolean chkTosSeveraDia5 = ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia5)).isChecked();
                            if (chkTosSeveraDia5) {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia5)).setChecked(!chkTosSeveraDia5);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia5)).setChecked(!chkTosSeveraDia5);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 6:
                            boolean chkTosSeveraDia6 = ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia6)).isChecked();
                            if (chkTosSeveraDia6) {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia6)).setChecked(!chkTosSeveraDia6);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia6)).setChecked(!chkTosSeveraDia6);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 7:
                            boolean chkTosSeveraDia7 = ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia7)).isChecked();
                            if (chkTosSeveraDia7) {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia7)).setChecked(!chkTosSeveraDia7);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia7)).setChecked(!chkTosSeveraDia7);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 8:
                            boolean chkTosSeveraDia8 = ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia8)).isChecked();
                            if (chkTosSeveraDia8) {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia8)).setChecked(!chkTosSeveraDia8);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia8)).setChecked(!chkTosSeveraDia8);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 9:
                            boolean chkTosSeveraDia9 = ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia9)).isChecked();
                            if (chkTosSeveraDia9) {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia9)).setChecked(!chkTosSeveraDia9);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia9)).setChecked(!chkTosSeveraDia9);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 10:
                            boolean chkTosSeveraDia10 = ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia10)).isChecked();
                            if (chkTosSeveraDia10) {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia10)).setChecked(!chkTosSeveraDia10);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia10)).setChecked(!chkTosSeveraDia10);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 11:
                            boolean chkTosSeveraDia11 = ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia11)).isChecked();
                            if (chkTosSeveraDia11) {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia11)).setChecked(!chkTosSeveraDia11);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia11)).setChecked(!chkTosSeveraDia11);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 12:
                            boolean chkTosSeveraDia12 = ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia12)).isChecked();
                            if (chkTosSeveraDia12) {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia12)).setChecked(!chkTosSeveraDia12);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia12)).setChecked(!chkTosSeveraDia12);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 13:
                            boolean chkTosSeveraDia13 = ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia13)).isChecked();
                            if (chkTosSeveraDia13) {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia13)).setChecked(!chkTosSeveraDia13);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia13)).setChecked(!chkTosSeveraDia13);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 14:
                            boolean chkTosSeveraDia14 = ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia14)).isChecked();
                            if (chkTosSeveraDia14) {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia14)).setChecked(!chkTosSeveraDia14);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia14)).setChecked(!chkTosSeveraDia14);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 15:
                            boolean chkTosSeveraDia15 = ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia15)).isChecked();
                            if (chkTosSeveraDia15) {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia15)).setChecked(!chkTosSeveraDia15);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia15)).setChecked(!chkTosSeveraDia15);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 16:
                            boolean chkTosSeveraDia16 = ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia16)).isChecked();
                            if (chkTosSeveraDia16) {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia16)).setChecked(!chkTosSeveraDia16);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia16)).setChecked(!chkTosSeveraDia16);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 17:
                            boolean chkTosSeveraDia17 = ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia17)).isChecked();
                            if (chkTosSeveraDia17) {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia17)).setChecked(!chkTosSeveraDia17);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia17)).setChecked(!chkTosSeveraDia17);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 18:
                            boolean chkTosSeveraDia18 = ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia18)).isChecked();
                            if (chkTosSeveraDia18) {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia18)).setChecked(!chkTosSeveraDia18);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia18)).setChecked(!chkTosSeveraDia18);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 19:
                            boolean chkTosSeveraDia19 = ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia19)).isChecked();
                            if (chkTosSeveraDia19) {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia19)).setChecked(!chkTosSeveraDia19);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia19)).setChecked(!chkTosSeveraDia19);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 20:
                            boolean chkTosSeveraDia20 = ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia20)).isChecked();
                            if (chkTosSeveraDia20) {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia20)).setChecked(!chkTosSeveraDia20);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia20)).setChecked(!chkTosSeveraDia20);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 21:
                            boolean chkTosSeveraDia21 = ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia21)).isChecked();
                            if (chkTosSeveraDia21) {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia21)).setChecked(!chkTosSeveraDia21);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia21)).setChecked(!chkTosSeveraDia21);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 22:
                            boolean chkTosSeveraDia22 = ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia22)).isChecked();
                            if (chkTosSeveraDia22) {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia22)).setChecked(!chkTosSeveraDia22);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia22)).setChecked(!chkTosSeveraDia22);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 23:
                            boolean chkTosSeveraDia23 = ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia23)).isChecked();
                            if (chkTosSeveraDia23) {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia23)).setChecked(!chkTosSeveraDia23);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia23)).setChecked(!chkTosSeveraDia23);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 24:
                            boolean chkTosSeveraDia24 = ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia24)).isChecked();
                            if (chkTosSeveraDia24) {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia24)).setChecked(!chkTosSeveraDia24);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia24)).setChecked(!chkTosSeveraDia24);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 25:
                            boolean chkTosSeveraDia25 = ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia25)).isChecked();
                            if (chkTosSeveraDia25) {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia25)).setChecked(!chkTosSeveraDia25);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia25)).setChecked(!chkTosSeveraDia25);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 26:
                            boolean chkTosSeveraDia26 = ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia26)).isChecked();
                            if (chkTosSeveraDia26) {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia26)).setChecked(!chkTosSeveraDia26);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia26)).setChecked(!chkTosSeveraDia26);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 27:
                            boolean chkTosSeveraDia27 = ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia27)).isChecked();
                            if (chkTosSeveraDia27) {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia27)).setChecked(!chkTosSeveraDia27);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia27)).setChecked(!chkTosSeveraDia27);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                        case 28:
                            boolean chkTosSeveraDia28 = ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia28)).isChecked();
                            if (chkTosSeveraDia28) {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia28)).setChecked(!chkTosSeveraDia28);
                                ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia28)).setChecked(!chkTosSeveraDia28);
                            } else {
                                seguimientoInfluenza.setTosLeve(null);
                                seguimientoInfluenza.setTosModerada(null);
                                seguimientoInfluenza.setTosSevera(null);
                            }
                            break;
                    }
                }
            }

            /*---------------------------*/
            /*--------SECRECION NASAL-------------------*/
            public void onChkSecrecionNasalLeve(View view) {
                SeguimientoInfluenzaDTO seguimientoInfluenza = obtenerNuevoSeguimientoPorDia(mPage);
                if (mSeguimientoInfluenzaActivity.adapter != null && seguimientoInfluenza != null) {
                    switch (mPage) {
                        case 1:
                            boolean chkSecrecionNasalLeveDia1 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia1)).isChecked();
                            if (chkSecrecionNasalLeveDia1) {
                                seguimientoInfluenza.setSecrecionNasalLeve("S");
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia1)).setChecked(!chkSecrecionNasalLeveDia1);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia1)).setChecked(!chkSecrecionNasalLeveDia1);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 2:
                            boolean chkSecrecionNasalLeveDia2 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia2)).isChecked();
                            if (chkSecrecionNasalLeveDia2) {
                                seguimientoInfluenza.setSecrecionNasalLeve("S");
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia2)).setChecked(!chkSecrecionNasalLeveDia2);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia2)).setChecked(!chkSecrecionNasalLeveDia2);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 3:
                            boolean chkSecrecionNasalLeveDia3 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia3)).isChecked();
                            if (chkSecrecionNasalLeveDia3) {
                                seguimientoInfluenza.setSecrecionNasalLeve("S");
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia3)).setChecked(!chkSecrecionNasalLeveDia3);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia3)).setChecked(!chkSecrecionNasalLeveDia3);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 4:
                            boolean chkSecrecionNasalLeveDia4 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia4)).isChecked();
                            if (chkSecrecionNasalLeveDia4) {
                                seguimientoInfluenza.setSecrecionNasalLeve("S");
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia4)).setChecked(!chkSecrecionNasalLeveDia4);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia4)).setChecked(!chkSecrecionNasalLeveDia4);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 5:
                            boolean chkSecrecionNasalLeveDia5 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia5)).isChecked();
                            if (chkSecrecionNasalLeveDia5) {
                                seguimientoInfluenza.setSecrecionNasalLeve("S");
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia5)).setChecked(!chkSecrecionNasalLeveDia5);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia5)).setChecked(!chkSecrecionNasalLeveDia5);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 6:
                            boolean chkSecrecionNasalLeveDia6 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia6)).isChecked();
                            if (chkSecrecionNasalLeveDia6) {
                                seguimientoInfluenza.setSecrecionNasalLeve("S");
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia6)).setChecked(!chkSecrecionNasalLeveDia6);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia6)).setChecked(!chkSecrecionNasalLeveDia6);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 7:
                            boolean chkSecrecionNasalLeveDia7 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia7)).isChecked();
                            if (chkSecrecionNasalLeveDia7) {
                                seguimientoInfluenza.setSecrecionNasalLeve("S");
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia7)).setChecked(!chkSecrecionNasalLeveDia7);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia7)).setChecked(!chkSecrecionNasalLeveDia7);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 8:
                            boolean chkSecrecionNasalLeveDia8 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia8)).isChecked();
                            if (chkSecrecionNasalLeveDia8) {
                                seguimientoInfluenza.setSecrecionNasalLeve("S");
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia8)).setChecked(!chkSecrecionNasalLeveDia8);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia8)).setChecked(!chkSecrecionNasalLeveDia8);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 9:
                            boolean chkSecrecionNasalLeveDia9 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia9)).isChecked();
                            if (chkSecrecionNasalLeveDia9) {
                                seguimientoInfluenza.setSecrecionNasalLeve("S");
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia9)).setChecked(!chkSecrecionNasalLeveDia9);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia9)).setChecked(!chkSecrecionNasalLeveDia9);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 10:
                            boolean chkSecrecionNasalLeveDia10 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia10)).isChecked();
                            if (chkSecrecionNasalLeveDia10) {
                                seguimientoInfluenza.setSecrecionNasalLeve("S");
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia10)).setChecked(!chkSecrecionNasalLeveDia10);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia10)).setChecked(!chkSecrecionNasalLeveDia10);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 11:
                            boolean chkSecrecionNasalLeveDia11 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia11)).isChecked();
                            if (chkSecrecionNasalLeveDia11) {
                                seguimientoInfluenza.setSecrecionNasalLeve("S");
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia11)).setChecked(!chkSecrecionNasalLeveDia11);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia11)).setChecked(!chkSecrecionNasalLeveDia11);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 12:
                            boolean chkSecrecionNasalLeveDia12 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia12)).isChecked();
                            if (chkSecrecionNasalLeveDia12) {
                                seguimientoInfluenza.setSecrecionNasalLeve("S");
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia12)).setChecked(!chkSecrecionNasalLeveDia12);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia12)).setChecked(!chkSecrecionNasalLeveDia12);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 13:
                            boolean chkSecrecionNasalLeveDia13 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia13)).isChecked();
                            if (chkSecrecionNasalLeveDia13) {
                                seguimientoInfluenza.setSecrecionNasalLeve("S");
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia13)).setChecked(!chkSecrecionNasalLeveDia13);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia13)).setChecked(!chkSecrecionNasalLeveDia13);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 14:
                            boolean chkSecrecionNasalLeveDia14 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia14)).isChecked();
                            if (chkSecrecionNasalLeveDia14) {
                                seguimientoInfluenza.setSecrecionNasalLeve("S");
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia14)).setChecked(!chkSecrecionNasalLeveDia14);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia14)).setChecked(!chkSecrecionNasalLeveDia14);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 15:
                            boolean chkSecrecionNasalLeveDia15 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia15)).isChecked();
                            if (chkSecrecionNasalLeveDia15) {
                                seguimientoInfluenza.setSecrecionNasalLeve("S");
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia15)).setChecked(!chkSecrecionNasalLeveDia15);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia15)).setChecked(!chkSecrecionNasalLeveDia15);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 16:
                            boolean chkSecrecionNasalLeveDia16 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia16)).isChecked();
                            if (chkSecrecionNasalLeveDia16) {
                                seguimientoInfluenza.setSecrecionNasalLeve("S");
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia16)).setChecked(!chkSecrecionNasalLeveDia16);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia16)).setChecked(!chkSecrecionNasalLeveDia16);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 17:
                            boolean chkSecrecionNasalLeveDia17 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia17)).isChecked();
                            if (chkSecrecionNasalLeveDia17) {
                                seguimientoInfluenza.setSecrecionNasalLeve("S");
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia17)).setChecked(!chkSecrecionNasalLeveDia17);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia17)).setChecked(!chkSecrecionNasalLeveDia17);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 18:
                            boolean chkSecrecionNasalLeveDia18 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia18)).isChecked();
                            if (chkSecrecionNasalLeveDia18) {
                                seguimientoInfluenza.setSecrecionNasalLeve("S");
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia18)).setChecked(!chkSecrecionNasalLeveDia18);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia18)).setChecked(!chkSecrecionNasalLeveDia18);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 19:
                            boolean chkSecrecionNasalLeveDia19 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia19)).isChecked();
                            if (chkSecrecionNasalLeveDia19) {
                                seguimientoInfluenza.setSecrecionNasalLeve("S");
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia19)).setChecked(!chkSecrecionNasalLeveDia19);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia19)).setChecked(!chkSecrecionNasalLeveDia19);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 20:
                            boolean chkSecrecionNasalLeveDia20 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia20)).isChecked();
                            if (chkSecrecionNasalLeveDia20) {
                                seguimientoInfluenza.setSecrecionNasalLeve("S");
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia20)).setChecked(!chkSecrecionNasalLeveDia20);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia20)).setChecked(!chkSecrecionNasalLeveDia20);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 21:
                            boolean chkSecrecionNasalLeveDia21 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia21)).isChecked();
                            if (chkSecrecionNasalLeveDia21) {
                                seguimientoInfluenza.setSecrecionNasalLeve("S");
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia21)).setChecked(!chkSecrecionNasalLeveDia21);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia21)).setChecked(!chkSecrecionNasalLeveDia21);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 22:
                            boolean chkSecrecionNasalLeveDia22 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia22)).isChecked();
                            if (chkSecrecionNasalLeveDia22) {
                                seguimientoInfluenza.setSecrecionNasalLeve("S");
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia22)).setChecked(!chkSecrecionNasalLeveDia22);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia22)).setChecked(!chkSecrecionNasalLeveDia22);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 23:
                            boolean chkSecrecionNasalLeveDia23 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia23)).isChecked();
                            if (chkSecrecionNasalLeveDia23) {
                                seguimientoInfluenza.setSecrecionNasalLeve("S");
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia23)).setChecked(!chkSecrecionNasalLeveDia23);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia23)).setChecked(!chkSecrecionNasalLeveDia23);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 24:
                            boolean chkSecrecionNasalLeveDia24 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia24)).isChecked();
                            if (chkSecrecionNasalLeveDia24) {
                                seguimientoInfluenza.setSecrecionNasalLeve("S");
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia24)).setChecked(!chkSecrecionNasalLeveDia24);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia24)).setChecked(!chkSecrecionNasalLeveDia24);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 25:
                            boolean chkSecrecionNasalLeveDia25 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia25)).isChecked();
                            if (chkSecrecionNasalLeveDia25) {
                                seguimientoInfluenza.setSecrecionNasalLeve("S");
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia25)).setChecked(!chkSecrecionNasalLeveDia25);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia25)).setChecked(!chkSecrecionNasalLeveDia25);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 26:
                            boolean chkSecrecionNasalLeveDia26 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia26)).isChecked();
                            if (chkSecrecionNasalLeveDia26) {
                                seguimientoInfluenza.setSecrecionNasalLeve("S");
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia26)).setChecked(!chkSecrecionNasalLeveDia26);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia26)).setChecked(!chkSecrecionNasalLeveDia26);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 27:
                            boolean chkSecrecionNasalLeveDia27 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia27)).isChecked();
                            if (chkSecrecionNasalLeveDia27) {
                                seguimientoInfluenza.setSecrecionNasalLeve("S");
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia27)).setChecked(!chkSecrecionNasalLeveDia27);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia27)).setChecked(!chkSecrecionNasalLeveDia27);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 28:
                            boolean chkSecrecionNasalLeveDia28 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia28)).isChecked();
                            if (chkSecrecionNasalLeveDia28) {
                                seguimientoInfluenza.setSecrecionNasalLeve("S");
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia28)).setChecked(!chkSecrecionNasalLeveDia28);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia28)).setChecked(!chkSecrecionNasalLeveDia28);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                    }
                }
            }

            public void onChkSecrecionNasalModerada(View view) {
                SeguimientoInfluenzaDTO seguimientoInfluenza = obtenerNuevoSeguimientoPorDia(mPage);
                if (mSeguimientoInfluenzaActivity.adapter != null && seguimientoInfluenza != null) {
                    switch (mPage) {
                        case 1:
                            boolean chkSecrecionNasalModeradaDia1 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia1)).isChecked();
                            if (chkSecrecionNasalModeradaDia1) {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada("S");
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia1)).setChecked(!chkSecrecionNasalModeradaDia1);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia1)).setChecked(!chkSecrecionNasalModeradaDia1);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 2:
                            boolean chkSecrecionNasalModeradaDia2 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia2)).isChecked();
                            if (chkSecrecionNasalModeradaDia2) {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada("S");
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia2)).setChecked(!chkSecrecionNasalModeradaDia2);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia2)).setChecked(!chkSecrecionNasalModeradaDia2);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 3:
                            boolean chkSecrecionNasalModeradaDia3 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia3)).isChecked();
                            if (chkSecrecionNasalModeradaDia3) {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada("S");
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia3)).setChecked(!chkSecrecionNasalModeradaDia3);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia3)).setChecked(!chkSecrecionNasalModeradaDia3);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 4:
                            boolean chkSecrecionNasalModeradaDia4 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia4)).isChecked();
                            if (chkSecrecionNasalModeradaDia4) {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada("S");
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia4)).setChecked(!chkSecrecionNasalModeradaDia4);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia4)).setChecked(!chkSecrecionNasalModeradaDia4);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 5:
                            boolean chkSecrecionNasalModeradaDia5 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia5)).isChecked();
                            if (chkSecrecionNasalModeradaDia5) {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada("S");
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia5)).setChecked(!chkSecrecionNasalModeradaDia5);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia5)).setChecked(!chkSecrecionNasalModeradaDia5);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 6:
                            boolean chkSecrecionNasalModeradaDia6 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia6)).isChecked();
                            if (chkSecrecionNasalModeradaDia6) {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada("S");
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia6)).setChecked(!chkSecrecionNasalModeradaDia6);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia6)).setChecked(!chkSecrecionNasalModeradaDia6);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 7:
                            boolean chkSecrecionNasalModeradaDia7 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia7)).isChecked();
                            if (chkSecrecionNasalModeradaDia7) {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada("S");
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia7)).setChecked(!chkSecrecionNasalModeradaDia7);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia7)).setChecked(!chkSecrecionNasalModeradaDia7);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 8:
                            boolean chkSecrecionNasalModeradaDia8 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia8)).isChecked();
                            if (chkSecrecionNasalModeradaDia8) {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada("S");
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia8)).setChecked(!chkSecrecionNasalModeradaDia8);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia8)).setChecked(!chkSecrecionNasalModeradaDia8);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 9:
                            boolean chkSecrecionNasalModeradaDia9 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia9)).isChecked();
                            if (chkSecrecionNasalModeradaDia9) {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada("S");
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia9)).setChecked(!chkSecrecionNasalModeradaDia9);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia9)).setChecked(!chkSecrecionNasalModeradaDia9);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 10:
                            boolean chkSecrecionNasalModeradaDia10 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia10)).isChecked();
                            if (chkSecrecionNasalModeradaDia10) {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada("S");
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia10)).setChecked(!chkSecrecionNasalModeradaDia10);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia10)).setChecked(!chkSecrecionNasalModeradaDia10);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 11:
                            boolean chkSecrecionNasalModeradaDia11 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia11)).isChecked();
                            if (chkSecrecionNasalModeradaDia11) {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada("S");
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia11)).setChecked(!chkSecrecionNasalModeradaDia11);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia11)).setChecked(!chkSecrecionNasalModeradaDia11);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 12:
                            boolean chkSecrecionNasalModeradaDia12 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia12)).isChecked();
                            if (chkSecrecionNasalModeradaDia12) {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada("S");
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia12)).setChecked(!chkSecrecionNasalModeradaDia12);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia12)).setChecked(!chkSecrecionNasalModeradaDia12);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 13:
                            boolean chkSecrecionNasalModeradaDia13 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia13)).isChecked();
                            if (chkSecrecionNasalModeradaDia13) {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada("S");
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia13)).setChecked(!chkSecrecionNasalModeradaDia13);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia13)).setChecked(!chkSecrecionNasalModeradaDia13);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 14:
                            boolean chkSecrecionNasalModeradaDia14 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia14)).isChecked();
                            if (chkSecrecionNasalModeradaDia14) {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada("S");
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia14)).setChecked(!chkSecrecionNasalModeradaDia14);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia14)).setChecked(!chkSecrecionNasalModeradaDia14);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 15:
                            boolean chkSecrecionNasalModeradaDia15 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia15)).isChecked();
                            if (chkSecrecionNasalModeradaDia15) {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada("S");
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia15)).setChecked(!chkSecrecionNasalModeradaDia15);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia15)).setChecked(!chkSecrecionNasalModeradaDia15);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 16:
                            boolean chkSecrecionNasalModeradaDia16 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia16)).isChecked();
                            if (chkSecrecionNasalModeradaDia16) {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada("S");
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia16)).setChecked(!chkSecrecionNasalModeradaDia16);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia16)).setChecked(!chkSecrecionNasalModeradaDia16);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 17:
                            boolean chkSecrecionNasalModeradaDia17 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia17)).isChecked();
                            if (chkSecrecionNasalModeradaDia17) {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada("S");
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia17)).setChecked(!chkSecrecionNasalModeradaDia17);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia17)).setChecked(!chkSecrecionNasalModeradaDia17);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 18:
                            boolean chkSecrecionNasalModeradaDia18 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia18)).isChecked();
                            if (chkSecrecionNasalModeradaDia18) {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada("S");
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia18)).setChecked(!chkSecrecionNasalModeradaDia18);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia18)).setChecked(!chkSecrecionNasalModeradaDia18);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 19:
                            boolean chkSecrecionNasalModeradaDia19 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia19)).isChecked();
                            if (chkSecrecionNasalModeradaDia19) {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada("S");
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia19)).setChecked(!chkSecrecionNasalModeradaDia19);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia19)).setChecked(!chkSecrecionNasalModeradaDia19);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 20:
                            boolean chkSecrecionNasalModeradaDia20 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia20)).isChecked();
                            if (chkSecrecionNasalModeradaDia20) {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada("S");
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia20)).setChecked(!chkSecrecionNasalModeradaDia20);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia20)).setChecked(!chkSecrecionNasalModeradaDia20);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 21:
                            boolean chkSecrecionNasalModeradaDia21 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia21)).isChecked();
                            if (chkSecrecionNasalModeradaDia21) {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada("S");
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia21)).setChecked(!chkSecrecionNasalModeradaDia21);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia21)).setChecked(!chkSecrecionNasalModeradaDia21);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 22:
                            boolean chkSecrecionNasalModeradaDia22 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia22)).isChecked();
                            if (chkSecrecionNasalModeradaDia22) {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada("S");
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia22)).setChecked(!chkSecrecionNasalModeradaDia22);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia22)).setChecked(!chkSecrecionNasalModeradaDia22);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 23:
                            boolean chkSecrecionNasalModeradaDia23 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia23)).isChecked();
                            if (chkSecrecionNasalModeradaDia23) {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada("S");
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia23)).setChecked(!chkSecrecionNasalModeradaDia23);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia23)).setChecked(!chkSecrecionNasalModeradaDia23);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 24:
                            boolean chkSecrecionNasalModeradaDia24 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia24)).isChecked();
                            if (chkSecrecionNasalModeradaDia24) {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada("S");
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia24)).setChecked(!chkSecrecionNasalModeradaDia24);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia24)).setChecked(!chkSecrecionNasalModeradaDia24);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 25:
                            boolean chkSecrecionNasalModeradaDia25 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia25)).isChecked();
                            if (chkSecrecionNasalModeradaDia25) {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada("S");
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia25)).setChecked(!chkSecrecionNasalModeradaDia25);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia25)).setChecked(!chkSecrecionNasalModeradaDia25);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 26:
                            boolean chkSecrecionNasalModeradaDia26 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia26)).isChecked();
                            if (chkSecrecionNasalModeradaDia26) {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada("S");
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia26)).setChecked(!chkSecrecionNasalModeradaDia26);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia26)).setChecked(!chkSecrecionNasalModeradaDia26);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 27:
                            boolean chkSecrecionNasalModeradaDia27 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia27)).isChecked();
                            if (chkSecrecionNasalModeradaDia27) {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada("S");
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia27)).setChecked(!chkSecrecionNasalModeradaDia27);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia27)).setChecked(!chkSecrecionNasalModeradaDia27);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 28:
                            boolean chkSecrecionNasalModeradaDia28 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia28)).isChecked();
                            if (chkSecrecionNasalModeradaDia28) {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada("S");
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia28)).setChecked(!chkSecrecionNasalModeradaDia28);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia28)).setChecked(!chkSecrecionNasalModeradaDia28);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                    }
                }
            }

            public void onChkSecrecionNasalSevera(View view) {
                SeguimientoInfluenzaDTO seguimientoInfluenza = obtenerNuevoSeguimientoPorDia(mPage);
                if (mSeguimientoInfluenzaActivity.adapter != null && seguimientoInfluenza != null) {
                    switch (mPage) {
                        case 1:
                            boolean chkSecrecionNasalSeveraDia1 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia1)).isChecked();
                            if (chkSecrecionNasalSeveraDia1) {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia1)).setChecked(!chkSecrecionNasalSeveraDia1);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia1)).setChecked(!chkSecrecionNasalSeveraDia1);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 2:
                            boolean chkSecrecionNasalSeveraDia2 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia2)).isChecked();
                            if (chkSecrecionNasalSeveraDia2) {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia2)).setChecked(!chkSecrecionNasalSeveraDia2);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia2)).setChecked(!chkSecrecionNasalSeveraDia2);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 3:
                            boolean chkSecrecionNasalSeveraDia3 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia3)).isChecked();
                            if (chkSecrecionNasalSeveraDia3) {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia3)).setChecked(!chkSecrecionNasalSeveraDia3);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia3)).setChecked(!chkSecrecionNasalSeveraDia3);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 4:
                            boolean chkSecrecionNasalSeveraDia4 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia4)).isChecked();
                            if (chkSecrecionNasalSeveraDia4) {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia4)).setChecked(!chkSecrecionNasalSeveraDia4);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia4)).setChecked(!chkSecrecionNasalSeveraDia4);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 5:
                            boolean chkSecrecionNasalSeveraDia5 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia5)).isChecked();
                            if (chkSecrecionNasalSeveraDia5) {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia5)).setChecked(!chkSecrecionNasalSeveraDia5);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia5)).setChecked(!chkSecrecionNasalSeveraDia5);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 6:
                            boolean chkSecrecionNasalSeveraDia6 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia6)).isChecked();
                            if (chkSecrecionNasalSeveraDia6) {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia6)).setChecked(!chkSecrecionNasalSeveraDia6);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia6)).setChecked(!chkSecrecionNasalSeveraDia6);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 7:
                            boolean chkSecrecionNasalSeveraDia7 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia7)).isChecked();
                            if (chkSecrecionNasalSeveraDia7) {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia7)).setChecked(!chkSecrecionNasalSeveraDia7);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia7)).setChecked(!chkSecrecionNasalSeveraDia7);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 8:
                            boolean chkSecrecionNasalSeveraDia8 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia8)).isChecked();
                            if (chkSecrecionNasalSeveraDia8) {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia8)).setChecked(!chkSecrecionNasalSeveraDia8);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia8)).setChecked(!chkSecrecionNasalSeveraDia8);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 9:
                            boolean chkSecrecionNasalSeveraDia9 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia9)).isChecked();
                            if (chkSecrecionNasalSeveraDia9) {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia9)).setChecked(!chkSecrecionNasalSeveraDia9);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia9)).setChecked(!chkSecrecionNasalSeveraDia9);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 10:
                            boolean chkSecrecionNasalSeveraDia10 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia10)).isChecked();
                            if (chkSecrecionNasalSeveraDia10) {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia10)).setChecked(!chkSecrecionNasalSeveraDia10);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia10)).setChecked(!chkSecrecionNasalSeveraDia10);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 11:
                            boolean chkSecrecionNasalSeveraDia11 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia11)).isChecked();
                            if (chkSecrecionNasalSeveraDia11) {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia11)).setChecked(!chkSecrecionNasalSeveraDia11);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia11)).setChecked(!chkSecrecionNasalSeveraDia11);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 12:
                            boolean chkSecrecionNasalSeveraDia12 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia12)).isChecked();
                            if (chkSecrecionNasalSeveraDia12) {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia12)).setChecked(!chkSecrecionNasalSeveraDia12);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia12)).setChecked(!chkSecrecionNasalSeveraDia12);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 13:
                            boolean chkSecrecionNasalSeveraDia13 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia13)).isChecked();
                            if (chkSecrecionNasalSeveraDia13) {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia13)).setChecked(!chkSecrecionNasalSeveraDia13);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia13)).setChecked(!chkSecrecionNasalSeveraDia13);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 14:
                            boolean chkSecrecionNasalSeveraDia14 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia14)).isChecked();
                            if (chkSecrecionNasalSeveraDia14) {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia14)).setChecked(!chkSecrecionNasalSeveraDia14);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia14)).setChecked(!chkSecrecionNasalSeveraDia14);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 15:
                            boolean chkSecrecionNasalSeveraDia15 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia15)).isChecked();
                            if (chkSecrecionNasalSeveraDia15) {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia15)).setChecked(!chkSecrecionNasalSeveraDia15);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia15)).setChecked(!chkSecrecionNasalSeveraDia15);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 16:
                            boolean chkSecrecionNasalSeveraDia16 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia16)).isChecked();
                            if (chkSecrecionNasalSeveraDia16) {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia16)).setChecked(!chkSecrecionNasalSeveraDia16);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia16)).setChecked(!chkSecrecionNasalSeveraDia16);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 17:
                            boolean chkSecrecionNasalSeveraDia17 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia17)).isChecked();
                            if (chkSecrecionNasalSeveraDia17) {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia17)).setChecked(!chkSecrecionNasalSeveraDia17);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia17)).setChecked(!chkSecrecionNasalSeveraDia17);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 18:
                            boolean chkSecrecionNasalSeveraDia18 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia18)).isChecked();
                            if (chkSecrecionNasalSeveraDia18) {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia18)).setChecked(!chkSecrecionNasalSeveraDia18);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia18)).setChecked(!chkSecrecionNasalSeveraDia18);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 19:
                            boolean chkSecrecionNasalSeveraDia19 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia19)).isChecked();
                            if (chkSecrecionNasalSeveraDia19) {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia19)).setChecked(!chkSecrecionNasalSeveraDia19);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia19)).setChecked(!chkSecrecionNasalSeveraDia19);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 20:
                            boolean chkSecrecionNasalSeveraDia20 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia20)).isChecked();
                            if (chkSecrecionNasalSeveraDia20) {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia20)).setChecked(!chkSecrecionNasalSeveraDia20);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia20)).setChecked(!chkSecrecionNasalSeveraDia20);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 21:
                            boolean chkSecrecionNasalSeveraDia21 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia21)).isChecked();
                            if (chkSecrecionNasalSeveraDia21) {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia21)).setChecked(!chkSecrecionNasalSeveraDia21);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia21)).setChecked(!chkSecrecionNasalSeveraDia21);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 22:
                            boolean chkSecrecionNasalSeveraDia22 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia22)).isChecked();
                            if (chkSecrecionNasalSeveraDia22) {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia22)).setChecked(!chkSecrecionNasalSeveraDia22);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia22)).setChecked(!chkSecrecionNasalSeveraDia22);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 23:
                            boolean chkSecrecionNasalSeveraDia23 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia23)).isChecked();
                            if (chkSecrecionNasalSeveraDia23) {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia23)).setChecked(!chkSecrecionNasalSeveraDia23);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia23)).setChecked(!chkSecrecionNasalSeveraDia23);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 24:
                            boolean chkSecrecionNasalSeveraDia24 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia24)).isChecked();
                            if (chkSecrecionNasalSeveraDia24) {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia24)).setChecked(!chkSecrecionNasalSeveraDia24);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia24)).setChecked(!chkSecrecionNasalSeveraDia24);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 25:
                            boolean chkSecrecionNasalSeveraDia25 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia25)).isChecked();
                            if (chkSecrecionNasalSeveraDia25) {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia25)).setChecked(!chkSecrecionNasalSeveraDia25);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia25)).setChecked(!chkSecrecionNasalSeveraDia25);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 26:
                            boolean chkSecrecionNasalSeveraDia26 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia26)).isChecked();
                            if (chkSecrecionNasalSeveraDia26) {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia26)).setChecked(!chkSecrecionNasalSeveraDia26);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia26)).setChecked(!chkSecrecionNasalSeveraDia26);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 27:
                            boolean chkSecrecionNasalSeveraDia27 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia27)).isChecked();
                            if (chkSecrecionNasalSeveraDia27) {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia27)).setChecked(!chkSecrecionNasalSeveraDia27);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia27)).setChecked(!chkSecrecionNasalSeveraDia27);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                        case 28:
                            boolean chkSecrecionNasalSeveraDia28 = ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia28)).isChecked();
                            if (chkSecrecionNasalSeveraDia28) {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia28)).setChecked(!chkSecrecionNasalSeveraDia28);
                                ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia28)).setChecked(!chkSecrecionNasalSeveraDia28);
                            } else {
                                seguimientoInfluenza.setSecrecionNasalLeve(null);
                                seguimientoInfluenza.setSecrecionNasalModerada(null);
                                seguimientoInfluenza.setSecrecionNasalSevera(null);
                            }
                            break;
                    }
                }
            }

            /*---------------------------*/
            /*--------DOLOR DE GARGANTA-------------------*/
            public void onChkDolorGargantaLeve(View view) {
                SeguimientoInfluenzaDTO seguimientoInfluenza = obtenerNuevoSeguimientoPorDia(mPage);
                if (mSeguimientoInfluenzaActivity.adapter != null && seguimientoInfluenza != null) {
                    switch (mPage) {
                        case 1:
                            boolean chkDolorGargantaLeveDia1 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia1)).isChecked();
                            if (chkDolorGargantaLeveDia1) {
                                seguimientoInfluenza.setDolorGargantaLeve("S");
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia1)).setChecked(!chkDolorGargantaLeveDia1);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia1)).setChecked(!chkDolorGargantaLeveDia1);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 2:
                            boolean chkDolorGargantaLeveDia2 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia2)).isChecked();
                            if (chkDolorGargantaLeveDia2) {
                                seguimientoInfluenza.setDolorGargantaLeve("S");
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia2)).setChecked(!chkDolorGargantaLeveDia2);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia2)).setChecked(!chkDolorGargantaLeveDia2);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 3:
                            boolean chkDolorGargantaLeveDia3 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia3)).isChecked();
                            if (chkDolorGargantaLeveDia3) {
                                seguimientoInfluenza.setDolorGargantaLeve("S");
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia3)).setChecked(!chkDolorGargantaLeveDia3);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia3)).setChecked(!chkDolorGargantaLeveDia3);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 4:
                            boolean chkDolorGargantaLeveDia4 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia4)).isChecked();
                            if (chkDolorGargantaLeveDia4) {
                                seguimientoInfluenza.setDolorGargantaLeve("S");
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia4)).setChecked(!chkDolorGargantaLeveDia4);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia4)).setChecked(!chkDolorGargantaLeveDia4);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 5:
                            boolean chkDolorGargantaLeveDia5 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia5)).isChecked();
                            if (chkDolorGargantaLeveDia5) {
                                seguimientoInfluenza.setDolorGargantaLeve("S");
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia5)).setChecked(!chkDolorGargantaLeveDia5);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia5)).setChecked(!chkDolorGargantaLeveDia5);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 6:
                            boolean chkDolorGargantaLeveDia6 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia6)).isChecked();
                            if (chkDolorGargantaLeveDia6) {
                                seguimientoInfluenza.setDolorGargantaLeve("S");
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia6)).setChecked(!chkDolorGargantaLeveDia6);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia6)).setChecked(!chkDolorGargantaLeveDia6);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 7:
                            boolean chkDolorGargantaLeveDia7 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia7)).isChecked();
                            if (chkDolorGargantaLeveDia7) {
                                seguimientoInfluenza.setDolorGargantaLeve("S");
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia7)).setChecked(!chkDolorGargantaLeveDia7);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia7)).setChecked(!chkDolorGargantaLeveDia7);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 8:
                            boolean chkDolorGargantaLeveDia8 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia8)).isChecked();
                            if (chkDolorGargantaLeveDia8) {
                                seguimientoInfluenza.setDolorGargantaLeve("S");
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia8)).setChecked(!chkDolorGargantaLeveDia8);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia8)).setChecked(!chkDolorGargantaLeveDia8);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 9:
                            boolean chkDolorGargantaLeveDia9 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia9)).isChecked();
                            if (chkDolorGargantaLeveDia9) {
                                seguimientoInfluenza.setDolorGargantaLeve("S");
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia9)).setChecked(!chkDolorGargantaLeveDia9);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia9)).setChecked(!chkDolorGargantaLeveDia9);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 10:
                            boolean chkDolorGargantaLeveDia10 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia10)).isChecked();
                            if (chkDolorGargantaLeveDia10) {
                                seguimientoInfluenza.setDolorGargantaLeve("S");
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia10)).setChecked(!chkDolorGargantaLeveDia10);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia10)).setChecked(!chkDolorGargantaLeveDia10);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 11:
                            boolean chkDolorGargantaLeveDia11 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia11)).isChecked();
                            if (chkDolorGargantaLeveDia11) {
                                seguimientoInfluenza.setDolorGargantaLeve("S");
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia11)).setChecked(!chkDolorGargantaLeveDia11);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia11)).setChecked(!chkDolorGargantaLeveDia11);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 12:
                            boolean chkDolorGargantaLeveDia12 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia12)).isChecked();
                            if (chkDolorGargantaLeveDia12) {
                                seguimientoInfluenza.setDolorGargantaLeve("S");
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia12)).setChecked(!chkDolorGargantaLeveDia12);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia12)).setChecked(!chkDolorGargantaLeveDia12);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 13:
                            boolean chkDolorGargantaLeveDia13 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia13)).isChecked();
                            if (chkDolorGargantaLeveDia13) {
                                seguimientoInfluenza.setDolorGargantaLeve("S");
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia13)).setChecked(!chkDolorGargantaLeveDia13);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia13)).setChecked(!chkDolorGargantaLeveDia13);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 14:
                            boolean chkDolorGargantaLeveDia14 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia14)).isChecked();
                            if (chkDolorGargantaLeveDia14) {
                                seguimientoInfluenza.setDolorGargantaLeve("S");
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia14)).setChecked(!chkDolorGargantaLeveDia14);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia14)).setChecked(!chkDolorGargantaLeveDia14);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 15:
                            boolean chkDolorGargantaLeveDia15 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia15)).isChecked();
                            if (chkDolorGargantaLeveDia15) {
                                seguimientoInfluenza.setDolorGargantaLeve("S");
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia15)).setChecked(!chkDolorGargantaLeveDia15);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia15)).setChecked(!chkDolorGargantaLeveDia15);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 16:
                            boolean chkDolorGargantaLeveDia16 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia16)).isChecked();
                            if (chkDolorGargantaLeveDia16) {
                                seguimientoInfluenza.setDolorGargantaLeve("S");
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia16)).setChecked(!chkDolorGargantaLeveDia16);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia16)).setChecked(!chkDolorGargantaLeveDia16);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 17:
                            boolean chkDolorGargantaLeveDia17 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia17)).isChecked();
                            if (chkDolorGargantaLeveDia17) {
                                seguimientoInfluenza.setDolorGargantaLeve("S");
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia17)).setChecked(!chkDolorGargantaLeveDia17);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia17)).setChecked(!chkDolorGargantaLeveDia17);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 18:
                            boolean chkDolorGargantaLeveDia18 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia18)).isChecked();
                            if (chkDolorGargantaLeveDia18) {
                                seguimientoInfluenza.setDolorGargantaLeve("S");
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia18)).setChecked(!chkDolorGargantaLeveDia18);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia18)).setChecked(!chkDolorGargantaLeveDia18);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 19:
                            boolean chkDolorGargantaLeveDia19 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia19)).isChecked();
                            if (chkDolorGargantaLeveDia19) {
                                seguimientoInfluenza.setDolorGargantaLeve("S");
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia19)).setChecked(!chkDolorGargantaLeveDia19);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia19)).setChecked(!chkDolorGargantaLeveDia19);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 20:
                            boolean chkDolorGargantaLeveDia20 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia20)).isChecked();
                            if (chkDolorGargantaLeveDia20) {
                                seguimientoInfluenza.setDolorGargantaLeve("S");
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia20)).setChecked(!chkDolorGargantaLeveDia20);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia20)).setChecked(!chkDolorGargantaLeveDia20);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 21:
                            boolean chkDolorGargantaLeveDia21 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia21)).isChecked();
                            if (chkDolorGargantaLeveDia21) {
                                seguimientoInfluenza.setDolorGargantaLeve("S");
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia21)).setChecked(!chkDolorGargantaLeveDia21);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia21)).setChecked(!chkDolorGargantaLeveDia21);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 22:
                            boolean chkDolorGargantaLeveDia22 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia22)).isChecked();
                            if (chkDolorGargantaLeveDia22) {
                                seguimientoInfluenza.setDolorGargantaLeve("S");
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia22)).setChecked(!chkDolorGargantaLeveDia22);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia22)).setChecked(!chkDolorGargantaLeveDia22);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 23:
                            boolean chkDolorGargantaLeveDia23 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia23)).isChecked();
                            if (chkDolorGargantaLeveDia23) {
                                seguimientoInfluenza.setDolorGargantaLeve("S");
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia23)).setChecked(!chkDolorGargantaLeveDia23);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia23)).setChecked(!chkDolorGargantaLeveDia23);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 24:
                            boolean chkDolorGargantaLeveDia24 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia24)).isChecked();
                            if (chkDolorGargantaLeveDia24) {
                                seguimientoInfluenza.setDolorGargantaLeve("S");
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia24)).setChecked(!chkDolorGargantaLeveDia24);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia24)).setChecked(!chkDolorGargantaLeveDia24);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 25:
                            boolean chkDolorGargantaLeveDia25 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia25)).isChecked();
                            if (chkDolorGargantaLeveDia25) {
                                seguimientoInfluenza.setDolorGargantaLeve("S");
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia25)).setChecked(!chkDolorGargantaLeveDia25);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia25)).setChecked(!chkDolorGargantaLeveDia25);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 26:
                            boolean chkDolorGargantaLeveDia26 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia26)).isChecked();
                            if (chkDolorGargantaLeveDia26) {
                                seguimientoInfluenza.setDolorGargantaLeve("S");
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia26)).setChecked(!chkDolorGargantaLeveDia26);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia26)).setChecked(!chkDolorGargantaLeveDia26);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 27:
                            boolean chkDolorGargantaLeveDia27 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia27)).isChecked();
                            if (chkDolorGargantaLeveDia27) {
                                seguimientoInfluenza.setDolorGargantaLeve("S");
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia27)).setChecked(!chkDolorGargantaLeveDia27);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia27)).setChecked(!chkDolorGargantaLeveDia27);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 28:
                            boolean chkDolorGargantaLeveDia28 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia28)).isChecked();
                            if (chkDolorGargantaLeveDia28) {
                                seguimientoInfluenza.setDolorGargantaLeve("S");
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia28)).setChecked(!chkDolorGargantaLeveDia28);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia28)).setChecked(!chkDolorGargantaLeveDia28);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                    }
                }
            }

            public void onChkDolorGargantaModerada(View view) {
                SeguimientoInfluenzaDTO seguimientoInfluenza = obtenerNuevoSeguimientoPorDia(mPage);
                if (mSeguimientoInfluenzaActivity.adapter != null && seguimientoInfluenza != null) {
                    switch (mPage) {
                        case 1:
                            boolean chkDolorGargantaModeradaDia1 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia1)).isChecked();
                            if (chkDolorGargantaModeradaDia1) {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada("S");
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia1)).setChecked(!chkDolorGargantaModeradaDia1);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia1)).setChecked(!chkDolorGargantaModeradaDia1);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 2:
                            boolean chkDolorGargantaModeradaDia2 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia2)).isChecked();
                            if (chkDolorGargantaModeradaDia2) {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada("S");
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia2)).setChecked(!chkDolorGargantaModeradaDia2);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia2)).setChecked(!chkDolorGargantaModeradaDia2);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 3:
                            boolean chkDolorGargantaModeradaDia3 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia3)).isChecked();
                            if (chkDolorGargantaModeradaDia3) {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada("S");
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia3)).setChecked(!chkDolorGargantaModeradaDia3);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia3)).setChecked(!chkDolorGargantaModeradaDia3);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 4:
                            boolean chkDolorGargantaModeradaDia4 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia4)).isChecked();
                            if (chkDolorGargantaModeradaDia4) {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada("S");
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia4)).setChecked(!chkDolorGargantaModeradaDia4);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia4)).setChecked(!chkDolorGargantaModeradaDia4);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 5:
                            boolean chkDolorGargantaModeradaDia5 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia5)).isChecked();
                            if (chkDolorGargantaModeradaDia5) {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada("S");
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia5)).setChecked(!chkDolorGargantaModeradaDia5);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia5)).setChecked(!chkDolorGargantaModeradaDia5);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 6:
                            boolean chkDolorGargantaModeradaDia6 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia6)).isChecked();
                            if (chkDolorGargantaModeradaDia6) {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada("S");
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia6)).setChecked(!chkDolorGargantaModeradaDia6);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia6)).setChecked(!chkDolorGargantaModeradaDia6);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 7:
                            boolean chkDolorGargantaModeradaDia7 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia7)).isChecked();
                            if (chkDolorGargantaModeradaDia7) {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada("S");
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia7)).setChecked(!chkDolorGargantaModeradaDia7);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia7)).setChecked(!chkDolorGargantaModeradaDia7);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 8:
                            boolean chkDolorGargantaModeradaDia8 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia8)).isChecked();
                            if (chkDolorGargantaModeradaDia8) {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada("S");
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia8)).setChecked(!chkDolorGargantaModeradaDia8);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia8)).setChecked(!chkDolorGargantaModeradaDia8);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 9:
                            boolean chkDolorGargantaModeradaDia9 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia9)).isChecked();
                            if (chkDolorGargantaModeradaDia9) {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada("S");
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia9)).setChecked(!chkDolorGargantaModeradaDia9);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia9)).setChecked(!chkDolorGargantaModeradaDia9);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 10:
                            boolean chkDolorGargantaModeradaDia10 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia10)).isChecked();
                            if (chkDolorGargantaModeradaDia10) {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada("S");
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia10)).setChecked(!chkDolorGargantaModeradaDia10);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia10)).setChecked(!chkDolorGargantaModeradaDia10);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 11:
                            boolean chkDolorGargantaModeradaDia11 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia11)).isChecked();
                            if (chkDolorGargantaModeradaDia11) {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada("S");
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia11)).setChecked(!chkDolorGargantaModeradaDia11);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia11)).setChecked(!chkDolorGargantaModeradaDia11);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 12:
                            boolean chkDolorGargantaModeradaDia12 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia12)).isChecked();
                            if (chkDolorGargantaModeradaDia12) {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada("S");
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia12)).setChecked(!chkDolorGargantaModeradaDia12);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia12)).setChecked(!chkDolorGargantaModeradaDia12);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 13:
                            boolean chkDolorGargantaModeradaDia13 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia13)).isChecked();
                            if (chkDolorGargantaModeradaDia13) {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada("S");
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia13)).setChecked(!chkDolorGargantaModeradaDia13);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia13)).setChecked(!chkDolorGargantaModeradaDia13);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 14:
                            boolean chkDolorGargantaModeradaDia14 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia14)).isChecked();
                            if (chkDolorGargantaModeradaDia14) {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada("S");
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia14)).setChecked(!chkDolorGargantaModeradaDia14);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia14)).setChecked(!chkDolorGargantaModeradaDia14);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 15:
                            boolean chkDolorGargantaModeradaDia15 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia15)).isChecked();
                            if (chkDolorGargantaModeradaDia15) {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada("S");
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia15)).setChecked(!chkDolorGargantaModeradaDia15);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia15)).setChecked(!chkDolorGargantaModeradaDia15);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 16:
                            boolean chkDolorGargantaModeradaDia16 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia16)).isChecked();
                            if (chkDolorGargantaModeradaDia16) {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada("S");
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia16)).setChecked(!chkDolorGargantaModeradaDia16);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia16)).setChecked(!chkDolorGargantaModeradaDia16);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 17:
                            boolean chkDolorGargantaModeradaDia17 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia17)).isChecked();
                            if (chkDolorGargantaModeradaDia17) {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada("S");
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia17)).setChecked(!chkDolorGargantaModeradaDia17);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia17)).setChecked(!chkDolorGargantaModeradaDia17);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 18:
                            boolean chkDolorGargantaModeradaDia18 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia18)).isChecked();
                            if (chkDolorGargantaModeradaDia18) {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada("S");
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia18)).setChecked(!chkDolorGargantaModeradaDia18);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia18)).setChecked(!chkDolorGargantaModeradaDia18);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 19:
                            boolean chkDolorGargantaModeradaDia19 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia19)).isChecked();
                            if (chkDolorGargantaModeradaDia19) {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada("S");
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia19)).setChecked(!chkDolorGargantaModeradaDia19);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia19)).setChecked(!chkDolorGargantaModeradaDia19);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 20:
                            boolean chkDolorGargantaModeradaDia20 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia20)).isChecked();
                            if (chkDolorGargantaModeradaDia20) {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada("S");
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia20)).setChecked(!chkDolorGargantaModeradaDia20);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia20)).setChecked(!chkDolorGargantaModeradaDia20);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 21:
                            boolean chkDolorGargantaModeradaDia21 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia21)).isChecked();
                            if (chkDolorGargantaModeradaDia21) {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada("S");
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia21)).setChecked(!chkDolorGargantaModeradaDia21);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia21)).setChecked(!chkDolorGargantaModeradaDia21);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 22:
                            boolean chkDolorGargantaModeradaDia22 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia22)).isChecked();
                            if (chkDolorGargantaModeradaDia22) {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada("S");
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia22)).setChecked(!chkDolorGargantaModeradaDia22);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia22)).setChecked(!chkDolorGargantaModeradaDia22);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 23:
                            boolean chkDolorGargantaModeradaDia23 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia23)).isChecked();
                            if (chkDolorGargantaModeradaDia23) {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada("S");
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia23)).setChecked(!chkDolorGargantaModeradaDia23);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia23)).setChecked(!chkDolorGargantaModeradaDia23);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 24:
                            boolean chkDolorGargantaModeradaDia24 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia24)).isChecked();
                            if (chkDolorGargantaModeradaDia24) {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada("S");
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia24)).setChecked(!chkDolorGargantaModeradaDia24);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia24)).setChecked(!chkDolorGargantaModeradaDia24);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 25:
                            boolean chkDolorGargantaModeradaDia25 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia25)).isChecked();
                            if (chkDolorGargantaModeradaDia25) {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada("S");
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia25)).setChecked(!chkDolorGargantaModeradaDia25);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia25)).setChecked(!chkDolorGargantaModeradaDia25);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 26:
                            boolean chkDolorGargantaModeradaDia26 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia26)).isChecked();
                            if (chkDolorGargantaModeradaDia26) {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada("S");
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia26)).setChecked(!chkDolorGargantaModeradaDia26);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia26)).setChecked(!chkDolorGargantaModeradaDia26);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 27:
                            boolean chkDolorGargantaModeradaDia27 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia27)).isChecked();
                            if (chkDolorGargantaModeradaDia27) {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada("S");
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia27)).setChecked(!chkDolorGargantaModeradaDia27);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia27)).setChecked(!chkDolorGargantaModeradaDia27);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 28:
                            boolean chkDolorGargantaModeradaDia28 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia28)).isChecked();
                            if (chkDolorGargantaModeradaDia28) {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada("S");
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia28)).setChecked(!chkDolorGargantaModeradaDia28);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia28)).setChecked(!chkDolorGargantaModeradaDia28);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                    }
                }
            }

            public void onChkDolorGargantaSevera(View view) {
                SeguimientoInfluenzaDTO seguimientoInfluenza = obtenerNuevoSeguimientoPorDia(mPage);
                if (mSeguimientoInfluenzaActivity.adapter != null && seguimientoInfluenza != null) {
                    switch (mPage) {
                        case 1:
                            boolean chkDolorGargantaSeveraDia1 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia1)).isChecked();
                            if (chkDolorGargantaSeveraDia1) {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia1)).setChecked(!chkDolorGargantaSeveraDia1);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia1)).setChecked(!chkDolorGargantaSeveraDia1);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 2:
                            boolean chkDolorGargantaSeveraDia2 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia2)).isChecked();
                            if (chkDolorGargantaSeveraDia2) {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia2)).setChecked(!chkDolorGargantaSeveraDia2);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia2)).setChecked(!chkDolorGargantaSeveraDia2);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 3:
                            boolean chkDolorGargantaSeveraDia3 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia3)).isChecked();
                            if (chkDolorGargantaSeveraDia3) {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia3)).setChecked(!chkDolorGargantaSeveraDia3);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia3)).setChecked(!chkDolorGargantaSeveraDia3);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 4:
                            boolean chkDolorGargantaSeveraDia4 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia4)).isChecked();
                            if (chkDolorGargantaSeveraDia4) {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia4)).setChecked(!chkDolorGargantaSeveraDia4);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia4)).setChecked(!chkDolorGargantaSeveraDia4);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 5:
                            boolean chkDolorGargantaSeveraDia5 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia5)).isChecked();
                            if (chkDolorGargantaSeveraDia5) {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia5)).setChecked(!chkDolorGargantaSeveraDia5);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia5)).setChecked(!chkDolorGargantaSeveraDia5);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 6:
                            boolean chkDolorGargantaSeveraDia6 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia6)).isChecked();
                            if (chkDolorGargantaSeveraDia6) {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia6)).setChecked(!chkDolorGargantaSeveraDia6);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia6)).setChecked(!chkDolorGargantaSeveraDia6);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 7:
                            boolean chkDolorGargantaSeveraDia7 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia7)).isChecked();
                            if (chkDolorGargantaSeveraDia7) {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia7)).setChecked(!chkDolorGargantaSeveraDia7);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia7)).setChecked(!chkDolorGargantaSeveraDia7);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 8:
                            boolean chkDolorGargantaSeveraDia8 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia8)).isChecked();
                            if (chkDolorGargantaSeveraDia8) {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia8)).setChecked(!chkDolorGargantaSeveraDia8);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia8)).setChecked(!chkDolorGargantaSeveraDia8);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 9:
                            boolean chkDolorGargantaSeveraDia9 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia9)).isChecked();
                            if (chkDolorGargantaSeveraDia9) {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia9)).setChecked(!chkDolorGargantaSeveraDia9);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia9)).setChecked(!chkDolorGargantaSeveraDia9);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 10:
                            boolean chkDolorGargantaSeveraDia10 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia10)).isChecked();
                            if (chkDolorGargantaSeveraDia10) {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia10)).setChecked(!chkDolorGargantaSeveraDia10);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia10)).setChecked(!chkDolorGargantaSeveraDia10);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 11:
                            boolean chkDolorGargantaSeveraDia11 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia11)).isChecked();
                            if (chkDolorGargantaSeveraDia11) {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia11)).setChecked(!chkDolorGargantaSeveraDia11);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia11)).setChecked(!chkDolorGargantaSeveraDia11);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 12:
                            boolean chkDolorGargantaSeveraDia12 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia12)).isChecked();
                            if (chkDolorGargantaSeveraDia12) {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia12)).setChecked(!chkDolorGargantaSeveraDia12);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia12)).setChecked(!chkDolorGargantaSeveraDia12);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 13:
                            boolean chkDolorGargantaSeveraDia13 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia13)).isChecked();
                            if (chkDolorGargantaSeveraDia13) {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia13)).setChecked(!chkDolorGargantaSeveraDia13);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia13)).setChecked(!chkDolorGargantaSeveraDia13);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 14:
                            boolean chkDolorGargantaSeveraDia14 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia14)).isChecked();
                            if (chkDolorGargantaSeveraDia14) {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia14)).setChecked(!chkDolorGargantaSeveraDia14);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia14)).setChecked(!chkDolorGargantaSeveraDia14);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 15:
                            boolean chkDolorGargantaSeveraDia15 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia15)).isChecked();
                            if (chkDolorGargantaSeveraDia15) {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia15)).setChecked(!chkDolorGargantaSeveraDia15);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia15)).setChecked(!chkDolorGargantaSeveraDia15);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 16:
                            boolean chkDolorGargantaSeveraDia16 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia16)).isChecked();
                            if (chkDolorGargantaSeveraDia16) {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia16)).setChecked(!chkDolorGargantaSeveraDia16);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia16)).setChecked(!chkDolorGargantaSeveraDia16);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 17:
                            boolean chkDolorGargantaSeveraDia17 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia17)).isChecked();
                            if (chkDolorGargantaSeveraDia17) {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia17)).setChecked(!chkDolorGargantaSeveraDia17);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia17)).setChecked(!chkDolorGargantaSeveraDia17);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 18:
                            boolean chkDolorGargantaSeveraDia18 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia18)).isChecked();
                            if (chkDolorGargantaSeveraDia18) {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia18)).setChecked(!chkDolorGargantaSeveraDia18);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia18)).setChecked(!chkDolorGargantaSeveraDia18);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 19:
                            boolean chkDolorGargantaSeveraDia19 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia19)).isChecked();
                            if (chkDolorGargantaSeveraDia19) {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia19)).setChecked(!chkDolorGargantaSeveraDia19);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia19)).setChecked(!chkDolorGargantaSeveraDia19);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 20:
                            boolean chkDolorGargantaSeveraDia20 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia20)).isChecked();
                            if (chkDolorGargantaSeveraDia20) {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia20)).setChecked(!chkDolorGargantaSeveraDia20);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia20)).setChecked(!chkDolorGargantaSeveraDia20);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 21:
                            boolean chkDolorGargantaSeveraDia21 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia21)).isChecked();
                            if (chkDolorGargantaSeveraDia21) {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia21)).setChecked(!chkDolorGargantaSeveraDia21);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia21)).setChecked(!chkDolorGargantaSeveraDia21);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 22:
                            boolean chkDolorGargantaSeveraDia22 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia22)).isChecked();
                            if (chkDolorGargantaSeveraDia22) {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia22)).setChecked(!chkDolorGargantaSeveraDia22);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia22)).setChecked(!chkDolorGargantaSeveraDia22);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 23:
                            boolean chkDolorGargantaSeveraDia23 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia23)).isChecked();
                            if (chkDolorGargantaSeveraDia23) {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia23)).setChecked(!chkDolorGargantaSeveraDia23);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia23)).setChecked(!chkDolorGargantaSeveraDia23);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 24:
                            boolean chkDolorGargantaSeveraDia24 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia24)).isChecked();
                            if (chkDolorGargantaSeveraDia24) {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia24)).setChecked(!chkDolorGargantaSeveraDia24);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia24)).setChecked(!chkDolorGargantaSeveraDia24);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 25:
                            boolean chkDolorGargantaSeveraDia25 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia25)).isChecked();
                            if (chkDolorGargantaSeveraDia25) {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia25)).setChecked(!chkDolorGargantaSeveraDia25);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia25)).setChecked(!chkDolorGargantaSeveraDia25);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 26:
                            boolean chkDolorGargantaSeveraDia26 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia26)).isChecked();
                            if (chkDolorGargantaSeveraDia26) {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia26)).setChecked(!chkDolorGargantaSeveraDia26);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia26)).setChecked(!chkDolorGargantaSeveraDia26);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 27:
                            boolean chkDolorGargantaSeveraDia27 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia27)).isChecked();
                            if (chkDolorGargantaSeveraDia27) {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia27)).setChecked(!chkDolorGargantaSeveraDia27);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia27)).setChecked(!chkDolorGargantaSeveraDia27);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                        case 28:
                            boolean chkDolorGargantaSeveraDia28 = ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia28)).isChecked();
                            if (chkDolorGargantaSeveraDia28) {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia28)).setChecked(!chkDolorGargantaSeveraDia28);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia28)).setChecked(!chkDolorGargantaSeveraDia28);
                            } else {
                                seguimientoInfluenza.setDolorGargantaLeve(null);
                                seguimientoInfluenza.setDolorGargantaModerada(null);
                                seguimientoInfluenza.setDolorGargantaSevera(null);
                            }
                            break;
                    }
                }
            }

            /*---------------------------*/
            /*--------DOLOR DE CABEZA-------------------*/
            public void onChkDolorCabezaLeve(View view) {
                SeguimientoInfluenzaDTO seguimientoInfluenza = obtenerNuevoSeguimientoPorDia(mPage);
                if (mSeguimientoInfluenzaActivity.adapter != null && seguimientoInfluenza != null) {
                    switch (mPage) {
                        case 1:
                            boolean chkDolorCabezaLeveDia1 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia1)).isChecked();
                            if (chkDolorCabezaLeveDia1) {
                                seguimientoInfluenza.setDolorCabezaLeve("S");
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia1)).setChecked(!chkDolorCabezaLeveDia1);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia1)).setChecked(!chkDolorCabezaLeveDia1);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 2:
                            boolean chkDolorCabezaLeveDia2 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia2)).isChecked();
                            if (chkDolorCabezaLeveDia2) {
                                seguimientoInfluenza.setDolorCabezaLeve("S");
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia2)).setChecked(!chkDolorCabezaLeveDia2);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia2)).setChecked(!chkDolorCabezaLeveDia2);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 3:
                            boolean chkDolorCabezaLeveDia3 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia3)).isChecked();
                            if (chkDolorCabezaLeveDia3) {
                                seguimientoInfluenza.setDolorCabezaLeve("S");
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia3)).setChecked(!chkDolorCabezaLeveDia3);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia3)).setChecked(!chkDolorCabezaLeveDia3);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 4:
                            boolean chkDolorCabezaLeveDia4 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia4)).isChecked();
                            if (chkDolorCabezaLeveDia4) {
                                seguimientoInfluenza.setDolorCabezaLeve("S");
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia4)).setChecked(!chkDolorCabezaLeveDia4);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia4)).setChecked(!chkDolorCabezaLeveDia4);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 5:
                            boolean chkDolorCabezaLeveDia5 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia5)).isChecked();
                            if (chkDolorCabezaLeveDia5) {
                                seguimientoInfluenza.setDolorCabezaLeve("S");
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia5)).setChecked(!chkDolorCabezaLeveDia5);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia5)).setChecked(!chkDolorCabezaLeveDia5);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 6:
                            boolean chkDolorCabezaLeveDia6 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia6)).isChecked();
                            if (chkDolorCabezaLeveDia6) {
                                seguimientoInfluenza.setDolorCabezaLeve("S");
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia6)).setChecked(!chkDolorCabezaLeveDia6);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia6)).setChecked(!chkDolorCabezaLeveDia6);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 7:
                            boolean chkDolorCabezaLeveDia7 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia7)).isChecked();
                            if (chkDolorCabezaLeveDia7) {
                                seguimientoInfluenza.setDolorCabezaLeve("S");
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia7)).setChecked(!chkDolorCabezaLeveDia7);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia7)).setChecked(!chkDolorCabezaLeveDia7);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 8:
                            boolean chkDolorCabezaLeveDia8 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia8)).isChecked();
                            if (chkDolorCabezaLeveDia8) {
                                seguimientoInfluenza.setDolorCabezaLeve("S");
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia8)).setChecked(!chkDolorCabezaLeveDia8);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia8)).setChecked(!chkDolorCabezaLeveDia8);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 9:
                            boolean chkDolorCabezaLeveDia9 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia9)).isChecked();
                            if (chkDolorCabezaLeveDia9) {
                                seguimientoInfluenza.setDolorCabezaLeve("S");
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia9)).setChecked(!chkDolorCabezaLeveDia9);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia9)).setChecked(!chkDolorCabezaLeveDia9);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 10:
                            boolean chkDolorCabezaLeveDia10 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia10)).isChecked();
                            if (chkDolorCabezaLeveDia10) {
                                seguimientoInfluenza.setDolorCabezaLeve("S");
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia10)).setChecked(!chkDolorCabezaLeveDia10);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia10)).setChecked(!chkDolorCabezaLeveDia10);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 11:
                            boolean chkDolorCabezaLeveDia11 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia11)).isChecked();
                            if (chkDolorCabezaLeveDia11) {
                                seguimientoInfluenza.setDolorCabezaLeve("S");
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia11)).setChecked(!chkDolorCabezaLeveDia11);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia11)).setChecked(!chkDolorCabezaLeveDia11);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 12:
                            boolean chkDolorCabezaLeveDia12 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia12)).isChecked();
                            if (chkDolorCabezaLeveDia12) {
                                seguimientoInfluenza.setDolorCabezaLeve("S");
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia12)).setChecked(!chkDolorCabezaLeveDia12);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia12)).setChecked(!chkDolorCabezaLeveDia12);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 13:
                            boolean chkDolorCabezaLeveDia13 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia13)).isChecked();
                            if (chkDolorCabezaLeveDia13) {
                                seguimientoInfluenza.setDolorCabezaLeve("S");
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia13)).setChecked(!chkDolorCabezaLeveDia13);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia13)).setChecked(!chkDolorCabezaLeveDia13);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 14:
                            boolean chkDolorCabezaLeveDia14 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia14)).isChecked();
                            if (chkDolorCabezaLeveDia14) {
                                seguimientoInfluenza.setDolorCabezaLeve("S");
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia14)).setChecked(!chkDolorCabezaLeveDia14);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia14)).setChecked(!chkDolorCabezaLeveDia14);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 15:
                            boolean chkDolorCabezaLeveDia15 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia15)).isChecked();
                            if (chkDolorCabezaLeveDia15) {
                                seguimientoInfluenza.setDolorCabezaLeve("S");
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia15)).setChecked(!chkDolorCabezaLeveDia15);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia15)).setChecked(!chkDolorCabezaLeveDia15);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 16:
                            boolean chkDolorCabezaLeveDia16 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia16)).isChecked();
                            if (chkDolorCabezaLeveDia16) {
                                seguimientoInfluenza.setDolorCabezaLeve("S");
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia16)).setChecked(!chkDolorCabezaLeveDia16);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia16)).setChecked(!chkDolorCabezaLeveDia16);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 17:
                            boolean chkDolorCabezaLeveDia17 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia17)).isChecked();
                            if (chkDolorCabezaLeveDia17) {
                                seguimientoInfluenza.setDolorCabezaLeve("S");
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia17)).setChecked(!chkDolorCabezaLeveDia17);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia17)).setChecked(!chkDolorCabezaLeveDia17);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 18:
                            boolean chkDolorCabezaLeveDia18 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia18)).isChecked();
                            if (chkDolorCabezaLeveDia18) {
                                seguimientoInfluenza.setDolorCabezaLeve("S");
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia18)).setChecked(!chkDolorCabezaLeveDia18);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia18)).setChecked(!chkDolorCabezaLeveDia18);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 19:
                            boolean chkDolorCabezaLeveDia19 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia19)).isChecked();
                            if (chkDolorCabezaLeveDia19) {
                                seguimientoInfluenza.setDolorCabezaLeve("S");
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia19)).setChecked(!chkDolorCabezaLeveDia19);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia19)).setChecked(!chkDolorCabezaLeveDia19);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 20:
                            boolean chkDolorCabezaLeveDia20 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia20)).isChecked();
                            if (chkDolorCabezaLeveDia20) {
                                seguimientoInfluenza.setDolorCabezaLeve("S");
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia20)).setChecked(!chkDolorCabezaLeveDia20);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia20)).setChecked(!chkDolorCabezaLeveDia20);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 21:
                            boolean chkDolorCabezaLeveDia21 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia21)).isChecked();
                            if (chkDolorCabezaLeveDia21) {
                                seguimientoInfluenza.setDolorCabezaLeve("S");
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia21)).setChecked(!chkDolorCabezaLeveDia21);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia21)).setChecked(!chkDolorCabezaLeveDia21);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 22:
                            boolean chkDolorCabezaLeveDia22 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia22)).isChecked();
                            if (chkDolorCabezaLeveDia22) {
                                seguimientoInfluenza.setDolorCabezaLeve("S");
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia22)).setChecked(!chkDolorCabezaLeveDia22);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia22)).setChecked(!chkDolorCabezaLeveDia22);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 23:
                            boolean chkDolorCabezaLeveDia23 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia23)).isChecked();
                            if (chkDolorCabezaLeveDia23) {
                                seguimientoInfluenza.setDolorCabezaLeve("S");
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia23)).setChecked(!chkDolorCabezaLeveDia23);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia23)).setChecked(!chkDolorCabezaLeveDia23);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 24:
                            boolean chkDolorCabezaLeveDia24 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia24)).isChecked();
                            if (chkDolorCabezaLeveDia24) {
                                seguimientoInfluenza.setDolorCabezaLeve("S");
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia24)).setChecked(!chkDolorCabezaLeveDia24);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia24)).setChecked(!chkDolorCabezaLeveDia24);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 25:
                            boolean chkDolorCabezaLeveDia25 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia25)).isChecked();
                            if (chkDolorCabezaLeveDia25) {
                                seguimientoInfluenza.setDolorCabezaLeve("S");
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia25)).setChecked(!chkDolorCabezaLeveDia25);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia25)).setChecked(!chkDolorCabezaLeveDia25);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 26:
                            boolean chkDolorCabezaLeveDia26 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia26)).isChecked();
                            if (chkDolorCabezaLeveDia26) {
                                seguimientoInfluenza.setDolorCabezaLeve("S");
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia26)).setChecked(!chkDolorCabezaLeveDia26);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia26)).setChecked(!chkDolorCabezaLeveDia26);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 27:
                            boolean chkDolorCabezaLeveDia27 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia27)).isChecked();
                            if (chkDolorCabezaLeveDia27) {
                                seguimientoInfluenza.setDolorCabezaLeve("S");
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia27)).setChecked(!chkDolorCabezaLeveDia27);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia27)).setChecked(!chkDolorCabezaLeveDia27);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 28:
                            boolean chkDolorCabezaLeveDia28 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia28)).isChecked();
                            if (chkDolorCabezaLeveDia28) {
                                seguimientoInfluenza.setDolorCabezaLeve("S");
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia28)).setChecked(!chkDolorCabezaLeveDia28);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia28)).setChecked(!chkDolorCabezaLeveDia28);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                    }
                }
            }

            public void onChkDolorCabezaModerada(View view) {
                SeguimientoInfluenzaDTO seguimientoInfluenza = obtenerNuevoSeguimientoPorDia(mPage);
                if (mSeguimientoInfluenzaActivity.adapter != null && seguimientoInfluenza != null) {
                    switch (mPage) {
                        case 1:
                            boolean chkDolorCabezaModeradaDia1 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia1)).isChecked();
                            if (chkDolorCabezaModeradaDia1) {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada("S");
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia1)).setChecked(!chkDolorCabezaModeradaDia1);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia1)).setChecked(!chkDolorCabezaModeradaDia1);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 2:
                            boolean chkDolorCabezaModeradaDia2 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia2)).isChecked();
                            if (chkDolorCabezaModeradaDia2) {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada("S");
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia2)).setChecked(!chkDolorCabezaModeradaDia2);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia2)).setChecked(!chkDolorCabezaModeradaDia2);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 3:
                            boolean chkDolorCabezaModeradaDia3 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia3)).isChecked();
                            if (chkDolorCabezaModeradaDia3) {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada("S");
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia3)).setChecked(!chkDolorCabezaModeradaDia3);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia3)).setChecked(!chkDolorCabezaModeradaDia3);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 4:
                            boolean chkDolorCabezaModeradaDia4 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia4)).isChecked();
                            if (chkDolorCabezaModeradaDia4) {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada("S");
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia4)).setChecked(!chkDolorCabezaModeradaDia4);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia4)).setChecked(!chkDolorCabezaModeradaDia4);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 5:
                            boolean chkDolorCabezaModeradaDia5 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia5)).isChecked();
                            if (chkDolorCabezaModeradaDia5) {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada("S");
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia5)).setChecked(!chkDolorCabezaModeradaDia5);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia5)).setChecked(!chkDolorCabezaModeradaDia5);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 6:
                            boolean chkDolorCabezaModeradaDia6 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia6)).isChecked();
                            if (chkDolorCabezaModeradaDia6) {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada("S");
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia6)).setChecked(!chkDolorCabezaModeradaDia6);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia6)).setChecked(!chkDolorCabezaModeradaDia6);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 7:
                            boolean chkDolorCabezaModeradaDia7 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia7)).isChecked();
                            if (chkDolorCabezaModeradaDia7) {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada("S");
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia7)).setChecked(!chkDolorCabezaModeradaDia7);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia7)).setChecked(!chkDolorCabezaModeradaDia7);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 8:
                            boolean chkDolorCabezaModeradaDia8 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia8)).isChecked();
                            if (chkDolorCabezaModeradaDia8) {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada("S");
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia8)).setChecked(!chkDolorCabezaModeradaDia8);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia8)).setChecked(!chkDolorCabezaModeradaDia8);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 9:
                            boolean chkDolorCabezaModeradaDia9 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia9)).isChecked();
                            if (chkDolorCabezaModeradaDia9) {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada("S");
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia9)).setChecked(!chkDolorCabezaModeradaDia9);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia9)).setChecked(!chkDolorCabezaModeradaDia9);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 10:
                            boolean chkDolorCabezaModeradaDia10 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia10)).isChecked();
                            if (chkDolorCabezaModeradaDia10) {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada("S");
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia10)).setChecked(!chkDolorCabezaModeradaDia10);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia10)).setChecked(!chkDolorCabezaModeradaDia10);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 11:
                            boolean chkDolorCabezaModeradaDia11 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia11)).isChecked();
                            if (chkDolorCabezaModeradaDia11) {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada("S");
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia11)).setChecked(!chkDolorCabezaModeradaDia11);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia11)).setChecked(!chkDolorCabezaModeradaDia11);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 12:
                            boolean chkDolorCabezaModeradaDia12 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia12)).isChecked();
                            if (chkDolorCabezaModeradaDia12) {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada("S");
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia12)).setChecked(!chkDolorCabezaModeradaDia12);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia12)).setChecked(!chkDolorCabezaModeradaDia12);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 13:
                            boolean chkDolorCabezaModeradaDia13 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia13)).isChecked();
                            if (chkDolorCabezaModeradaDia13) {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada("S");
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia13)).setChecked(!chkDolorCabezaModeradaDia13);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia13)).setChecked(!chkDolorCabezaModeradaDia13);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 14:
                            boolean chkDolorCabezaModeradaDia14 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia14)).isChecked();
                            if (chkDolorCabezaModeradaDia14) {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada("S");
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia14)).setChecked(!chkDolorCabezaModeradaDia14);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia14)).setChecked(!chkDolorCabezaModeradaDia14);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 15:
                            boolean chkDolorCabezaModeradaDia15 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia15)).isChecked();
                            if (chkDolorCabezaModeradaDia15) {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada("S");
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia15)).setChecked(!chkDolorCabezaModeradaDia15);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia15)).setChecked(!chkDolorCabezaModeradaDia15);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 16:
                            boolean chkDolorCabezaModeradaDia16 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia16)).isChecked();
                            if (chkDolorCabezaModeradaDia16) {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada("S");
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia16)).setChecked(!chkDolorCabezaModeradaDia16);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia16)).setChecked(!chkDolorCabezaModeradaDia16);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 17:
                            boolean chkDolorCabezaModeradaDia17 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia17)).isChecked();
                            if (chkDolorCabezaModeradaDia17) {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada("S");
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia17)).setChecked(!chkDolorCabezaModeradaDia17);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia17)).setChecked(!chkDolorCabezaModeradaDia17);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 18:
                            boolean chkDolorCabezaModeradaDia18 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia18)).isChecked();
                            if (chkDolorCabezaModeradaDia18) {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada("S");
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia18)).setChecked(!chkDolorCabezaModeradaDia18);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia18)).setChecked(!chkDolorCabezaModeradaDia18);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 19:
                            boolean chkDolorCabezaModeradaDia19 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia19)).isChecked();
                            if (chkDolorCabezaModeradaDia19) {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada("S");
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia19)).setChecked(!chkDolorCabezaModeradaDia19);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia19)).setChecked(!chkDolorCabezaModeradaDia19);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 20:
                            boolean chkDolorCabezaModeradaDia20 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia20)).isChecked();
                            if (chkDolorCabezaModeradaDia20) {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada("S");
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia20)).setChecked(!chkDolorCabezaModeradaDia20);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia20)).setChecked(!chkDolorCabezaModeradaDia20);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 21:
                            boolean chkDolorCabezaModeradaDia21 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia21)).isChecked();
                            if (chkDolorCabezaModeradaDia21) {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada("S");
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia21)).setChecked(!chkDolorCabezaModeradaDia21);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia21)).setChecked(!chkDolorCabezaModeradaDia21);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 22:
                            boolean chkDolorCabezaModeradaDia22 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia22)).isChecked();
                            if (chkDolorCabezaModeradaDia22) {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada("S");
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia22)).setChecked(!chkDolorCabezaModeradaDia22);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia22)).setChecked(!chkDolorCabezaModeradaDia22);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 23:
                            boolean chkDolorCabezaModeradaDia23 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia23)).isChecked();
                            if (chkDolorCabezaModeradaDia23) {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada("S");
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia23)).setChecked(!chkDolorCabezaModeradaDia23);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia23)).setChecked(!chkDolorCabezaModeradaDia23);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 24:
                            boolean chkDolorCabezaModeradaDia24 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia24)).isChecked();
                            if (chkDolorCabezaModeradaDia24) {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada("S");
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia24)).setChecked(!chkDolorCabezaModeradaDia24);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia24)).setChecked(!chkDolorCabezaModeradaDia24);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 25:
                            boolean chkDolorCabezaModeradaDia25 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia25)).isChecked();
                            if (chkDolorCabezaModeradaDia25) {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada("S");
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia25)).setChecked(!chkDolorCabezaModeradaDia25);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia25)).setChecked(!chkDolorCabezaModeradaDia25);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 26:
                            boolean chkDolorCabezaModeradaDia26 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia26)).isChecked();
                            if (chkDolorCabezaModeradaDia26) {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada("S");
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia26)).setChecked(!chkDolorCabezaModeradaDia26);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia26)).setChecked(!chkDolorCabezaModeradaDia26);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 27:
                            boolean chkDolorCabezaModeradaDia27 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia27)).isChecked();
                            if (chkDolorCabezaModeradaDia27) {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada("S");
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia27)).setChecked(!chkDolorCabezaModeradaDia27);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia27)).setChecked(!chkDolorCabezaModeradaDia27);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 28:
                            boolean chkDolorCabezaModeradaDia28 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia28)).isChecked();
                            if (chkDolorCabezaModeradaDia28) {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada("S");
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia28)).setChecked(!chkDolorCabezaModeradaDia28);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia28)).setChecked(!chkDolorCabezaModeradaDia28);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                    }
                }
            }

            public void onChkDolorCabezaSevera(View view) {
                SeguimientoInfluenzaDTO seguimientoInfluenza = obtenerNuevoSeguimientoPorDia(mPage);
                if (mSeguimientoInfluenzaActivity.adapter != null && seguimientoInfluenza != null) {
                    switch (mPage) {
                        case 1:
                            boolean chkDolorCabezaSeveraDia1 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia1)).isChecked();
                            if (chkDolorCabezaSeveraDia1) {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia1)).setChecked(!chkDolorCabezaSeveraDia1);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia1)).setChecked(!chkDolorCabezaSeveraDia1);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 2:
                            boolean chkDolorCabezaSeveraDia2 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia2)).isChecked();
                            if (chkDolorCabezaSeveraDia2) {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia2)).setChecked(!chkDolorCabezaSeveraDia2);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia2)).setChecked(!chkDolorCabezaSeveraDia2);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 3:
                            boolean chkDolorCabezaSeveraDia3 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia3)).isChecked();
                            if (chkDolorCabezaSeveraDia3) {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia3)).setChecked(!chkDolorCabezaSeveraDia3);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia3)).setChecked(!chkDolorCabezaSeveraDia3);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 4:
                            boolean chkDolorCabezaSeveraDia4 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia4)).isChecked();
                            if (chkDolorCabezaSeveraDia4) {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia4)).setChecked(!chkDolorCabezaSeveraDia4);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia4)).setChecked(!chkDolorCabezaSeveraDia4);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 5:
                            boolean chkDolorCabezaSeveraDia5 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia5)).isChecked();
                            if (chkDolorCabezaSeveraDia5) {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia5)).setChecked(!chkDolorCabezaSeveraDia5);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia5)).setChecked(!chkDolorCabezaSeveraDia5);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 6:
                            boolean chkDolorCabezaSeveraDia6 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia6)).isChecked();
                            if (chkDolorCabezaSeveraDia6) {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia6)).setChecked(!chkDolorCabezaSeveraDia6);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia6)).setChecked(!chkDolorCabezaSeveraDia6);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 7:
                            boolean chkDolorCabezaSeveraDia7 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia7)).isChecked();
                            if (chkDolorCabezaSeveraDia7) {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia7)).setChecked(!chkDolorCabezaSeveraDia7);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia7)).setChecked(!chkDolorCabezaSeveraDia7);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 8:
                            boolean chkDolorCabezaSeveraDia8 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia8)).isChecked();
                            if (chkDolorCabezaSeveraDia8) {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia8)).setChecked(!chkDolorCabezaSeveraDia8);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia8)).setChecked(!chkDolorCabezaSeveraDia8);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 9:
                            boolean chkDolorCabezaSeveraDia9 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia9)).isChecked();
                            if (chkDolorCabezaSeveraDia9) {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia9)).setChecked(!chkDolorCabezaSeveraDia9);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia9)).setChecked(!chkDolorCabezaSeveraDia9);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 10:
                            boolean chkDolorCabezaSeveraDia10 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia10)).isChecked();
                            if (chkDolorCabezaSeveraDia10) {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia10)).setChecked(!chkDolorCabezaSeveraDia10);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia10)).setChecked(!chkDolorCabezaSeveraDia10);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 11:
                            boolean chkDolorCabezaSeveraDia11 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia11)).isChecked();
                            if (chkDolorCabezaSeveraDia11) {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia11)).setChecked(!chkDolorCabezaSeveraDia11);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia11)).setChecked(!chkDolorCabezaSeveraDia11);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 12:
                            boolean chkDolorCabezaSeveraDia12 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia12)).isChecked();
                            if (chkDolorCabezaSeveraDia12) {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia12)).setChecked(!chkDolorCabezaSeveraDia12);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia12)).setChecked(!chkDolorCabezaSeveraDia12);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 13:
                            boolean chkDolorCabezaSeveraDia13 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia13)).isChecked();
                            if (chkDolorCabezaSeveraDia13) {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia13)).setChecked(!chkDolorCabezaSeveraDia13);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia13)).setChecked(!chkDolorCabezaSeveraDia13);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 14:
                            boolean chkDolorCabezaSeveraDia14 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia14)).isChecked();
                            if (chkDolorCabezaSeveraDia14) {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia14)).setChecked(!chkDolorCabezaSeveraDia14);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia14)).setChecked(!chkDolorCabezaSeveraDia14);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 15:
                            boolean chkDolorCabezaSeveraDia15 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia15)).isChecked();
                            if (chkDolorCabezaSeveraDia15) {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia15)).setChecked(!chkDolorCabezaSeveraDia15);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia15)).setChecked(!chkDolorCabezaSeveraDia15);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 16:
                            boolean chkDolorCabezaSeveraDia16 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia16)).isChecked();
                            if (chkDolorCabezaSeveraDia16) {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia16)).setChecked(!chkDolorCabezaSeveraDia16);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia16)).setChecked(!chkDolorCabezaSeveraDia16);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 17:
                            boolean chkDolorCabezaSeveraDia17 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia17)).isChecked();
                            if (chkDolorCabezaSeveraDia17) {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia17)).setChecked(!chkDolorCabezaSeveraDia17);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia17)).setChecked(!chkDolorCabezaSeveraDia17);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 18:
                            boolean chkDolorCabezaSeveraDia18 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia18)).isChecked();
                            if (chkDolorCabezaSeveraDia18) {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia18)).setChecked(!chkDolorCabezaSeveraDia18);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia18)).setChecked(!chkDolorCabezaSeveraDia18);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 19:
                            boolean chkDolorCabezaSeveraDia19 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia19)).isChecked();
                            if (chkDolorCabezaSeveraDia19) {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia19)).setChecked(!chkDolorCabezaSeveraDia19);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia19)).setChecked(!chkDolorCabezaSeveraDia19);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 20:
                            boolean chkDolorCabezaSeveraDia20 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia20)).isChecked();
                            if (chkDolorCabezaSeveraDia20) {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia20)).setChecked(!chkDolorCabezaSeveraDia20);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia20)).setChecked(!chkDolorCabezaSeveraDia20);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 21:
                            boolean chkDolorCabezaSeveraDia21 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia21)).isChecked();
                            if (chkDolorCabezaSeveraDia21) {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia21)).setChecked(!chkDolorCabezaSeveraDia21);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia21)).setChecked(!chkDolorCabezaSeveraDia21);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 22:
                            boolean chkDolorCabezaSeveraDia22 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia22)).isChecked();
                            if (chkDolorCabezaSeveraDia22) {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia22)).setChecked(!chkDolorCabezaSeveraDia22);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia22)).setChecked(!chkDolorCabezaSeveraDia22);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 23:
                            boolean chkDolorCabezaSeveraDia23 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia23)).isChecked();
                            if (chkDolorCabezaSeveraDia23) {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia23)).setChecked(!chkDolorCabezaSeveraDia23);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia23)).setChecked(!chkDolorCabezaSeveraDia23);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 24:
                            boolean chkDolorCabezaSeveraDia24 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia24)).isChecked();
                            if (chkDolorCabezaSeveraDia24) {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia24)).setChecked(!chkDolorCabezaSeveraDia24);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia24)).setChecked(!chkDolorCabezaSeveraDia24);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 25:
                            boolean chkDolorCabezaSeveraDia25 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia25)).isChecked();
                            if (chkDolorCabezaSeveraDia25) {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia25)).setChecked(!chkDolorCabezaSeveraDia25);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia25)).setChecked(!chkDolorCabezaSeveraDia25);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 26:
                            boolean chkDolorCabezaSeveraDia26 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia26)).isChecked();
                            if (chkDolorCabezaSeveraDia26) {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia26)).setChecked(!chkDolorCabezaSeveraDia26);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia26)).setChecked(!chkDolorCabezaSeveraDia26);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 27:
                            boolean chkDolorCabezaSeveraDia27 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia27)).isChecked();
                            if (chkDolorCabezaSeveraDia27) {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia27)).setChecked(!chkDolorCabezaSeveraDia27);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia27)).setChecked(!chkDolorCabezaSeveraDia27);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;
                        case 28:
                            boolean chkDolorCabezaSeveraDia28 = ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia28)).isChecked();
                            if (chkDolorCabezaSeveraDia28) {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia28)).setChecked(!chkDolorCabezaSeveraDia28);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia28)).setChecked(!chkDolorCabezaSeveraDia28);
                            } else {
                                seguimientoInfluenza.setDolorCabezaLeve(null);
                                seguimientoInfluenza.setDolorCabezaModerada(null);
                                seguimientoInfluenza.setDolorCabezaSevera(null);
                            }
                            break;

                    }
                }
            }

            /*---------------------------*/
            /*--------DOLOR MUSCULAR-------------------*/
            public void onChkDolorMuscularLeve(View view) {
                SeguimientoInfluenzaDTO seguimientoInfluenza = obtenerNuevoSeguimientoPorDia(mPage);
                if (mSeguimientoInfluenzaActivity.adapter != null && seguimientoInfluenza != null) {
                    switch (mPage) {
                        case 1:
                            boolean chkDolorMuscularLeveDia1 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia1)).isChecked();
                            if (chkDolorMuscularLeveDia1) {
                                seguimientoInfluenza.setDolorMuscularLeve("S");
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia1)).setChecked(!chkDolorMuscularLeveDia1);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia1)).setChecked(!chkDolorMuscularLeveDia1);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 2:
                            boolean chkDolorMuscularLeveDia2 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia2)).isChecked();
                            if (chkDolorMuscularLeveDia2) {
                                seguimientoInfluenza.setDolorMuscularLeve("S");
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia2)).setChecked(!chkDolorMuscularLeveDia2);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia2)).setChecked(!chkDolorMuscularLeveDia2);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 3:
                            boolean chkDolorMuscularLeveDia3 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia3)).isChecked();
                            if (chkDolorMuscularLeveDia3) {
                                seguimientoInfluenza.setDolorMuscularLeve("S");
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia3)).setChecked(!chkDolorMuscularLeveDia3);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia3)).setChecked(!chkDolorMuscularLeveDia3);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 4:
                            boolean chkDolorMuscularLeveDia4 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia4)).isChecked();
                            if (chkDolorMuscularLeveDia4) {
                                seguimientoInfluenza.setDolorMuscularLeve("S");
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia4)).setChecked(!chkDolorMuscularLeveDia4);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia4)).setChecked(!chkDolorMuscularLeveDia4);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 5:
                            boolean chkDolorMuscularLeveDia5 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia5)).isChecked();
                            if (chkDolorMuscularLeveDia5) {
                                seguimientoInfluenza.setDolorMuscularLeve("S");
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia5)).setChecked(!chkDolorMuscularLeveDia5);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia5)).setChecked(!chkDolorMuscularLeveDia5);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 6:
                            boolean chkDolorMuscularLeveDia6 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia6)).isChecked();
                            if (chkDolorMuscularLeveDia6) {
                                seguimientoInfluenza.setDolorMuscularLeve("S");
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia6)).setChecked(!chkDolorMuscularLeveDia6);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia6)).setChecked(!chkDolorMuscularLeveDia6);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 7:
                            boolean chkDolorMuscularLeveDia7 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia7)).isChecked();
                            if (chkDolorMuscularLeveDia7) {
                                seguimientoInfluenza.setDolorMuscularLeve("S");
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia7)).setChecked(!chkDolorMuscularLeveDia7);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia7)).setChecked(!chkDolorMuscularLeveDia7);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 8:
                            boolean chkDolorMuscularLeveDia8 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia8)).isChecked();
                            if (chkDolorMuscularLeveDia8) {
                                seguimientoInfluenza.setDolorMuscularLeve("S");
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia8)).setChecked(!chkDolorMuscularLeveDia8);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia8)).setChecked(!chkDolorMuscularLeveDia8);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 9:
                            boolean chkDolorMuscularLeveDia9 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia9)).isChecked();
                            if (chkDolorMuscularLeveDia9) {
                                seguimientoInfluenza.setDolorMuscularLeve("S");
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia9)).setChecked(!chkDolorMuscularLeveDia9);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia9)).setChecked(!chkDolorMuscularLeveDia9);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 10:
                            boolean chkDolorMuscularLeveDia10 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia10)).isChecked();
                            if (chkDolorMuscularLeveDia10) {
                                seguimientoInfluenza.setDolorMuscularLeve("S");
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia10)).setChecked(!chkDolorMuscularLeveDia10);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia10)).setChecked(!chkDolorMuscularLeveDia10);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 11:
                            boolean chkDolorMuscularLeveDia11 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia11)).isChecked();
                            if (chkDolorMuscularLeveDia11) {
                                seguimientoInfluenza.setDolorMuscularLeve("S");
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia11)).setChecked(!chkDolorMuscularLeveDia11);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia11)).setChecked(!chkDolorMuscularLeveDia11);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 12:
                            boolean chkDolorMuscularLeveDia12 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia12)).isChecked();
                            if (chkDolorMuscularLeveDia12) {
                                seguimientoInfluenza.setDolorMuscularLeve("S");
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia12)).setChecked(!chkDolorMuscularLeveDia12);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia12)).setChecked(!chkDolorMuscularLeveDia12);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 13:
                            boolean chkDolorMuscularLeveDia13 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia13)).isChecked();
                            if (chkDolorMuscularLeveDia13) {
                                seguimientoInfluenza.setDolorMuscularLeve("S");
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia13)).setChecked(!chkDolorMuscularLeveDia13);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia13)).setChecked(!chkDolorMuscularLeveDia13);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 14:
                            boolean chkDolorMuscularLeveDia14 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia14)).isChecked();
                            if (chkDolorMuscularLeveDia14) {
                                seguimientoInfluenza.setDolorMuscularLeve("S");
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia14)).setChecked(!chkDolorMuscularLeveDia14);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia14)).setChecked(!chkDolorMuscularLeveDia14);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 15:
                            boolean chkDolorMuscularLeveDia15 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia15)).isChecked();
                            if (chkDolorMuscularLeveDia15) {
                                seguimientoInfluenza.setDolorMuscularLeve("S");
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia15)).setChecked(!chkDolorMuscularLeveDia15);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia15)).setChecked(!chkDolorMuscularLeveDia15);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 16:
                            boolean chkDolorMuscularLeveDia16 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia16)).isChecked();
                            if (chkDolorMuscularLeveDia16) {
                                seguimientoInfluenza.setDolorMuscularLeve("S");
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia16)).setChecked(!chkDolorMuscularLeveDia16);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia16)).setChecked(!chkDolorMuscularLeveDia16);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 17:
                            boolean chkDolorMuscularLeveDia17 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia17)).isChecked();
                            if (chkDolorMuscularLeveDia17) {
                                seguimientoInfluenza.setDolorMuscularLeve("S");
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia17)).setChecked(!chkDolorMuscularLeveDia17);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia17)).setChecked(!chkDolorMuscularLeveDia17);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 18:
                            boolean chkDolorMuscularLeveDia18 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia18)).isChecked();
                            if (chkDolorMuscularLeveDia18) {
                                seguimientoInfluenza.setDolorMuscularLeve("S");
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia18)).setChecked(!chkDolorMuscularLeveDia18);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia18)).setChecked(!chkDolorMuscularLeveDia18);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 19:
                            boolean chkDolorMuscularLeveDia19 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia19)).isChecked();
                            if (chkDolorMuscularLeveDia19) {
                                seguimientoInfluenza.setDolorMuscularLeve("S");
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia19)).setChecked(!chkDolorMuscularLeveDia19);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia19)).setChecked(!chkDolorMuscularLeveDia19);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 20:
                            boolean chkDolorMuscularLeveDia20 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia20)).isChecked();
                            if (chkDolorMuscularLeveDia20) {
                                seguimientoInfluenza.setDolorMuscularLeve("S");
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia20)).setChecked(!chkDolorMuscularLeveDia20);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia20)).setChecked(!chkDolorMuscularLeveDia20);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 21:
                            boolean chkDolorMuscularLeveDia21 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia21)).isChecked();
                            if (chkDolorMuscularLeveDia21) {
                                seguimientoInfluenza.setDolorMuscularLeve("S");
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia21)).setChecked(!chkDolorMuscularLeveDia21);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia21)).setChecked(!chkDolorMuscularLeveDia21);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 22:
                            boolean chkDolorMuscularLeveDia22 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia22)).isChecked();
                            if (chkDolorMuscularLeveDia22) {
                                seguimientoInfluenza.setDolorMuscularLeve("S");
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia22)).setChecked(!chkDolorMuscularLeveDia22);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia22)).setChecked(!chkDolorMuscularLeveDia22);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 23:
                            boolean chkDolorMuscularLeveDia23 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia23)).isChecked();
                            if (chkDolorMuscularLeveDia23) {
                                seguimientoInfluenza.setDolorMuscularLeve("S");
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia23)).setChecked(!chkDolorMuscularLeveDia23);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia23)).setChecked(!chkDolorMuscularLeveDia23);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 24:
                            boolean chkDolorMuscularLeveDia24 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia24)).isChecked();
                            if (chkDolorMuscularLeveDia24) {
                                seguimientoInfluenza.setDolorMuscularLeve("S");
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia24)).setChecked(!chkDolorMuscularLeveDia24);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia24)).setChecked(!chkDolorMuscularLeveDia24);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 25:
                            boolean chkDolorMuscularLeveDia25 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia25)).isChecked();
                            if (chkDolorMuscularLeveDia25) {
                                seguimientoInfluenza.setDolorMuscularLeve("S");
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia25)).setChecked(!chkDolorMuscularLeveDia25);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia25)).setChecked(!chkDolorMuscularLeveDia25);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 26:
                            boolean chkDolorMuscularLeveDia26 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia26)).isChecked();
                            if (chkDolorMuscularLeveDia26) {
                                seguimientoInfluenza.setDolorMuscularLeve("S");
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia26)).setChecked(!chkDolorMuscularLeveDia26);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia26)).setChecked(!chkDolorMuscularLeveDia26);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 27:
                            boolean chkDolorMuscularLeveDia27 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia27)).isChecked();
                            if (chkDolorMuscularLeveDia27) {
                                seguimientoInfluenza.setDolorMuscularLeve("S");
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia27)).setChecked(!chkDolorMuscularLeveDia27);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia27)).setChecked(!chkDolorMuscularLeveDia27);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 28:
                            boolean chkDolorMuscularLeveDia28 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia28)).isChecked();
                            if (chkDolorMuscularLeveDia28) {
                                seguimientoInfluenza.setDolorMuscularLeve("S");
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia28)).setChecked(!chkDolorMuscularLeveDia28);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia28)).setChecked(!chkDolorMuscularLeveDia28);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                    }
                }
            }

            public void onChkDolorMuscularModerada(View view) {
                SeguimientoInfluenzaDTO seguimientoInfluenza = obtenerNuevoSeguimientoPorDia(mPage);
                if (mSeguimientoInfluenzaActivity.adapter != null && seguimientoInfluenza != null) {
                    switch (mPage) {
                        case 1:
                            boolean chkDolorMuscularModeradaDia1 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia1)).isChecked();
                            if (chkDolorMuscularModeradaDia1) {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada("S");
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia1)).setChecked(!chkDolorMuscularModeradaDia1);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia1)).setChecked(!chkDolorMuscularModeradaDia1);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 2:
                            boolean chkDolorMuscularModeradaDia2 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia2)).isChecked();
                            if (chkDolorMuscularModeradaDia2) {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada("S");
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia2)).setChecked(!chkDolorMuscularModeradaDia2);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia2)).setChecked(!chkDolorMuscularModeradaDia2);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 3:
                            boolean chkDolorMuscularModeradaDia3 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia3)).isChecked();
                            if (chkDolorMuscularModeradaDia3) {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada("S");
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia3)).setChecked(!chkDolorMuscularModeradaDia3);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia3)).setChecked(!chkDolorMuscularModeradaDia3);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 4:
                            boolean chkDolorMuscularModeradaDia4 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia4)).isChecked();
                            if (chkDolorMuscularModeradaDia4) {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada("S");
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia4)).setChecked(!chkDolorMuscularModeradaDia4);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia4)).setChecked(!chkDolorMuscularModeradaDia4);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 5:
                            boolean chkDolorMuscularModeradaDia5 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia5)).isChecked();
                            if (chkDolorMuscularModeradaDia5) {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada("S");
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia5)).setChecked(!chkDolorMuscularModeradaDia5);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia5)).setChecked(!chkDolorMuscularModeradaDia5);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 6:
                            boolean chkDolorMuscularModeradaDia6 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia6)).isChecked();
                            if (chkDolorMuscularModeradaDia6) {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada("S");
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia6)).setChecked(!chkDolorMuscularModeradaDia6);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia6)).setChecked(!chkDolorMuscularModeradaDia6);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 7:
                            boolean chkDolorMuscularModeradaDia7 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia7)).isChecked();
                            if (chkDolorMuscularModeradaDia7) {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada("S");
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia7)).setChecked(!chkDolorMuscularModeradaDia7);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia7)).setChecked(!chkDolorMuscularModeradaDia7);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 8:
                            boolean chkDolorMuscularModeradaDia8 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia8)).isChecked();
                            if (chkDolorMuscularModeradaDia8) {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada("S");
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia8)).setChecked(!chkDolorMuscularModeradaDia8);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia8)).setChecked(!chkDolorMuscularModeradaDia8);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 9:
                            boolean chkDolorMuscularModeradaDia9 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia9)).isChecked();
                            if (chkDolorMuscularModeradaDia9) {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada("S");
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia9)).setChecked(!chkDolorMuscularModeradaDia9);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia9)).setChecked(!chkDolorMuscularModeradaDia9);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 10:
                            boolean chkDolorMuscularModeradaDia10 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia10)).isChecked();
                            if (chkDolorMuscularModeradaDia10) {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada("S");
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia10)).setChecked(!chkDolorMuscularModeradaDia10);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia10)).setChecked(!chkDolorMuscularModeradaDia10);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 11:
                            boolean chkDolorMuscularModeradaDia11 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia11)).isChecked();
                            if (chkDolorMuscularModeradaDia11) {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada("S");
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia11)).setChecked(!chkDolorMuscularModeradaDia11);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia11)).setChecked(!chkDolorMuscularModeradaDia11);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 12:
                            boolean chkDolorMuscularModeradaDia12 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia12)).isChecked();
                            if (chkDolorMuscularModeradaDia12) {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada("S");
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia12)).setChecked(!chkDolorMuscularModeradaDia12);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia12)).setChecked(!chkDolorMuscularModeradaDia12);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 13:
                            boolean chkDolorMuscularModeradaDia13 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia13)).isChecked();
                            if (chkDolorMuscularModeradaDia13) {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada("S");
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia13)).setChecked(!chkDolorMuscularModeradaDia13);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia13)).setChecked(!chkDolorMuscularModeradaDia13);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 14:
                            boolean chkDolorMuscularModeradaDia14 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia14)).isChecked();
                            if (chkDolorMuscularModeradaDia14) {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada("S");
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia14)).setChecked(!chkDolorMuscularModeradaDia14);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia14)).setChecked(!chkDolorMuscularModeradaDia14);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 15:
                            boolean chkDolorMuscularModeradaDia15 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia15)).isChecked();
                            if (chkDolorMuscularModeradaDia15) {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada("S");
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia15)).setChecked(!chkDolorMuscularModeradaDia15);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia15)).setChecked(!chkDolorMuscularModeradaDia15);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 16:
                            boolean chkDolorMuscularModeradaDia16 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia16)).isChecked();
                            if (chkDolorMuscularModeradaDia16) {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada("S");
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia16)).setChecked(!chkDolorMuscularModeradaDia16);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia16)).setChecked(!chkDolorMuscularModeradaDia16);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 17:
                            boolean chkDolorMuscularModeradaDia17 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia17)).isChecked();
                            if (chkDolorMuscularModeradaDia17) {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada("S");
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia17)).setChecked(!chkDolorMuscularModeradaDia17);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia17)).setChecked(!chkDolorMuscularModeradaDia17);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 18:
                            boolean chkDolorMuscularModeradaDia18 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia18)).isChecked();
                            if (chkDolorMuscularModeradaDia18) {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada("S");
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia18)).setChecked(!chkDolorMuscularModeradaDia18);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia18)).setChecked(!chkDolorMuscularModeradaDia18);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 19:
                            boolean chkDolorMuscularModeradaDia19 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia19)).isChecked();
                            if (chkDolorMuscularModeradaDia19) {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada("S");
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia19)).setChecked(!chkDolorMuscularModeradaDia19);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia19)).setChecked(!chkDolorMuscularModeradaDia19);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 20:
                            boolean chkDolorMuscularModeradaDia20 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia20)).isChecked();
                            if (chkDolorMuscularModeradaDia20) {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada("S");
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia20)).setChecked(!chkDolorMuscularModeradaDia20);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia20)).setChecked(!chkDolorMuscularModeradaDia20);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 21:
                            boolean chkDolorMuscularModeradaDia21 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia21)).isChecked();
                            if (chkDolorMuscularModeradaDia21) {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada("S");
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia21)).setChecked(!chkDolorMuscularModeradaDia21);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia21)).setChecked(!chkDolorMuscularModeradaDia21);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 22:
                            boolean chkDolorMuscularModeradaDia22 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia22)).isChecked();
                            if (chkDolorMuscularModeradaDia22) {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada("S");
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia22)).setChecked(!chkDolorMuscularModeradaDia22);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia22)).setChecked(!chkDolorMuscularModeradaDia22);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 23:
                            boolean chkDolorMuscularModeradaDia23 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia23)).isChecked();
                            if (chkDolorMuscularModeradaDia23) {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada("S");
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia23)).setChecked(!chkDolorMuscularModeradaDia23);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia23)).setChecked(!chkDolorMuscularModeradaDia23);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 24:
                            boolean chkDolorMuscularModeradaDia24 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia24)).isChecked();
                            if (chkDolorMuscularModeradaDia24) {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada("S");
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia24)).setChecked(!chkDolorMuscularModeradaDia24);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia24)).setChecked(!chkDolorMuscularModeradaDia24);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 25:
                            boolean chkDolorMuscularModeradaDia25 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia25)).isChecked();
                            if (chkDolorMuscularModeradaDia25) {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada("S");
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia25)).setChecked(!chkDolorMuscularModeradaDia25);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia25)).setChecked(!chkDolorMuscularModeradaDia25);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 26:
                            boolean chkDolorMuscularModeradaDia26 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia26)).isChecked();
                            if (chkDolorMuscularModeradaDia26) {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada("S");
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia26)).setChecked(!chkDolorMuscularModeradaDia26);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia26)).setChecked(!chkDolorMuscularModeradaDia26);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 27:
                            boolean chkDolorMuscularModeradaDia27 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia27)).isChecked();
                            if (chkDolorMuscularModeradaDia27) {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada("S");
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia27)).setChecked(!chkDolorMuscularModeradaDia27);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia27)).setChecked(!chkDolorMuscularModeradaDia27);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 28:
                            boolean chkDolorMuscularModeradaDia28 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia28)).isChecked();
                            if (chkDolorMuscularModeradaDia28) {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada("S");
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia28)).setChecked(!chkDolorMuscularModeradaDia28);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia28)).setChecked(!chkDolorMuscularModeradaDia28);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                    }
                }
            }

            public void onChkDolorMuscularSevera(View view) {
                SeguimientoInfluenzaDTO seguimientoInfluenza = obtenerNuevoSeguimientoPorDia(mPage);
                if (mSeguimientoInfluenzaActivity.adapter != null && seguimientoInfluenza != null) {
                    switch (mPage) {
                        case 1:
                            boolean chkDolorMuscularSeveraDia1 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia1)).isChecked();
                            if (chkDolorMuscularSeveraDia1) {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia1)).setChecked(!chkDolorMuscularSeveraDia1);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia1)).setChecked(!chkDolorMuscularSeveraDia1);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 2:
                            boolean chkDolorMuscularSeveraDia2 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia2)).isChecked();
                            if (chkDolorMuscularSeveraDia2) {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia2)).setChecked(!chkDolorMuscularSeveraDia2);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia2)).setChecked(!chkDolorMuscularSeveraDia2);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 3:
                            boolean chkDolorMuscularSeveraDia3 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia3)).isChecked();
                            if (chkDolorMuscularSeveraDia3) {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia3)).setChecked(!chkDolorMuscularSeveraDia3);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia3)).setChecked(!chkDolorMuscularSeveraDia3);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 4:
                            boolean chkDolorMuscularSeveraDia4 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia4)).isChecked();
                            if (chkDolorMuscularSeveraDia4) {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia4)).setChecked(!chkDolorMuscularSeveraDia4);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia4)).setChecked(!chkDolorMuscularSeveraDia4);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 5:
                            boolean chkDolorMuscularSeveraDia5 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia5)).isChecked();
                            if (chkDolorMuscularSeveraDia5) {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia5)).setChecked(!chkDolorMuscularSeveraDia5);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia5)).setChecked(!chkDolorMuscularSeveraDia5);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 6:
                            boolean chkDolorMuscularSeveraDia6 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia6)).isChecked();
                            if (chkDolorMuscularSeveraDia6) {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia6)).setChecked(!chkDolorMuscularSeveraDia6);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia6)).setChecked(!chkDolorMuscularSeveraDia6);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 7:
                            boolean chkDolorMuscularSeveraDia7 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia7)).isChecked();
                            if (chkDolorMuscularSeveraDia7) {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia7)).setChecked(!chkDolorMuscularSeveraDia7);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia7)).setChecked(!chkDolorMuscularSeveraDia7);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 8:
                            boolean chkDolorMuscularSeveraDia8 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia8)).isChecked();
                            if (chkDolorMuscularSeveraDia8) {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia8)).setChecked(!chkDolorMuscularSeveraDia8);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia8)).setChecked(!chkDolorMuscularSeveraDia8);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 9:
                            boolean chkDolorMuscularSeveraDia9 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia9)).isChecked();
                            if (chkDolorMuscularSeveraDia9) {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia9)).setChecked(!chkDolorMuscularSeveraDia9);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia9)).setChecked(!chkDolorMuscularSeveraDia9);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 10:
                            boolean chkDolorMuscularSeveraDia10 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia10)).isChecked();
                            if (chkDolorMuscularSeveraDia10) {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia10)).setChecked(!chkDolorMuscularSeveraDia10);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia10)).setChecked(!chkDolorMuscularSeveraDia10);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 11:
                            boolean chkDolorMuscularSeveraDia11 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia11)).isChecked();
                            if (chkDolorMuscularSeveraDia11) {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia11)).setChecked(!chkDolorMuscularSeveraDia11);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia11)).setChecked(!chkDolorMuscularSeveraDia11);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 12:
                            boolean chkDolorMuscularSeveraDia12 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia12)).isChecked();
                            if (chkDolorMuscularSeveraDia12) {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia12)).setChecked(!chkDolorMuscularSeveraDia12);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia12)).setChecked(!chkDolorMuscularSeveraDia12);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 13:
                            boolean chkDolorMuscularSeveraDia13 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia13)).isChecked();
                            if (chkDolorMuscularSeveraDia13) {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia13)).setChecked(!chkDolorMuscularSeveraDia13);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia13)).setChecked(!chkDolorMuscularSeveraDia13);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 14:
                            boolean chkDolorMuscularSeveraDia14 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia14)).isChecked();
                            if (chkDolorMuscularSeveraDia14) {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia14)).setChecked(!chkDolorMuscularSeveraDia14);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia14)).setChecked(!chkDolorMuscularSeveraDia14);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 15:
                            boolean chkDolorMuscularSeveraDia15 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia15)).isChecked();
                            if (chkDolorMuscularSeveraDia15) {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia15)).setChecked(!chkDolorMuscularSeveraDia15);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia15)).setChecked(!chkDolorMuscularSeveraDia15);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 16:
                            boolean chkDolorMuscularSeveraDia16 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia16)).isChecked();
                            if (chkDolorMuscularSeveraDia16) {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia16)).setChecked(!chkDolorMuscularSeveraDia16);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia16)).setChecked(!chkDolorMuscularSeveraDia16);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 17:
                            boolean chkDolorMuscularSeveraDia17 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia17)).isChecked();
                            if (chkDolorMuscularSeveraDia17) {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia17)).setChecked(!chkDolorMuscularSeveraDia17);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia17)).setChecked(!chkDolorMuscularSeveraDia17);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 18:
                            boolean chkDolorMuscularSeveraDia18 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia18)).isChecked();
                            if (chkDolorMuscularSeveraDia18) {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia18)).setChecked(!chkDolorMuscularSeveraDia18);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia18)).setChecked(!chkDolorMuscularSeveraDia18);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 19:
                            boolean chkDolorMuscularSeveraDia19 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia19)).isChecked();
                            if (chkDolorMuscularSeveraDia19) {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia19)).setChecked(!chkDolorMuscularSeveraDia19);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia19)).setChecked(!chkDolorMuscularSeveraDia19);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 20:
                            boolean chkDolorMuscularSeveraDia20 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia20)).isChecked();
                            if (chkDolorMuscularSeveraDia20) {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia20)).setChecked(!chkDolorMuscularSeveraDia20);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia20)).setChecked(!chkDolorMuscularSeveraDia20);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 21:
                            boolean chkDolorMuscularSeveraDia21 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia21)).isChecked();
                            if (chkDolorMuscularSeveraDia21) {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia21)).setChecked(!chkDolorMuscularSeveraDia21);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia21)).setChecked(!chkDolorMuscularSeveraDia21);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 22:
                            boolean chkDolorMuscularSeveraDia22 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia22)).isChecked();
                            if (chkDolorMuscularSeveraDia22) {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia22)).setChecked(!chkDolorMuscularSeveraDia22);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia22)).setChecked(!chkDolorMuscularSeveraDia22);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 23:
                            boolean chkDolorMuscularSeveraDia23 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia23)).isChecked();
                            if (chkDolorMuscularSeveraDia23) {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia23)).setChecked(!chkDolorMuscularSeveraDia23);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia23)).setChecked(!chkDolorMuscularSeveraDia23);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 24:
                            boolean chkDolorMuscularSeveraDia24 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia24)).isChecked();
                            if (chkDolorMuscularSeveraDia24) {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia24)).setChecked(!chkDolorMuscularSeveraDia24);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia24)).setChecked(!chkDolorMuscularSeveraDia24);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 25:
                            boolean chkDolorMuscularSeveraDia25 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia25)).isChecked();
                            if (chkDolorMuscularSeveraDia25) {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia25)).setChecked(!chkDolorMuscularSeveraDia25);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia25)).setChecked(!chkDolorMuscularSeveraDia25);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 26:
                            boolean chkDolorMuscularSeveraDia26 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia26)).isChecked();
                            if (chkDolorMuscularSeveraDia26) {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia26)).setChecked(!chkDolorMuscularSeveraDia26);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia26)).setChecked(!chkDolorMuscularSeveraDia26);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 27:
                            boolean chkDolorMuscularSeveraDia27 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia27)).isChecked();
                            if (chkDolorMuscularSeveraDia27) {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia27)).setChecked(!chkDolorMuscularSeveraDia27);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia27)).setChecked(!chkDolorMuscularSeveraDia27);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;
                        case 28:
                            boolean chkDolorMuscularSeveraDia28 = ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia28)).isChecked();
                            if (chkDolorMuscularSeveraDia28) {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia28)).setChecked(!chkDolorMuscularSeveraDia28);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia28)).setChecked(!chkDolorMuscularSeveraDia28);
                            } else {
                                seguimientoInfluenza.setDolorMuscularLeve(null);
                                seguimientoInfluenza.setDolorMuscularModerada(null);
                                seguimientoInfluenza.setDolorMuscularSevera(null);
                            }
                            break;

                    }
                }
            }

            /*---------------------------*/
            /*--------DOLOR ARTICULAR-------------------*/
            public void onChkDolorArticularLeve(View view) {
                SeguimientoInfluenzaDTO seguimientoInfluenza = obtenerNuevoSeguimientoPorDia(mPage);
                if (mSeguimientoInfluenzaActivity.adapter != null && seguimientoInfluenza != null) {
                    switch (mPage) {
                        case 1:
                            boolean chkDolorArticularLeveDia1 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia1)).isChecked();
                            if (chkDolorArticularLeveDia1) {
                                seguimientoInfluenza.setDolorArticularLeve("S");
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia1)).setChecked(!chkDolorArticularLeveDia1);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia1)).setChecked(!chkDolorArticularLeveDia1);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 2:
                            boolean chkDolorArticularLeveDia2 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia2)).isChecked();
                            if (chkDolorArticularLeveDia2) {
                                seguimientoInfluenza.setDolorArticularLeve("S");
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia2)).setChecked(!chkDolorArticularLeveDia2);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia2)).setChecked(!chkDolorArticularLeveDia2);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 3:
                            boolean chkDolorArticularLeveDia3 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia3)).isChecked();
                            if (chkDolorArticularLeveDia3) {
                                seguimientoInfluenza.setDolorArticularLeve("S");
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia3)).setChecked(!chkDolorArticularLeveDia3);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia3)).setChecked(!chkDolorArticularLeveDia3);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 4:
                            boolean chkDolorArticularLeveDia4 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia4)).isChecked();
                            if (chkDolorArticularLeveDia4) {
                                seguimientoInfluenza.setDolorArticularLeve("S");
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia4)).setChecked(!chkDolorArticularLeveDia4);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia4)).setChecked(!chkDolorArticularLeveDia4);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 5:
                            boolean chkDolorArticularLeveDia5 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia5)).isChecked();
                            if (chkDolorArticularLeveDia5) {
                                seguimientoInfluenza.setDolorArticularLeve("S");
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia5)).setChecked(!chkDolorArticularLeveDia5);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia5)).setChecked(!chkDolorArticularLeveDia5);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 6:
                            boolean chkDolorArticularLeveDia6 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia6)).isChecked();
                            if (chkDolorArticularLeveDia6) {
                                seguimientoInfluenza.setDolorArticularLeve("S");
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia6)).setChecked(!chkDolorArticularLeveDia6);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia6)).setChecked(!chkDolorArticularLeveDia6);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 7:
                            boolean chkDolorArticularLeveDia7 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia7)).isChecked();
                            if (chkDolorArticularLeveDia7) {
                                seguimientoInfluenza.setDolorArticularLeve("S");
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia7)).setChecked(!chkDolorArticularLeveDia7);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia7)).setChecked(!chkDolorArticularLeveDia7);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 8:
                            boolean chkDolorArticularLeveDia8 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia8)).isChecked();
                            if (chkDolorArticularLeveDia8) {
                                seguimientoInfluenza.setDolorArticularLeve("S");
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia8)).setChecked(!chkDolorArticularLeveDia8);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia8)).setChecked(!chkDolorArticularLeveDia8);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 9:
                            boolean chkDolorArticularLeveDia9 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia9)).isChecked();
                            if (chkDolorArticularLeveDia9) {
                                seguimientoInfluenza.setDolorArticularLeve("S");
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia9)).setChecked(!chkDolorArticularLeveDia9);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia9)).setChecked(!chkDolorArticularLeveDia9);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 10:
                            boolean chkDolorArticularLeveDia10 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia10)).isChecked();
                            if (chkDolorArticularLeveDia10) {
                                seguimientoInfluenza.setDolorArticularLeve("S");
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia10)).setChecked(!chkDolorArticularLeveDia10);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia10)).setChecked(!chkDolorArticularLeveDia10);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 11:
                            boolean chkDolorArticularLeveDia11 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia11)).isChecked();
                            if (chkDolorArticularLeveDia11) {
                                seguimientoInfluenza.setDolorArticularLeve("S");
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia11)).setChecked(!chkDolorArticularLeveDia11);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia11)).setChecked(!chkDolorArticularLeveDia11);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 12:
                            boolean chkDolorArticularLeveDia12 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia12)).isChecked();
                            if (chkDolorArticularLeveDia12) {
                                seguimientoInfluenza.setDolorArticularLeve("S");
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia12)).setChecked(!chkDolorArticularLeveDia12);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia12)).setChecked(!chkDolorArticularLeveDia12);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 13:
                            boolean chkDolorArticularLeveDia13 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia13)).isChecked();
                            if (chkDolorArticularLeveDia13) {
                                seguimientoInfluenza.setDolorArticularLeve("S");
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia13)).setChecked(!chkDolorArticularLeveDia13);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia13)).setChecked(!chkDolorArticularLeveDia13);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 14:
                            boolean chkDolorArticularLeveDia14 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia14)).isChecked();
                            if (chkDolorArticularLeveDia14) {
                                seguimientoInfluenza.setDolorArticularLeve("S");
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia14)).setChecked(!chkDolorArticularLeveDia14);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia14)).setChecked(!chkDolorArticularLeveDia14);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 15:
                            boolean chkDolorArticularLeveDia15 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia15)).isChecked();
                            if (chkDolorArticularLeveDia15) {
                                seguimientoInfluenza.setDolorArticularLeve("S");
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia15)).setChecked(!chkDolorArticularLeveDia15);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia15)).setChecked(!chkDolorArticularLeveDia15);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 16:
                            boolean chkDolorArticularLeveDia16 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia16)).isChecked();
                            if (chkDolorArticularLeveDia16) {
                                seguimientoInfluenza.setDolorArticularLeve("S");
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia16)).setChecked(!chkDolorArticularLeveDia16);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia16)).setChecked(!chkDolorArticularLeveDia16);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 17:
                            boolean chkDolorArticularLeveDia17 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia17)).isChecked();
                            if (chkDolorArticularLeveDia17) {
                                seguimientoInfluenza.setDolorArticularLeve("S");
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia17)).setChecked(!chkDolorArticularLeveDia17);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia17)).setChecked(!chkDolorArticularLeveDia17);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 18:
                            boolean chkDolorArticularLeveDia18 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia18)).isChecked();
                            if (chkDolorArticularLeveDia18) {
                                seguimientoInfluenza.setDolorArticularLeve("S");
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia18)).setChecked(!chkDolorArticularLeveDia18);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia18)).setChecked(!chkDolorArticularLeveDia18);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 19:
                            boolean chkDolorArticularLeveDia19 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia19)).isChecked();
                            if (chkDolorArticularLeveDia19) {
                                seguimientoInfluenza.setDolorArticularLeve("S");
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia19)).setChecked(!chkDolorArticularLeveDia19);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia19)).setChecked(!chkDolorArticularLeveDia19);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 20:
                            boolean chkDolorArticularLeveDia20 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia20)).isChecked();
                            if (chkDolorArticularLeveDia20) {
                                seguimientoInfluenza.setDolorArticularLeve("S");
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia20)).setChecked(!chkDolorArticularLeveDia20);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia20)).setChecked(!chkDolorArticularLeveDia20);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 21:
                            boolean chkDolorArticularLeveDia21 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia21)).isChecked();
                            if (chkDolorArticularLeveDia21) {
                                seguimientoInfluenza.setDolorArticularLeve("S");
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia21)).setChecked(!chkDolorArticularLeveDia21);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia21)).setChecked(!chkDolorArticularLeveDia21);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 22:
                            boolean chkDolorArticularLeveDia22 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia22)).isChecked();
                            if (chkDolorArticularLeveDia22) {
                                seguimientoInfluenza.setDolorArticularLeve("S");
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia22)).setChecked(!chkDolorArticularLeveDia22);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia22)).setChecked(!chkDolorArticularLeveDia22);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 23:
                            boolean chkDolorArticularLeveDia23 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia23)).isChecked();
                            if (chkDolorArticularLeveDia23) {
                                seguimientoInfluenza.setDolorArticularLeve("S");
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia23)).setChecked(!chkDolorArticularLeveDia23);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia23)).setChecked(!chkDolorArticularLeveDia23);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 24:
                            boolean chkDolorArticularLeveDia24 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia24)).isChecked();
                            if (chkDolorArticularLeveDia24) {
                                seguimientoInfluenza.setDolorArticularLeve("S");
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia24)).setChecked(!chkDolorArticularLeveDia24);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia24)).setChecked(!chkDolorArticularLeveDia24);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 25:
                            boolean chkDolorArticularLeveDia25 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia25)).isChecked();
                            if (chkDolorArticularLeveDia25) {
                                seguimientoInfluenza.setDolorArticularLeve("S");
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia25)).setChecked(!chkDolorArticularLeveDia25);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia25)).setChecked(!chkDolorArticularLeveDia25);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 26:
                            boolean chkDolorArticularLeveDia26 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia26)).isChecked();
                            if (chkDolorArticularLeveDia26) {
                                seguimientoInfluenza.setDolorArticularLeve("S");
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia26)).setChecked(!chkDolorArticularLeveDia26);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia26)).setChecked(!chkDolorArticularLeveDia26);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 27:
                            boolean chkDolorArticularLeveDia27 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia27)).isChecked();
                            if (chkDolorArticularLeveDia27) {
                                seguimientoInfluenza.setDolorArticularLeve("S");
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia27)).setChecked(!chkDolorArticularLeveDia27);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia27)).setChecked(!chkDolorArticularLeveDia27);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 28:
                            boolean chkDolorArticularLeveDia28 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia28)).isChecked();
                            if (chkDolorArticularLeveDia28) {
                                seguimientoInfluenza.setDolorArticularLeve("S");
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia28)).setChecked(!chkDolorArticularLeveDia28);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia28)).setChecked(!chkDolorArticularLeveDia28);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                    }
                }
            }

            public void onChkDolorArticularModerada(View view) {
                SeguimientoInfluenzaDTO seguimientoInfluenza = obtenerNuevoSeguimientoPorDia(mPage);
                if (mSeguimientoInfluenzaActivity.adapter != null && seguimientoInfluenza != null) {
                    switch (mPage) {
                        case 1:
                            boolean chkDolorArticularModeradaDia1 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia1)).isChecked();
                            if (chkDolorArticularModeradaDia1) {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada("S");
                                seguimientoInfluenza.setDolorArticularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia1)).setChecked(!chkDolorArticularModeradaDia1);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia1)).setChecked(!chkDolorArticularModeradaDia1);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 2:
                            boolean chkDolorArticularModeradaDia2 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia2)).isChecked();
                            if (chkDolorArticularModeradaDia2) {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada("S");
                                seguimientoInfluenza.setDolorArticularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia2)).setChecked(!chkDolorArticularModeradaDia2);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia2)).setChecked(!chkDolorArticularModeradaDia2);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 3:
                            boolean chkDolorArticularModeradaDia3 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia3)).isChecked();
                            if (chkDolorArticularModeradaDia3) {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada("S");
                                seguimientoInfluenza.setDolorArticularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia3)).setChecked(!chkDolorArticularModeradaDia3);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia3)).setChecked(!chkDolorArticularModeradaDia3);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 4:
                            boolean chkDolorArticularModeradaDia4 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia4)).isChecked();
                            if (chkDolorArticularModeradaDia4) {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada("S");
                                seguimientoInfluenza.setDolorArticularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia4)).setChecked(!chkDolorArticularModeradaDia4);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia4)).setChecked(!chkDolorArticularModeradaDia4);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 5:
                            boolean chkDolorArticularModeradaDia5 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia5)).isChecked();
                            if (chkDolorArticularModeradaDia5) {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada("S");
                                seguimientoInfluenza.setDolorArticularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia5)).setChecked(!chkDolorArticularModeradaDia5);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia5)).setChecked(!chkDolorArticularModeradaDia5);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 6:
                            boolean chkDolorArticularModeradaDia6 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia6)).isChecked();
                            if (chkDolorArticularModeradaDia6) {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada("S");
                                seguimientoInfluenza.setDolorArticularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia6)).setChecked(!chkDolorArticularModeradaDia6);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia6)).setChecked(!chkDolorArticularModeradaDia6);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 7:
                            boolean chkDolorArticularModeradaDia7 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia7)).isChecked();
                            if (chkDolorArticularModeradaDia7) {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada("S");
                                seguimientoInfluenza.setDolorArticularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia7)).setChecked(!chkDolorArticularModeradaDia7);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia7)).setChecked(!chkDolorArticularModeradaDia7);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 8:
                            boolean chkDolorArticularModeradaDia8 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia8)).isChecked();
                            if (chkDolorArticularModeradaDia8) {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada("S");
                                seguimientoInfluenza.setDolorArticularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia8)).setChecked(!chkDolorArticularModeradaDia8);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia8)).setChecked(!chkDolorArticularModeradaDia8);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 9:
                            boolean chkDolorArticularModeradaDia9 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia9)).isChecked();
                            if (chkDolorArticularModeradaDia9) {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada("S");
                                seguimientoInfluenza.setDolorArticularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia9)).setChecked(!chkDolorArticularModeradaDia9);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia9)).setChecked(!chkDolorArticularModeradaDia9);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 10:
                            boolean chkDolorArticularModeradaDia10 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia10)).isChecked();
                            if (chkDolorArticularModeradaDia10) {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada("S");
                                seguimientoInfluenza.setDolorArticularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia10)).setChecked(!chkDolorArticularModeradaDia10);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia10)).setChecked(!chkDolorArticularModeradaDia10);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 11:
                            boolean chkDolorArticularModeradaDia11 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia11)).isChecked();
                            if (chkDolorArticularModeradaDia11) {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada("S");
                                seguimientoInfluenza.setDolorArticularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia11)).setChecked(!chkDolorArticularModeradaDia11);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia11)).setChecked(!chkDolorArticularModeradaDia11);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 12:
                            boolean chkDolorArticularModeradaDia12 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia12)).isChecked();
                            if (chkDolorArticularModeradaDia12) {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada("S");
                                seguimientoInfluenza.setDolorArticularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia12)).setChecked(!chkDolorArticularModeradaDia12);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia12)).setChecked(!chkDolorArticularModeradaDia12);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 13:
                            boolean chkDolorArticularModeradaDia13 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia13)).isChecked();
                            if (chkDolorArticularModeradaDia13) {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada("S");
                                seguimientoInfluenza.setDolorArticularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia13)).setChecked(!chkDolorArticularModeradaDia13);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia13)).setChecked(!chkDolorArticularModeradaDia13);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 14:
                            boolean chkDolorArticularModeradaDia14 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia14)).isChecked();
                            if (chkDolorArticularModeradaDia14) {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada("S");
                                seguimientoInfluenza.setDolorArticularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia14)).setChecked(!chkDolorArticularModeradaDia14);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia14)).setChecked(!chkDolorArticularModeradaDia14);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 15:
                            boolean chkDolorArticularModeradaDia15 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia15)).isChecked();
                            if (chkDolorArticularModeradaDia15) {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada("S");
                                seguimientoInfluenza.setDolorArticularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia15)).setChecked(!chkDolorArticularModeradaDia15);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia15)).setChecked(!chkDolorArticularModeradaDia15);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 16:
                            boolean chkDolorArticularModeradaDia16 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia16)).isChecked();
                            if (chkDolorArticularModeradaDia16) {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada("S");
                                seguimientoInfluenza.setDolorArticularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia16)).setChecked(!chkDolorArticularModeradaDia16);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia16)).setChecked(!chkDolorArticularModeradaDia16);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 17:
                            boolean chkDolorArticularModeradaDia17 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia17)).isChecked();
                            if (chkDolorArticularModeradaDia17) {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada("S");
                                seguimientoInfluenza.setDolorArticularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia17)).setChecked(!chkDolorArticularModeradaDia17);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia17)).setChecked(!chkDolorArticularModeradaDia17);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 18:
                            boolean chkDolorArticularModeradaDia18 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia18)).isChecked();
                            if (chkDolorArticularModeradaDia18) {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada("S");
                                seguimientoInfluenza.setDolorArticularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia18)).setChecked(!chkDolorArticularModeradaDia18);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia18)).setChecked(!chkDolorArticularModeradaDia18);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 19:
                            boolean chkDolorArticularModeradaDia19 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia19)).isChecked();
                            if (chkDolorArticularModeradaDia19) {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada("S");
                                seguimientoInfluenza.setDolorArticularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia19)).setChecked(!chkDolorArticularModeradaDia19);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia19)).setChecked(!chkDolorArticularModeradaDia19);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 20:
                            boolean chkDolorArticularModeradaDia20 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia20)).isChecked();
                            if (chkDolorArticularModeradaDia20) {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada("S");
                                seguimientoInfluenza.setDolorArticularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia20)).setChecked(!chkDolorArticularModeradaDia20);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia20)).setChecked(!chkDolorArticularModeradaDia20);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 21:
                            boolean chkDolorArticularModeradaDia21 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia21)).isChecked();
                            if (chkDolorArticularModeradaDia21) {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada("S");
                                seguimientoInfluenza.setDolorArticularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia21)).setChecked(!chkDolorArticularModeradaDia21);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia21)).setChecked(!chkDolorArticularModeradaDia21);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 22:
                            boolean chkDolorArticularModeradaDia22 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia22)).isChecked();
                            if (chkDolorArticularModeradaDia22) {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada("S");
                                seguimientoInfluenza.setDolorArticularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia22)).setChecked(!chkDolorArticularModeradaDia22);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia22)).setChecked(!chkDolorArticularModeradaDia22);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 23:
                            boolean chkDolorArticularModeradaDia23 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia23)).isChecked();
                            if (chkDolorArticularModeradaDia23) {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada("S");
                                seguimientoInfluenza.setDolorArticularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia23)).setChecked(!chkDolorArticularModeradaDia23);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia23)).setChecked(!chkDolorArticularModeradaDia23);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 24:
                            boolean chkDolorArticularModeradaDia24 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia24)).isChecked();
                            if (chkDolorArticularModeradaDia24) {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada("S");
                                seguimientoInfluenza.setDolorArticularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia24)).setChecked(!chkDolorArticularModeradaDia24);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia24)).setChecked(!chkDolorArticularModeradaDia24);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 25:
                            boolean chkDolorArticularModeradaDia25 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia25)).isChecked();
                            if (chkDolorArticularModeradaDia25) {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada("S");
                                seguimientoInfluenza.setDolorArticularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia25)).setChecked(!chkDolorArticularModeradaDia25);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia25)).setChecked(!chkDolorArticularModeradaDia25);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 26:
                            boolean chkDolorArticularModeradaDia26 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia26)).isChecked();
                            if (chkDolorArticularModeradaDia26) {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada("S");
                                seguimientoInfluenza.setDolorArticularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia26)).setChecked(!chkDolorArticularModeradaDia26);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia26)).setChecked(!chkDolorArticularModeradaDia26);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 27:
                            boolean chkDolorArticularModeradaDia27 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia27)).isChecked();
                            if (chkDolorArticularModeradaDia27) {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada("S");
                                seguimientoInfluenza.setDolorArticularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia27)).setChecked(!chkDolorArticularModeradaDia27);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia27)).setChecked(!chkDolorArticularModeradaDia27);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 28:
                            boolean chkDolorArticularModeradaDia28 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia28)).isChecked();
                            if (chkDolorArticularModeradaDia28) {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada("S");
                                seguimientoInfluenza.setDolorArticularSevera(null);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia28)).setChecked(!chkDolorArticularModeradaDia28);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia28)).setChecked(!chkDolorArticularModeradaDia28);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                    }
                }
            }

            public void onChkDolorArticularSevera(View view) {
                SeguimientoInfluenzaDTO seguimientoInfluenza = obtenerNuevoSeguimientoPorDia(mPage);
                if (mSeguimientoInfluenzaActivity.adapter != null && seguimientoInfluenza != null) {
                    switch (mPage) {
                        case 1:
                            boolean chkDolorArticularSeveraDia1 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia1)).isChecked();
                            if (chkDolorArticularSeveraDia1) {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia1)).setChecked(!chkDolorArticularSeveraDia1);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia1)).setChecked(!chkDolorArticularSeveraDia1);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 2:
                            boolean chkDolorArticularSeveraDia2 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia2)).isChecked();
                            if (chkDolorArticularSeveraDia2) {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia2)).setChecked(!chkDolorArticularSeveraDia2);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia2)).setChecked(!chkDolorArticularSeveraDia2);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 3:
                            boolean chkDolorArticularSeveraDia3 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia3)).isChecked();
                            if (chkDolorArticularSeveraDia3) {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia3)).setChecked(!chkDolorArticularSeveraDia3);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia3)).setChecked(!chkDolorArticularSeveraDia3);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 4:
                            boolean chkDolorArticularSeveraDia4 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia4)).isChecked();
                            if (chkDolorArticularSeveraDia4) {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia4)).setChecked(!chkDolorArticularSeveraDia4);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia4)).setChecked(!chkDolorArticularSeveraDia4);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 5:
                            boolean chkDolorArticularSeveraDia5 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia5)).isChecked();
                            if (chkDolorArticularSeveraDia5) {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia5)).setChecked(!chkDolorArticularSeveraDia5);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia5)).setChecked(!chkDolorArticularSeveraDia5);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 6:
                            boolean chkDolorArticularSeveraDia6 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia6)).isChecked();
                            if (chkDolorArticularSeveraDia6) {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia6)).setChecked(!chkDolorArticularSeveraDia6);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia6)).setChecked(!chkDolorArticularSeveraDia6);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 7:
                            boolean chkDolorArticularSeveraDia7 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia7)).isChecked();
                            if (chkDolorArticularSeveraDia7) {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia7)).setChecked(!chkDolorArticularSeveraDia7);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia7)).setChecked(!chkDolorArticularSeveraDia7);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 8:
                            boolean chkDolorArticularSeveraDia8 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia8)).isChecked();
                            if (chkDolorArticularSeveraDia8) {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia8)).setChecked(!chkDolorArticularSeveraDia8);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia8)).setChecked(!chkDolorArticularSeveraDia8);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 9:
                            boolean chkDolorArticularSeveraDia9 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia9)).isChecked();
                            if (chkDolorArticularSeveraDia9) {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia9)).setChecked(!chkDolorArticularSeveraDia9);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia9)).setChecked(!chkDolorArticularSeveraDia9);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 10:
                            boolean chkDolorArticularSeveraDia10 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia10)).isChecked();
                            if (chkDolorArticularSeveraDia10) {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia10)).setChecked(!chkDolorArticularSeveraDia10);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia10)).setChecked(!chkDolorArticularSeveraDia10);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 11:
                            boolean chkDolorArticularSeveraDia11 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia11)).isChecked();
                            if (chkDolorArticularSeveraDia11) {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia11)).setChecked(!chkDolorArticularSeveraDia11);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia11)).setChecked(!chkDolorArticularSeveraDia11);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 12:
                            boolean chkDolorArticularSeveraDia12 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia12)).isChecked();
                            if (chkDolorArticularSeveraDia12) {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia12)).setChecked(!chkDolorArticularSeveraDia12);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia12)).setChecked(!chkDolorArticularSeveraDia12);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 13:
                            boolean chkDolorArticularSeveraDia13 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia13)).isChecked();
                            if (chkDolorArticularSeveraDia13) {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia13)).setChecked(!chkDolorArticularSeveraDia13);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia13)).setChecked(!chkDolorArticularSeveraDia13);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 14:
                            boolean chkDolorArticularSeveraDia14 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia14)).isChecked();
                            if (chkDolorArticularSeveraDia14) {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia14)).setChecked(!chkDolorArticularSeveraDia14);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia14)).setChecked(!chkDolorArticularSeveraDia14);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 15:
                            boolean chkDolorArticularSeveraDia15 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia15)).isChecked();
                            if (chkDolorArticularSeveraDia15) {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia15)).setChecked(!chkDolorArticularSeveraDia15);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia15)).setChecked(!chkDolorArticularSeveraDia15);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 16:
                            boolean chkDolorArticularSeveraDia16 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia16)).isChecked();
                            if (chkDolorArticularSeveraDia16) {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia16)).setChecked(!chkDolorArticularSeveraDia16);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia16)).setChecked(!chkDolorArticularSeveraDia16);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 17:
                            boolean chkDolorArticularSeveraDia17 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia17)).isChecked();
                            if (chkDolorArticularSeveraDia17) {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia17)).setChecked(!chkDolorArticularSeveraDia17);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia17)).setChecked(!chkDolorArticularSeveraDia17);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 18:
                            boolean chkDolorArticularSeveraDia18 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia18)).isChecked();
                            if (chkDolorArticularSeveraDia18) {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia18)).setChecked(!chkDolorArticularSeveraDia18);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia18)).setChecked(!chkDolorArticularSeveraDia18);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 19:
                            boolean chkDolorArticularSeveraDia19 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia19)).isChecked();
                            if (chkDolorArticularSeveraDia19) {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia19)).setChecked(!chkDolorArticularSeveraDia19);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia19)).setChecked(!chkDolorArticularSeveraDia19);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 20:
                            boolean chkDolorArticularSeveraDia20 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia20)).isChecked();
                            if (chkDolorArticularSeveraDia20) {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia20)).setChecked(!chkDolorArticularSeveraDia20);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia20)).setChecked(!chkDolorArticularSeveraDia20);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 21:
                            boolean chkDolorArticularSeveraDia21 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia21)).isChecked();
                            if (chkDolorArticularSeveraDia21) {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia21)).setChecked(!chkDolorArticularSeveraDia21);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia21)).setChecked(!chkDolorArticularSeveraDia21);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 22:
                            boolean chkDolorArticularSeveraDia22 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia22)).isChecked();
                            if (chkDolorArticularSeveraDia22) {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia22)).setChecked(!chkDolorArticularSeveraDia22);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia22)).setChecked(!chkDolorArticularSeveraDia22);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 23:
                            boolean chkDolorArticularSeveraDia23 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia23)).isChecked();
                            if (chkDolorArticularSeveraDia23) {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia23)).setChecked(!chkDolorArticularSeveraDia23);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia23)).setChecked(!chkDolorArticularSeveraDia23);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 24:
                            boolean chkDolorArticularSeveraDia24 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia24)).isChecked();
                            if (chkDolorArticularSeveraDia24) {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia24)).setChecked(!chkDolorArticularSeveraDia24);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia24)).setChecked(!chkDolorArticularSeveraDia24);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 25:
                            boolean chkDolorArticularSeveraDia25 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia25)).isChecked();
                            if (chkDolorArticularSeveraDia25) {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia25)).setChecked(!chkDolorArticularSeveraDia25);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia25)).setChecked(!chkDolorArticularSeveraDia25);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 26:
                            boolean chkDolorArticularSeveraDia26 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia26)).isChecked();
                            if (chkDolorArticularSeveraDia26) {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia26)).setChecked(!chkDolorArticularSeveraDia26);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia26)).setChecked(!chkDolorArticularSeveraDia26);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 27:
                            boolean chkDolorArticularSeveraDia27 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia27)).isChecked();
                            if (chkDolorArticularSeveraDia27) {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia27)).setChecked(!chkDolorArticularSeveraDia27);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia27)).setChecked(!chkDolorArticularSeveraDia27);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                        case 28:
                            boolean chkDolorArticularSeveraDia28 = ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia28)).isChecked();
                            if (chkDolorArticularSeveraDia28) {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera("S");
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia28)).setChecked(!chkDolorArticularSeveraDia28);
                                ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia28)).setChecked(!chkDolorArticularSeveraDia28);
                            } else {
                                seguimientoInfluenza.setDolorArticularLeve(null);
                                seguimientoInfluenza.setDolorArticularModerada(null);
                                seguimientoInfluenza.setDolorArticularSevera(null);
                            }
                            break;
                    }
                }
            }

            /*---------------------------*/
            public void cargarConsultaInicial(int position) {
                SeguimientoInfluenzaDTO seguimientoInfluenza = obtenerNuevoSeguimientoPorDia(mPage);
                if (mSeguimientoInfluenzaActivity.adapter != null && seguimientoInfluenza != null) {
                    seguimientoInfluenza.setConsultaInicial((mSeguimientoInfluenzaActivity.adapter.getItem(position).toString().compareTo("Seleccione") != 0) ?
                            mSeguimientoInfluenzaActivity.adapter.getItem(position).toString() : null);
                    //El secHojaInfluenza lo trae segFlu
                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                    if (segFlu != null) {
                        seguimientoInfluenza.setSecHojaInfluenza(segFlu.getSecHojaInfluenza());
                    }
                } else if (mSeguimientoInfluenzaActivity.adapter != null && mSeguimientoInfluenzaActivity.adapter.getItem(position).toString().compareTo("Seleccione") != 0) {
                    seguimientoInfluenza = new SeguimientoInfluenzaDTO();
                    seguimientoInfluenza.setControlDia(mPage);
                    seguimientoInfluenza.setConsultaInicial(mSeguimientoInfluenzaActivity.adapter.getItem(position).toString());
                    mSeguimientoInfluenzaActivity.nuevaListaSegInfluenza.add(seguimientoInfluenza);
                }
            }

            public void cargarFiebre(int position) {
                SeguimientoInfluenzaDTO seguimientoInfluenza = obtenerNuevoSeguimientoPorDia(mPage);
                if (mSeguimientoInfluenzaActivity.adapter != null && seguimientoInfluenza != null) {
                    seguimientoInfluenza.setFiebre((mSeguimientoInfluenzaActivity.adapter.getItem(position).toString().compareTo("Seleccione") != 0) ?
                            mSeguimientoInfluenzaActivity.adapter.getItem(position).toString() : null);
                    /*CAMBIO FIEBRE*/
                    if (seguimientoInfluenza.getFiebre() != null) {
                        switch (mPage) {
                            case 1:
                                if (seguimientoInfluenza.getFiebre().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);

                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutFiebreDia1).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutFiebreDia1).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkFiebreLeveDia1).setEnabled(false);
                                        getActivity().findViewById(R.id.chkFiebreModeradaDia1).setEnabled(false);
                                        getActivity().findViewById(R.id.chkFiebreSeveraDia1).setEnabled(false);
                                        if (segFlu.getFiebreLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia1)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia1)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreLeve(segFlu.getFiebreLeve());
                                        }
                                        if (segFlu.getFiebreModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia1)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia1)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreModerada(segFlu.getFiebreModerada());
                                        }
                                        if (segFlu.getFiebreSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia1)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia1)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreSevera(segFlu.getFiebreSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setFiebreLeve(null);
                                    seguimientoInfluenza.setFiebreModerada(null);
                                    seguimientoInfluenza.setFiebreSevera(null);
                                    getActivity().findViewById(R.id.layoutFiebreDia1).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia1)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia1)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia1)).setChecked(false);
                                }
                                break;
                            case 2:
                                if (seguimientoInfluenza.getFiebre().trim().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutFiebreDia2).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutFiebreDia2).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkFiebreLeveDia2).setEnabled(false);
                                        getActivity().findViewById(R.id.chkFiebreModeradaDia2).setEnabled(false);
                                        getActivity().findViewById(R.id.chkFiebreSeveraDia2).setEnabled(false);
                                        if (segFlu.getFiebreLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia2)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia2)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreLeve(segFlu.getFiebreLeve());
                                        }
                                        if (segFlu.getFiebreModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia2)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia2)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreModerada(segFlu.getFiebreModerada());
                                        }
                                        if (segFlu.getFiebreSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia2)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia2)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreSevera(segFlu.getFiebreSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setFiebreLeve(null);
                                    seguimientoInfluenza.setFiebreModerada(null);
                                    seguimientoInfluenza.setFiebreSevera(null);
                                    getActivity().findViewById(R.id.layoutFiebreDia2).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia2)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia2)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia2)).setChecked(false);
                                }
                                break;
                            case 3:
                                if (seguimientoInfluenza.getFiebre().trim().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutFiebreDia3).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutFiebreDia3).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkFiebreLeveDia3).setEnabled(false);
                                        getActivity().findViewById(R.id.chkFiebreModeradaDia3).setEnabled(false);
                                        getActivity().findViewById(R.id.chkFiebreSeveraDia3).setEnabled(false);
                                        if (segFlu.getFiebreLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia3)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia3)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreLeve(segFlu.getFiebreLeve());
                                        }
                                        if (segFlu.getFiebreModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia3)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia3)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreModerada(segFlu.getFiebreModerada());
                                        }
                                        if (segFlu.getFiebreSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia3)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia3)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreSevera(segFlu.getFiebreSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setFiebreLeve(null);
                                    seguimientoInfluenza.setFiebreModerada(null);
                                    seguimientoInfluenza.setFiebreSevera(null);
                                    getActivity().findViewById(R.id.layoutFiebreDia3).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia3)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia3)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia3)).setChecked(false);
                                }
                                break;
                            case 4:
                                if (seguimientoInfluenza.getFiebre().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutFiebreDia4).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutFiebreDia4).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkFiebreLeveDia4).setEnabled(false);
                                        getActivity().findViewById(R.id.chkFiebreModeradaDia4).setEnabled(false);
                                        getActivity().findViewById(R.id.chkFiebreSeveraDia4).setEnabled(false);
                                        if (segFlu.getFiebreLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia4)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia4)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreLeve(segFlu.getFiebreLeve());
                                        }
                                        if (segFlu.getFiebreModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia4)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia4)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreModerada(segFlu.getFiebreModerada());
                                        }
                                        if (segFlu.getFiebreSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia4)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia4)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreSevera(segFlu.getFiebreSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setFiebreLeve(null);
                                    seguimientoInfluenza.setFiebreModerada(null);
                                    seguimientoInfluenza.setFiebreSevera(null);
                                    getActivity().findViewById(R.id.layoutFiebreDia4).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia4)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia4)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia4)).setChecked(false);
                                }
                                break;
                            case 5:
                                if (seguimientoInfluenza.getFiebre().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutFiebreDia5).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutFiebreDia5).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkFiebreLeveDia5).setEnabled(false);
                                        getActivity().findViewById(R.id.chkFiebreModeradaDia5).setEnabled(false);
                                        getActivity().findViewById(R.id.chkFiebreSeveraDia5).setEnabled(false);
                                        if (segFlu.getFiebreLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia5)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia5)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreLeve(segFlu.getFiebreLeve());
                                        }
                                        if (segFlu.getFiebreModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia5)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia5)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreModerada(segFlu.getFiebreModerada());
                                        }
                                        if (segFlu.getFiebreSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia5)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia5)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreSevera(segFlu.getFiebreSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setFiebreLeve(null);
                                    seguimientoInfluenza.setFiebreModerada(null);
                                    seguimientoInfluenza.setFiebreSevera(null);
                                    getActivity().findViewById(R.id.layoutFiebreDia5).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia5)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia5)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia5)).setChecked(false);
                                }
                                break;
                            case 6:
                                if (seguimientoInfluenza.getFiebre().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutFiebreDia6).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutFiebreDia6).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkFiebreLeveDia6).setEnabled(false);
                                        getActivity().findViewById(R.id.chkFiebreModeradaDia6).setEnabled(false);
                                        getActivity().findViewById(R.id.chkFiebreSeveraDia6).setEnabled(false);
                                        if (segFlu.getFiebreLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia6)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia6)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreLeve(segFlu.getFiebreLeve());
                                        }
                                        if (segFlu.getFiebreModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia6)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia6)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreModerada(segFlu.getFiebreModerada());
                                        }
                                        if (segFlu.getFiebreSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia6)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia6)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreSevera(segFlu.getFiebreSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setFiebreLeve(null);
                                    seguimientoInfluenza.setFiebreModerada(null);
                                    seguimientoInfluenza.setFiebreSevera(null);
                                    getActivity().findViewById(R.id.layoutFiebreDia6).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia6)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia6)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia6)).setChecked(false);
                                }
                                break;
                            case 7:
                                if (seguimientoInfluenza.getFiebre().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutFiebreDia7).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutFiebreDia7).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkFiebreLeveDia7).setEnabled(false);
                                        getActivity().findViewById(R.id.chkFiebreModeradaDia7).setEnabled(false);
                                        getActivity().findViewById(R.id.chkFiebreSeveraDia7).setEnabled(false);
                                        if (segFlu.getFiebreLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia7)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia7)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreLeve(segFlu.getFiebreLeve());
                                        }
                                        if (segFlu.getFiebreModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia7)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia7)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreModerada(segFlu.getFiebreModerada());
                                        }
                                        if (segFlu.getFiebreSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia7)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia7)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreSevera(segFlu.getFiebreSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setFiebreLeve(null);
                                    seguimientoInfluenza.setFiebreModerada(null);
                                    seguimientoInfluenza.setFiebreSevera(null);
                                    getActivity().findViewById(R.id.layoutFiebreDia7).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia7)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia7)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia7)).setChecked(false);
                                }
                                break;
                            case 8:
                                if (seguimientoInfluenza.getFiebre().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutFiebreDia8).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutFiebreDia8).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkFiebreLeveDia8).setEnabled(false);
                                        getActivity().findViewById(R.id.chkFiebreModeradaDia8).setEnabled(false);
                                        getActivity().findViewById(R.id.chkFiebreSeveraDia8).setEnabled(false);
                                        if (segFlu.getFiebreLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia8)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia8)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreLeve(segFlu.getFiebreLeve());
                                        }
                                        if (segFlu.getFiebreModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia8)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia8)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreModerada(segFlu.getFiebreModerada());
                                        }
                                        if (segFlu.getFiebreSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia8)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia8)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreSevera(segFlu.getFiebreSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setFiebreLeve(null);
                                    seguimientoInfluenza.setFiebreModerada(null);
                                    seguimientoInfluenza.setFiebreSevera(null);
                                    getActivity().findViewById(R.id.layoutFiebreDia8).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia8)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia8)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia8)).setChecked(false);
                                }
                                break;
                            case 9:
                                if (seguimientoInfluenza.getFiebre().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutFiebreDia9).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutFiebreDia9).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkFiebreLeveDia9).setEnabled(false);
                                        getActivity().findViewById(R.id.chkFiebreModeradaDia9).setEnabled(false);
                                        getActivity().findViewById(R.id.chkFiebreSeveraDia9).setEnabled(false);
                                        if (segFlu.getFiebreLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia9)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia9)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreLeve(segFlu.getFiebreLeve());
                                        }
                                        if (segFlu.getFiebreModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia9)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia9)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreModerada(segFlu.getFiebreModerada());
                                        }
                                        if (segFlu.getFiebreSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia9)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia9)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreSevera(segFlu.getFiebreSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setFiebreLeve(null);
                                    seguimientoInfluenza.setFiebreModerada(null);
                                    seguimientoInfluenza.setFiebreSevera(null);
                                    getActivity().findViewById(R.id.layoutFiebreDia9).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia9)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia9)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia9)).setChecked(false);
                                }
                                break;
                            case 10:
                                if (seguimientoInfluenza.getFiebre().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutFiebreDia10).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutFiebreDia10).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkFiebreLeveDia10).setEnabled(false);
                                        getActivity().findViewById(R.id.chkFiebreModeradaDia10).setEnabled(false);
                                        getActivity().findViewById(R.id.chkFiebreSeveraDia10).setEnabled(false);
                                        if (segFlu.getFiebreLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia10)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia9)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreLeve(segFlu.getFiebreLeve());
                                        }
                                        if (segFlu.getFiebreModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia10)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia10)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreModerada(segFlu.getFiebreModerada());
                                        }
                                        if (segFlu.getFiebreSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia10)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia10)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreSevera(segFlu.getFiebreSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setFiebreLeve(null);
                                    seguimientoInfluenza.setFiebreModerada(null);
                                    seguimientoInfluenza.setFiebreSevera(null);
                                    getActivity().findViewById(R.id.layoutFiebreDia10).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia10)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia10)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia10)).setChecked(false);
                                }
                                break;
                            case 11:
                                if (seguimientoInfluenza.getFiebre().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutFiebreDia11).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutFiebreDia11).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkFiebreLeveDia11).setEnabled(false);
                                        getActivity().findViewById(R.id.chkFiebreModeradaDia11).setEnabled(false);
                                        getActivity().findViewById(R.id.chkFiebreSeveraDia11).setEnabled(false);
                                        if (segFlu.getFiebreLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia11)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia11)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreLeve(segFlu.getFiebreLeve());
                                        }
                                        if (segFlu.getFiebreModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia11)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia11)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreModerada(segFlu.getFiebreModerada());
                                        }
                                        if (segFlu.getFiebreSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia11)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia11)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreSevera(segFlu.getFiebreSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setFiebreLeve(null);
                                    seguimientoInfluenza.setFiebreModerada(null);
                                    seguimientoInfluenza.setFiebreSevera(null);
                                    getActivity().findViewById(R.id.layoutFiebreDia11).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia11)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia11)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia11)).setChecked(false);
                                }
                                break;
                            case 12:
                                if (seguimientoInfluenza.getFiebre().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutFiebreDia12).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutFiebreDia12).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkFiebreLeveDia12).setEnabled(false);
                                        getActivity().findViewById(R.id.chkFiebreModeradaDia12).setEnabled(false);
                                        getActivity().findViewById(R.id.chkFiebreSeveraDia12).setEnabled(false);
                                        if (segFlu.getFiebreLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia12)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia12)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreLeve(segFlu.getFiebreLeve());
                                        }
                                        if (segFlu.getFiebreModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia12)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia12)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreModerada(segFlu.getFiebreModerada());
                                        }
                                        if (segFlu.getFiebreSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia12)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia12)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreSevera(segFlu.getFiebreSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setFiebreLeve(null);
                                    seguimientoInfluenza.setFiebreModerada(null);
                                    seguimientoInfluenza.setFiebreSevera(null);
                                    getActivity().findViewById(R.id.layoutFiebreDia12).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia12)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia12)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia12)).setChecked(false);
                                }
                                break;
                            case 13:
                                if (seguimientoInfluenza.getFiebre().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutFiebreDia13).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutFiebreDia13).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkFiebreLeveDia13).setEnabled(false);
                                        getActivity().findViewById(R.id.chkFiebreModeradaDia13).setEnabled(false);
                                        getActivity().findViewById(R.id.chkFiebreSeveraDia13).setEnabled(false);
                                        if (segFlu.getFiebreLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia13)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia13)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreLeve(segFlu.getFiebreLeve());
                                        }
                                        if (segFlu.getFiebreModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia13)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia13)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreModerada(segFlu.getFiebreModerada());
                                        }
                                        if (segFlu.getFiebreSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia13)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia13)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreSevera(segFlu.getFiebreSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setFiebreLeve(null);
                                    seguimientoInfluenza.setFiebreModerada(null);
                                    seguimientoInfluenza.setFiebreSevera(null);
                                    getActivity().findViewById(R.id.layoutFiebreDia13).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia13)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia13)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia13)).setChecked(false);
                                }
                                break;
                            case 14:
                                if (seguimientoInfluenza.getFiebre().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutFiebreDia14).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutFiebreDia14).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkFiebreLeveDia14).setEnabled(false);
                                        getActivity().findViewById(R.id.chkFiebreModeradaDia14).setEnabled(false);
                                        getActivity().findViewById(R.id.chkFiebreSeveraDia14).setEnabled(false);
                                        if (segFlu.getFiebreLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia14)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia14)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreLeve(segFlu.getFiebreLeve());
                                        }
                                        if (segFlu.getFiebreModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia14)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia14)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreModerada(segFlu.getFiebreModerada());
                                        }
                                        if (segFlu.getFiebreSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia14)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia14)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreSevera(segFlu.getFiebreSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setFiebreLeve(null);
                                    seguimientoInfluenza.setFiebreModerada(null);
                                    seguimientoInfluenza.setFiebreSevera(null);
                                    getActivity().findViewById(R.id.layoutFiebreDia14).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia14)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia14)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia14)).setChecked(false);
                                }
                                break;
                            case 15:
                                if (seguimientoInfluenza.getFiebre().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutFiebreDia15).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutFiebreDia15).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkFiebreLeveDia15).setEnabled(false);
                                        getActivity().findViewById(R.id.chkFiebreModeradaDia15).setEnabled(false);
                                        getActivity().findViewById(R.id.chkFiebreSeveraDia15).setEnabled(false);
                                        if (segFlu.getFiebreLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia15)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia15)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreLeve(segFlu.getFiebreLeve());
                                        }
                                        if (segFlu.getFiebreModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia15)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia15)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreModerada(segFlu.getFiebreModerada());
                                        }
                                        if (segFlu.getFiebreSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia15)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia15)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreSevera(segFlu.getFiebreSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setFiebreLeve(null);
                                    seguimientoInfluenza.setFiebreModerada(null);
                                    seguimientoInfluenza.setFiebreSevera(null);
                                    getActivity().findViewById(R.id.layoutFiebreDia15).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia15)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia15)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia15)).setChecked(false);
                                }
                                break;
                            case 16:
                                if (seguimientoInfluenza.getFiebre().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutFiebreDia16).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutFiebreDia16).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkFiebreLeveDia16).setEnabled(false);
                                        getActivity().findViewById(R.id.chkFiebreModeradaDia16).setEnabled(false);
                                        getActivity().findViewById(R.id.chkFiebreSeveraDia16).setEnabled(false);
                                        if (segFlu.getFiebreLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia16)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia16)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreLeve(segFlu.getFiebreLeve());
                                        }
                                        if (segFlu.getFiebreModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia16)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia16)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreModerada(segFlu.getFiebreModerada());
                                        }
                                        if (segFlu.getFiebreSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia16)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia16)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreSevera(segFlu.getFiebreSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setFiebreLeve(null);
                                    seguimientoInfluenza.setFiebreModerada(null);
                                    seguimientoInfluenza.setFiebreSevera(null);
                                    getActivity().findViewById(R.id.layoutFiebreDia16).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia16)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia16)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia16)).setChecked(false);
                                }
                                break;
                            case 17:
                                if (seguimientoInfluenza.getFiebre().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutFiebreDia17).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutFiebreDia17).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkFiebreLeveDia17).setEnabled(false);
                                        getActivity().findViewById(R.id.chkFiebreModeradaDia17).setEnabled(false);
                                        getActivity().findViewById(R.id.chkFiebreSeveraDia17).setEnabled(false);
                                        if (segFlu.getFiebreLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia17)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia17)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreLeve(segFlu.getFiebreLeve());
                                        }
                                        if (segFlu.getFiebreModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia17)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia17)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreModerada(segFlu.getFiebreModerada());
                                        }
                                        if (segFlu.getFiebreSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia17)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia17)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreSevera(segFlu.getFiebreSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setFiebreLeve(null);
                                    seguimientoInfluenza.setFiebreModerada(null);
                                    seguimientoInfluenza.setFiebreSevera(null);
                                    getActivity().findViewById(R.id.layoutFiebreDia17).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia17)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia17)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia17)).setChecked(false);
                                }
                                break;
                            case 18:
                                if (seguimientoInfluenza.getFiebre().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutFiebreDia18).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutFiebreDia18).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkFiebreLeveDia18).setEnabled(false);
                                        getActivity().findViewById(R.id.chkFiebreModeradaDia18).setEnabled(false);
                                        getActivity().findViewById(R.id.chkFiebreSeveraDia18).setEnabled(false);
                                        if (segFlu.getFiebreLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia18)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia18)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreLeve(segFlu.getFiebreLeve());
                                        }
                                        if (segFlu.getFiebreModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia18)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia18)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreModerada(segFlu.getFiebreModerada());
                                        }
                                        if (segFlu.getFiebreSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia18)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia18)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreSevera(segFlu.getFiebreSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setFiebreLeve(null);
                                    seguimientoInfluenza.setFiebreModerada(null);
                                    seguimientoInfluenza.setFiebreSevera(null);
                                    getActivity().findViewById(R.id.layoutFiebreDia18).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia18)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia18)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia18)).setChecked(false);
                                }
                                break;
                            case 19:
                                if (seguimientoInfluenza.getFiebre().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutFiebreDia19).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutFiebreDia19).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkFiebreLeveDia19).setEnabled(false);
                                        getActivity().findViewById(R.id.chkFiebreModeradaDia19).setEnabled(false);
                                        getActivity().findViewById(R.id.chkFiebreSeveraDia19).setEnabled(false);
                                        if (segFlu.getFiebreLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia19)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia19)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreLeve(segFlu.getFiebreLeve());
                                        }
                                        if (segFlu.getFiebreModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia19)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia19)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreModerada(segFlu.getFiebreModerada());
                                        }
                                        if (segFlu.getFiebreSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia19)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia19)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreSevera(segFlu.getFiebreSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setFiebreLeve(null);
                                    seguimientoInfluenza.setFiebreModerada(null);
                                    seguimientoInfluenza.setFiebreSevera(null);
                                    getActivity().findViewById(R.id.layoutFiebreDia19).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia19)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia19)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia19)).setChecked(false);
                                }
                                break;
                            case 20:
                                if (seguimientoInfluenza.getFiebre().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutFiebreDia20).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutFiebreDia20).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkFiebreLeveDia20).setEnabled(false);
                                        getActivity().findViewById(R.id.chkFiebreModeradaDia20).setEnabled(false);
                                        getActivity().findViewById(R.id.chkFiebreSeveraDia20).setEnabled(false);
                                        if (segFlu.getFiebreLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia20)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia20)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreLeve(segFlu.getFiebreLeve());
                                        }
                                        if (segFlu.getFiebreModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia20)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia20)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreModerada(segFlu.getFiebreModerada());
                                        }
                                        if (segFlu.getFiebreSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia20)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia20)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreSevera(segFlu.getFiebreSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setFiebreLeve(null);
                                    seguimientoInfluenza.setFiebreModerada(null);
                                    seguimientoInfluenza.setFiebreSevera(null);
                                    getActivity().findViewById(R.id.layoutFiebreDia20).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia20)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia20)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia20)).setChecked(false);
                                }
                                break;
                            case 21:
                                if (seguimientoInfluenza.getFiebre().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutFiebreDia21).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutFiebreDia21).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkFiebreLeveDia21).setEnabled(false);
                                        getActivity().findViewById(R.id.chkFiebreModeradaDia21).setEnabled(false);
                                        getActivity().findViewById(R.id.chkFiebreSeveraDia21).setEnabled(false);
                                        if (segFlu.getFiebreLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia21)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia21)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreLeve(segFlu.getFiebreLeve());
                                        }
                                        if (segFlu.getFiebreModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia21)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia21)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreModerada(segFlu.getFiebreModerada());
                                        }
                                        if (segFlu.getFiebreSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia21)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia21)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreSevera(segFlu.getFiebreSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setFiebreLeve(null);
                                    seguimientoInfluenza.setFiebreModerada(null);
                                    seguimientoInfluenza.setFiebreSevera(null);
                                    getActivity().findViewById(R.id.layoutFiebreDia21).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia21)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia21)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia21)).setChecked(false);
                                }
                                break;
                            case 22:
                                if (seguimientoInfluenza.getFiebre().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutFiebreDia22).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutFiebreDia22).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkFiebreLeveDia22).setEnabled(false);
                                        getActivity().findViewById(R.id.chkFiebreModeradaDia22).setEnabled(false);
                                        getActivity().findViewById(R.id.chkFiebreSeveraDia22).setEnabled(false);
                                        if (segFlu.getFiebreLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia22)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia22)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreLeve(segFlu.getFiebreLeve());
                                        }
                                        if (segFlu.getFiebreModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia22)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia22)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreModerada(segFlu.getFiebreModerada());
                                        }
                                        if (segFlu.getFiebreSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia22)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia22)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreSevera(segFlu.getFiebreSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setFiebreLeve(null);
                                    seguimientoInfluenza.setFiebreModerada(null);
                                    seguimientoInfluenza.setFiebreSevera(null);
                                    getActivity().findViewById(R.id.layoutFiebreDia22).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia22)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia22)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia22)).setChecked(false);
                                }
                                break;
                            case 23:
                                if (seguimientoInfluenza.getFiebre().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutFiebreDia23).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutFiebreDia23).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkFiebreLeveDia23).setEnabled(false);
                                        getActivity().findViewById(R.id.chkFiebreModeradaDia23).setEnabled(false);
                                        getActivity().findViewById(R.id.chkFiebreSeveraDia23).setEnabled(false);
                                        if (segFlu.getFiebreLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia23)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia23)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreLeve(segFlu.getFiebreLeve());
                                        }
                                        if (segFlu.getFiebreModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia23)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia23)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreModerada(segFlu.getFiebreModerada());
                                        }
                                        if (segFlu.getFiebreSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia23)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia23)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreSevera(segFlu.getFiebreSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setFiebreLeve(null);
                                    seguimientoInfluenza.setFiebreModerada(null);
                                    seguimientoInfluenza.setFiebreSevera(null);
                                    getActivity().findViewById(R.id.layoutFiebreDia23).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia23)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia23)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia23)).setChecked(false);
                                }
                                break;
                            case 24:
                                if (seguimientoInfluenza.getFiebre().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutFiebreDia24).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutFiebreDia24).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkFiebreLeveDia24).setEnabled(false);
                                        getActivity().findViewById(R.id.chkFiebreModeradaDia24).setEnabled(false);
                                        getActivity().findViewById(R.id.chkFiebreSeveraDia24).setEnabled(false);
                                        if (segFlu.getFiebreLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia24)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia24)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreLeve(segFlu.getFiebreLeve());
                                        }
                                        if (segFlu.getFiebreModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia24)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia24)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreModerada(segFlu.getFiebreModerada());
                                        }
                                        if (segFlu.getFiebreSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia24)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia24)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreSevera(segFlu.getFiebreSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setFiebreLeve(null);
                                    seguimientoInfluenza.setFiebreModerada(null);
                                    seguimientoInfluenza.setFiebreSevera(null);
                                    getActivity().findViewById(R.id.layoutFiebreDia24).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia24)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia24)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia24)).setChecked(false);
                                }
                                break;
                            case 25:
                                if (seguimientoInfluenza.getFiebre().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutFiebreDia25).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutFiebreDia25).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkFiebreLeveDia25).setEnabled(false);
                                        getActivity().findViewById(R.id.chkFiebreModeradaDia25).setEnabled(false);
                                        getActivity().findViewById(R.id.chkFiebreSeveraDia25).setEnabled(false);
                                        if (segFlu.getFiebreLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia25)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia25)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreLeve(segFlu.getFiebreLeve());
                                        }
                                        if (segFlu.getFiebreModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia25)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia25)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreModerada(segFlu.getFiebreModerada());
                                        }
                                        if (segFlu.getFiebreSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia25)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia25)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreSevera(segFlu.getFiebreSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setFiebreLeve(null);
                                    seguimientoInfluenza.setFiebreModerada(null);
                                    seguimientoInfluenza.setFiebreSevera(null);
                                    getActivity().findViewById(R.id.layoutFiebreDia25).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia25)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia25)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia25)).setChecked(false);
                                }
                                break;
                            case 26:
                                if (seguimientoInfluenza.getFiebre().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutFiebreDia26).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutFiebreDia26).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkFiebreLeveDia26).setEnabled(false);
                                        getActivity().findViewById(R.id.chkFiebreModeradaDia26).setEnabled(false);
                                        getActivity().findViewById(R.id.chkFiebreSeveraDia26).setEnabled(false);
                                        if (segFlu.getFiebreLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia26)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia26)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreLeve(segFlu.getFiebreLeve());
                                        }
                                        if (segFlu.getFiebreModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia26)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia26)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreModerada(segFlu.getFiebreModerada());
                                        }
                                        if (segFlu.getFiebreSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia26)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia26)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreSevera(segFlu.getFiebreSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setFiebreLeve(null);
                                    seguimientoInfluenza.setFiebreModerada(null);
                                    seguimientoInfluenza.setFiebreSevera(null);
                                    getActivity().findViewById(R.id.layoutFiebreDia26).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia26)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia26)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia26)).setChecked(false);
                                }
                                break;
                            case 27:
                                if (seguimientoInfluenza.getFiebre().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutFiebreDia27).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutFiebreDia27).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkFiebreLeveDia27).setEnabled(false);
                                        getActivity().findViewById(R.id.chkFiebreModeradaDia27).setEnabled(false);
                                        getActivity().findViewById(R.id.chkFiebreSeveraDia27).setEnabled(false);
                                        if (segFlu.getFiebreLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia27)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia27)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreLeve(segFlu.getFiebreLeve());
                                        }
                                        if (segFlu.getFiebreModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia27)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia27)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreModerada(segFlu.getFiebreModerada());
                                        }
                                        if (segFlu.getFiebreSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia27)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia27)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreSevera(segFlu.getFiebreSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setFiebreLeve(null);
                                    seguimientoInfluenza.setFiebreModerada(null);
                                    seguimientoInfluenza.setFiebreSevera(null);
                                    getActivity().findViewById(R.id.layoutFiebreDia27).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia27)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia27)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia27)).setChecked(false);
                                }
                                break;
                            case 28:
                                if (seguimientoInfluenza.getFiebre().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutFiebreDia28).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutFiebreDia28).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkFiebreLeveDia28).setEnabled(false);
                                        getActivity().findViewById(R.id.chkFiebreModeradaDia28).setEnabled(false);
                                        getActivity().findViewById(R.id.chkFiebreSeveraDia28).setEnabled(false);
                                        if (segFlu.getFiebreLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia28)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia28)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreLeve(segFlu.getFiebreLeve());
                                        }
                                        if (segFlu.getFiebreModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia28)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia28)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreModerada(segFlu.getFiebreModerada());
                                        }
                                        if (segFlu.getFiebreSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia28)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia28)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setFiebreSevera(segFlu.getFiebreSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setFiebreLeve(null);
                                    seguimientoInfluenza.setFiebreModerada(null);
                                    seguimientoInfluenza.setFiebreSevera(null);
                                    getActivity().findViewById(R.id.layoutFiebreDia28).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreLeveDia28)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreModeradaDia28)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkFiebreSeveraDia28)).setChecked(false);
                                }
                                break;
                        }
                    }
                } else if (mSeguimientoInfluenzaActivity.adapter != null && mSeguimientoInfluenzaActivity.adapter.getItem(position).toString().compareTo("Seleccione") != 0) {
                    seguimientoInfluenza = new SeguimientoInfluenzaDTO();
                    seguimientoInfluenza.setControlDia(mPage);
                    seguimientoInfluenza.setFiebre(mSeguimientoInfluenzaActivity.adapter.getItem(position).toString());
                    mSeguimientoInfluenzaActivity.nuevaListaSegInfluenza.add(seguimientoInfluenza);
                }
            }

            public void cargarTos(int position) {
                SeguimientoInfluenzaDTO seguimientoInfluenza = obtenerNuevoSeguimientoPorDia(mPage);
                if (mSeguimientoInfluenzaActivity.adapter != null && seguimientoInfluenza != null) {
                    seguimientoInfluenza.setTos((mSeguimientoInfluenzaActivity.adapter.getItem(position).toString().compareTo("Seleccione") != 0) ?
                            mSeguimientoInfluenzaActivity.adapter.getItem(position).toString() : null);
                    /*CAMBIO TOS*/
                    if (seguimientoInfluenza.getTos() != null) {
                        switch (mPage) {
                            case 1:
                                if (seguimientoInfluenza.getTos().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutTosDia1).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutTosDia1).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkTosLeveDia1).setEnabled(false);
                                        getActivity().findViewById(R.id.chkTosModeradaDia1).setEnabled(false);
                                        getActivity().findViewById(R.id.chkTosSeveraDia1).setEnabled(false);
                                        if (segFlu.getTosLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia1)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia1)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosLeve(segFlu.getTosLeve());
                                        }
                                        if (segFlu.getTosModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia1)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia1)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosModerada(segFlu.getTosModerada());
                                        }
                                        if (segFlu.getTosSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia1)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia1)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosSevera(segFlu.getTosSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setTosLeve(null);
                                    seguimientoInfluenza.setTosModerada(null);
                                    seguimientoInfluenza.setTosSevera(null);
                                    getActivity().findViewById(R.id.layoutTosDia1).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia1)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia1)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia1)).setChecked(false);
                                }
                                break;
                            case 2:
                                if (seguimientoInfluenza.getTos().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutTosDia2).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutTosDia2).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkTosLeveDia2).setEnabled(false);
                                        getActivity().findViewById(R.id.chkTosModeradaDia2).setEnabled(false);
                                        getActivity().findViewById(R.id.chkTosSeveraDia2).setEnabled(false);
                                        if (segFlu.getTosLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia2)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia2)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosLeve(segFlu.getTosLeve());
                                        }
                                        if (segFlu.getTosModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia2)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia2)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosModerada(segFlu.getTosModerada());
                                        }
                                        if (segFlu.getTosSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia2)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia2)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosSevera(segFlu.getTosSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setTosLeve(null);
                                    seguimientoInfluenza.setTosModerada(null);
                                    seguimientoInfluenza.setTosSevera(null);
                                    getActivity().findViewById(R.id.layoutTosDia2).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia2)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia2)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia2)).setChecked(false);
                                }
                                break;
                            case 3:
                                if (seguimientoInfluenza.getTos().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutTosDia3).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutTosDia3).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkTosLeveDia3).setEnabled(false);
                                        getActivity().findViewById(R.id.chkTosModeradaDia3).setEnabled(false);
                                        getActivity().findViewById(R.id.chkTosSeveraDia3).setEnabled(false);
                                        if (segFlu.getTosLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia3)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia3)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosLeve(segFlu.getTosLeve());
                                        }
                                        if (segFlu.getTosModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia3)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia3)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosModerada(segFlu.getTosModerada());
                                        }
                                        if (segFlu.getTosSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia3)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia3)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosSevera(segFlu.getTosSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setTosLeve(null);
                                    seguimientoInfluenza.setTosModerada(null);
                                    seguimientoInfluenza.setTosSevera(null);
                                    getActivity().findViewById(R.id.layoutTosDia3).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia3)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia3)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia3)).setChecked(false);
                                }
                                break;
                            case 4:
                                if (seguimientoInfluenza.getTos().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutTosDia4).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutTosDia4).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkTosLeveDia4).setEnabled(false);
                                        getActivity().findViewById(R.id.chkTosModeradaDia4).setEnabled(false);
                                        getActivity().findViewById(R.id.chkTosSeveraDia4).setEnabled(false);
                                        if (segFlu.getTosLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia4)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia4)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosLeve(segFlu.getTosLeve());
                                        }
                                        if (segFlu.getTosModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia4)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia4)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosModerada(segFlu.getTosModerada());
                                        }
                                        if (segFlu.getTosSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia4)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia4)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosSevera(segFlu.getTosSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setTosLeve(null);
                                    seguimientoInfluenza.setTosModerada(null);
                                    seguimientoInfluenza.setTosSevera(null);
                                    getActivity().findViewById(R.id.layoutTosDia4).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia4)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia4)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia4)).setChecked(false);
                                }
                                break;
                            case 5:
                                if (seguimientoInfluenza.getTos().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutTosDia5).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutTosDia5).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkTosLeveDia5).setEnabled(false);
                                        getActivity().findViewById(R.id.chkTosModeradaDia5).setEnabled(false);
                                        getActivity().findViewById(R.id.chkTosSeveraDia5).setEnabled(false);
                                        if (segFlu.getTosLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia5)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia5)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosLeve(segFlu.getTosLeve());
                                        }
                                        if (segFlu.getTosModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia5)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia5)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosModerada(segFlu.getTosModerada());
                                        }
                                        if (segFlu.getTosSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia5)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia5)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosSevera(segFlu.getTosSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setTosLeve(null);
                                    seguimientoInfluenza.setTosModerada(null);
                                    seguimientoInfluenza.setTosSevera(null);
                                    getActivity().findViewById(R.id.layoutTosDia5).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia5)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia5)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia5)).setChecked(false);
                                }
                                break;
                            case 6:
                                if (seguimientoInfluenza.getTos().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutTosDia6).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutTosDia6).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkTosLeveDia6).setEnabled(false);
                                        getActivity().findViewById(R.id.chkTosModeradaDia6).setEnabled(false);
                                        getActivity().findViewById(R.id.chkTosSeveraDia6).setEnabled(false);
                                        if (segFlu.getTosLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia6)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia6)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosLeve(segFlu.getTosLeve());
                                        }
                                        if (segFlu.getTosModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia6)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia6)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosModerada(segFlu.getTosModerada());
                                        }
                                        if (segFlu.getTosSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia6)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia6)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosSevera(segFlu.getTosSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setTosLeve(null);
                                    seguimientoInfluenza.setTosModerada(null);
                                    seguimientoInfluenza.setTosSevera(null);
                                    getActivity().findViewById(R.id.layoutTosDia6).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia6)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia6)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia6)).setChecked(false);
                                }
                                break;
                            case 7:
                                if (seguimientoInfluenza.getTos().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutTosDia7).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutTosDia7).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkTosLeveDia7).setEnabled(false);
                                        getActivity().findViewById(R.id.chkTosModeradaDia7).setEnabled(false);
                                        getActivity().findViewById(R.id.chkTosSeveraDia7).setEnabled(false);
                                        if (segFlu.getTosLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia7)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia7)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosLeve(segFlu.getTosLeve());
                                        }
                                        if (segFlu.getTosModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia7)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia7)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosModerada(segFlu.getTosModerada());
                                        }
                                        if (segFlu.getTosSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia7)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia7)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosSevera(segFlu.getTosSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setTosLeve(null);
                                    seguimientoInfluenza.setTosModerada(null);
                                    seguimientoInfluenza.setTosSevera(null);
                                    getActivity().findViewById(R.id.layoutTosDia7).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia7)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia7)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia7)).setChecked(false);
                                }
                                break;
                            case 8:
                                if (seguimientoInfluenza.getTos().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutTosDia8).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutTosDia8).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkTosLeveDia8).setEnabled(false);
                                        getActivity().findViewById(R.id.chkTosModeradaDia8).setEnabled(false);
                                        getActivity().findViewById(R.id.chkTosSeveraDia8).setEnabled(false);
                                        if (segFlu.getTosLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia8)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia8)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosLeve(segFlu.getTosLeve());
                                        }
                                        if (segFlu.getTosModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia8)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia8)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosModerada(segFlu.getTosModerada());
                                        }
                                        if (segFlu.getTosSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia8)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia8)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosSevera(segFlu.getTosSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setTosLeve(null);
                                    seguimientoInfluenza.setTosModerada(null);
                                    seguimientoInfluenza.setTosSevera(null);
                                    getActivity().findViewById(R.id.layoutTosDia8).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia8)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia8)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia8)).setChecked(false);
                                }
                                break;
                            case 9:
                                if (seguimientoInfluenza.getTos().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutTosDia9).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutTosDia9).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkTosLeveDia9).setEnabled(false);
                                        getActivity().findViewById(R.id.chkTosModeradaDia9).setEnabled(false);
                                        getActivity().findViewById(R.id.chkTosSeveraDia9).setEnabled(false);
                                        if (segFlu.getTosLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia9)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia9)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosLeve(segFlu.getTosLeve());
                                        }
                                        if (segFlu.getTosModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia9)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia9)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosModerada(segFlu.getTosModerada());
                                        }
                                        if (segFlu.getTosSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia9)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia9)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosSevera(segFlu.getTosSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setTosLeve(null);
                                    seguimientoInfluenza.setTosModerada(null);
                                    seguimientoInfluenza.setTosSevera(null);
                                    getActivity().findViewById(R.id.layoutTosDia9).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia9)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia9)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia9)).setChecked(false);
                                }
                                break;
                            case 10:
                                if (seguimientoInfluenza.getTos().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutTosDia10).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutTosDia10).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkTosLeveDia10).setEnabled(false);
                                        getActivity().findViewById(R.id.chkTosModeradaDia10).setEnabled(false);
                                        getActivity().findViewById(R.id.chkTosSeveraDia10).setEnabled(false);
                                        if (segFlu.getTosLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia10)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia10)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosLeve(segFlu.getTosLeve());
                                        }
                                        if (segFlu.getTosModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia10)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia10)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosModerada(segFlu.getTosModerada());
                                        }
                                        if (segFlu.getTosSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia10)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia10)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosSevera(segFlu.getTosSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setTosLeve(null);
                                    seguimientoInfluenza.setTosModerada(null);
                                    seguimientoInfluenza.setTosSevera(null);
                                    getActivity().findViewById(R.id.layoutTosDia10).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia10)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia10)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia10)).setChecked(false);
                                }
                                break;
                            case 11:
                                if (seguimientoInfluenza.getTos().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutTosDia11).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutTosDia11).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkTosLeveDia11).setEnabled(false);
                                        getActivity().findViewById(R.id.chkTosModeradaDia11).setEnabled(false);
                                        getActivity().findViewById(R.id.chkTosSeveraDia11).setEnabled(false);
                                        if (segFlu.getTosLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia11)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia11)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosLeve(segFlu.getTosLeve());
                                        }
                                        if (segFlu.getTosModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia11)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia11)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosModerada(segFlu.getTosModerada());
                                        }
                                        if (segFlu.getTosSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia11)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia11)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosSevera(segFlu.getTosSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setTosLeve(null);
                                    seguimientoInfluenza.setTosModerada(null);
                                    seguimientoInfluenza.setTosSevera(null);
                                    getActivity().findViewById(R.id.layoutTosDia11).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia11)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia11)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia11)).setChecked(false);
                                }
                                break;
                            case 12:
                                if (seguimientoInfluenza.getTos().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutTosDia12).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutTosDia12).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkTosLeveDia12).setEnabled(false);
                                        getActivity().findViewById(R.id.chkTosModeradaDia12).setEnabled(false);
                                        getActivity().findViewById(R.id.chkTosSeveraDia12).setEnabled(false);
                                        if (segFlu.getTosLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia12)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia12)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosLeve(segFlu.getTosLeve());
                                        }
                                        if (segFlu.getTosModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia12)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia12)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosModerada(segFlu.getTosModerada());
                                        }
                                        if (segFlu.getTosSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia12)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia12)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosSevera(segFlu.getTosSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setTosLeve(null);
                                    seguimientoInfluenza.setTosModerada(null);
                                    seguimientoInfluenza.setTosSevera(null);
                                    getActivity().findViewById(R.id.layoutTosDia12).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia12)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia12)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia12)).setChecked(false);
                                }
                                break;
                            case 13:
                                if (seguimientoInfluenza.getTos().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutTosDia13).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutTosDia13).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkTosLeveDia13).setEnabled(false);
                                        getActivity().findViewById(R.id.chkTosModeradaDia13).setEnabled(false);
                                        getActivity().findViewById(R.id.chkTosSeveraDia13).setEnabled(false);
                                        if (segFlu.getTosLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia13)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia13)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosLeve(segFlu.getTosLeve());
                                        }
                                        if (segFlu.getTosModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia13)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia13)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosModerada(segFlu.getTosModerada());
                                        }
                                        if (segFlu.getTosSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia13)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia13)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosSevera(segFlu.getTosSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setTosLeve(null);
                                    seguimientoInfluenza.setTosModerada(null);
                                    seguimientoInfluenza.setTosSevera(null);
                                    getActivity().findViewById(R.id.layoutTosDia13).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia13)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia13)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia13)).setChecked(false);
                                }
                                break;
                            case 14:
                                if (seguimientoInfluenza.getTos().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutTosDia14).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutTosDia14).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkTosLeveDia14).setEnabled(false);
                                        getActivity().findViewById(R.id.chkTosModeradaDia14).setEnabled(false);
                                        getActivity().findViewById(R.id.chkTosSeveraDia14).setEnabled(false);
                                        if (segFlu.getTosLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia14)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia14)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosLeve(segFlu.getTosLeve());
                                        }
                                        if (segFlu.getTosModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia14)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia14)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosModerada(segFlu.getTosModerada());
                                        }
                                        if (segFlu.getTosSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia14)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia14)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosSevera(segFlu.getTosSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setTosLeve(null);
                                    seguimientoInfluenza.setTosModerada(null);
                                    seguimientoInfluenza.setTosSevera(null);
                                    getActivity().findViewById(R.id.layoutTosDia14).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia14)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia14)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia14)).setChecked(false);
                                }
                                break;
                            case 15:
                                if (seguimientoInfluenza.getTos().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutTosDia15).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutTosDia15).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkTosLeveDia15).setEnabled(false);
                                        getActivity().findViewById(R.id.chkTosModeradaDia15).setEnabled(false);
                                        getActivity().findViewById(R.id.chkTosSeveraDia15).setEnabled(false);
                                        if (segFlu.getTosLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia15)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia15)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosLeve(segFlu.getTosLeve());
                                        }
                                        if (segFlu.getTosModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia15)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia15)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosModerada(segFlu.getTosModerada());
                                        }
                                        if (segFlu.getTosSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia15)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia15)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosSevera(segFlu.getTosSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setTosLeve(null);
                                    seguimientoInfluenza.setTosModerada(null);
                                    seguimientoInfluenza.setTosSevera(null);
                                    getActivity().findViewById(R.id.layoutTosDia15).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia15)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia15)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia15)).setChecked(false);
                                }
                                break;
                            case 16:
                                if (seguimientoInfluenza.getTos().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutTosDia16).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutTosDia16).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkTosLeveDia16).setEnabled(false);
                                        getActivity().findViewById(R.id.chkTosModeradaDia16).setEnabled(false);
                                        getActivity().findViewById(R.id.chkTosSeveraDia16).setEnabled(false);
                                        if (segFlu.getTosLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia16)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia16)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosLeve(segFlu.getTosLeve());
                                        }
                                        if (segFlu.getTosModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia16)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia16)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosModerada(segFlu.getTosModerada());
                                        }
                                        if (segFlu.getTosSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia16)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia16)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosSevera(segFlu.getTosSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setTosLeve(null);
                                    seguimientoInfluenza.setTosModerada(null);
                                    seguimientoInfluenza.setTosSevera(null);
                                    getActivity().findViewById(R.id.layoutTosDia16).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia16)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia16)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia16)).setChecked(false);
                                }
                                break;
                            case 17:
                                if (seguimientoInfluenza.getTos().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutTosDia17).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutTosDia17).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkTosLeveDia17).setEnabled(false);
                                        getActivity().findViewById(R.id.chkTosModeradaDia17).setEnabled(false);
                                        getActivity().findViewById(R.id.chkTosSeveraDia17).setEnabled(false);
                                        if (segFlu.getTosLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia17)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia17)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosLeve(segFlu.getTosLeve());
                                        }
                                        if (segFlu.getTosModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia17)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia17)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosModerada(segFlu.getTosModerada());
                                        }
                                        if (segFlu.getTosSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia17)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia17)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosSevera(segFlu.getTosSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setTosLeve(null);
                                    seguimientoInfluenza.setTosModerada(null);
                                    seguimientoInfluenza.setTosSevera(null);
                                    getActivity().findViewById(R.id.layoutTosDia17).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia17)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia17)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia17)).setChecked(false);
                                }
                                break;
                            case 18:
                                if (seguimientoInfluenza.getTos().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutTosDia18).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutTosDia18).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkTosLeveDia18).setEnabled(false);
                                        getActivity().findViewById(R.id.chkTosModeradaDia18).setEnabled(false);
                                        getActivity().findViewById(R.id.chkTosSeveraDia18).setEnabled(false);
                                        if (segFlu.getTosLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia18)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia18)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosLeve(segFlu.getTosLeve());
                                        }
                                        if (segFlu.getTosModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia18)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia18)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosModerada(segFlu.getTosModerada());
                                        }
                                        if (segFlu.getTosSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia18)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia18)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosSevera(segFlu.getTosSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setTosLeve(null);
                                    seguimientoInfluenza.setTosModerada(null);
                                    seguimientoInfluenza.setTosSevera(null);
                                    getActivity().findViewById(R.id.layoutTosDia18).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia18)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia18)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia18)).setChecked(false);
                                }
                                break;
                            case 19:
                                if (seguimientoInfluenza.getTos().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutTosDia19).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutTosDia19).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkTosLeveDia19).setEnabled(false);
                                        getActivity().findViewById(R.id.chkTosModeradaDia19).setEnabled(false);
                                        getActivity().findViewById(R.id.chkTosSeveraDia19).setEnabled(false);
                                        if (segFlu.getTosLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia19)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia19)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosLeve(segFlu.getTosLeve());
                                        }
                                        if (segFlu.getTosModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia19)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia19)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosModerada(segFlu.getTosModerada());
                                        }
                                        if (segFlu.getTosSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia19)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia19)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosSevera(segFlu.getTosSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setTosLeve(null);
                                    seguimientoInfluenza.setTosModerada(null);
                                    seguimientoInfluenza.setTosSevera(null);
                                    getActivity().findViewById(R.id.layoutTosDia19).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia19)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia19)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia19)).setChecked(false);
                                }
                                break;
                            case 20:
                                if (seguimientoInfluenza.getTos().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutTosDia20).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutTosDia20).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkTosLeveDia20).setEnabled(false);
                                        getActivity().findViewById(R.id.chkTosModeradaDia20).setEnabled(false);
                                        getActivity().findViewById(R.id.chkTosSeveraDia20).setEnabled(false);
                                        if (segFlu.getTosLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia20)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia20)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosLeve(segFlu.getTosLeve());
                                        }
                                        if (segFlu.getTosModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia20)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia20)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosModerada(segFlu.getTosModerada());
                                        }
                                        if (segFlu.getTosSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia20)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia20)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosSevera(segFlu.getTosSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setTosLeve(null);
                                    seguimientoInfluenza.setTosModerada(null);
                                    seguimientoInfluenza.setTosSevera(null);
                                    getActivity().findViewById(R.id.layoutTosDia20).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia20)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia20)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia20)).setChecked(false);
                                }
                                break;
                            case 21:
                                if (seguimientoInfluenza.getTos().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutTosDia21).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutTosDia21).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkTosLeveDia21).setEnabled(false);
                                        getActivity().findViewById(R.id.chkTosModeradaDia21).setEnabled(false);
                                        getActivity().findViewById(R.id.chkTosSeveraDia21).setEnabled(false);
                                        if (segFlu.getTosLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia21)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia21)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosLeve(segFlu.getTosLeve());
                                        }
                                        if (segFlu.getTosModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia21)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia21)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosModerada(segFlu.getTosModerada());
                                        }
                                        if (segFlu.getTosSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia21)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia21)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosSevera(segFlu.getTosSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setTosLeve(null);
                                    seguimientoInfluenza.setTosModerada(null);
                                    seguimientoInfluenza.setTosSevera(null);
                                    getActivity().findViewById(R.id.layoutTosDia21).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia21)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia21)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia21)).setChecked(false);
                                }
                                break;
                            case 22:
                                if (seguimientoInfluenza.getTos().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutTosDia22).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutTosDia22).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkTosLeveDia22).setEnabled(false);
                                        getActivity().findViewById(R.id.chkTosModeradaDia22).setEnabled(false);
                                        getActivity().findViewById(R.id.chkTosSeveraDia22).setEnabled(false);
                                        if (segFlu.getTosLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia22)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia22)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosLeve(segFlu.getTosLeve());
                                        }
                                        if (segFlu.getTosModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia22)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia22)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosModerada(segFlu.getTosModerada());
                                        }
                                        if (segFlu.getTosSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia22)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia22)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosSevera(segFlu.getTosSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setTosLeve(null);
                                    seguimientoInfluenza.setTosModerada(null);
                                    seguimientoInfluenza.setTosSevera(null);
                                    getActivity().findViewById(R.id.layoutTosDia22).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia22)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia22)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia22)).setChecked(false);
                                }
                                break;
                            case 23:
                                if (seguimientoInfluenza.getTos().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutTosDia23).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutTosDia23).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkTosLeveDia23).setEnabled(false);
                                        getActivity().findViewById(R.id.chkTosModeradaDia23).setEnabled(false);
                                        getActivity().findViewById(R.id.chkTosSeveraDia23).setEnabled(false);
                                        if (segFlu.getTosLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia23)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia23)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosLeve(segFlu.getTosLeve());
                                        }
                                        if (segFlu.getTosModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia23)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia23)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosModerada(segFlu.getTosModerada());
                                        }
                                        if (segFlu.getTosSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia23)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia23)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosSevera(segFlu.getTosSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setTosLeve(null);
                                    seguimientoInfluenza.setTosModerada(null);
                                    seguimientoInfluenza.setTosSevera(null);
                                    getActivity().findViewById(R.id.layoutTosDia23).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia23)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia23)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia23)).setChecked(false);
                                }
                                break;
                            case 24:
                                if (seguimientoInfluenza.getTos().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutTosDia24).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutTosDia24).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkTosLeveDia24).setEnabled(false);
                                        getActivity().findViewById(R.id.chkTosModeradaDia24).setEnabled(false);
                                        getActivity().findViewById(R.id.chkTosSeveraDia24).setEnabled(false);
                                        if (segFlu.getTosLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia24)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia24)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosLeve(segFlu.getTosLeve());
                                        }
                                        if (segFlu.getTosModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia24)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia24)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosModerada(segFlu.getTosModerada());
                                        }
                                        if (segFlu.getTosSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia24)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia24)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosSevera(segFlu.getTosSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setTosLeve(null);
                                    seguimientoInfluenza.setTosModerada(null);
                                    seguimientoInfluenza.setTosSevera(null);
                                    getActivity().findViewById(R.id.layoutTosDia24).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia24)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia24)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia24)).setChecked(false);
                                }
                                break;
                            case 25:
                                if (seguimientoInfluenza.getTos().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutTosDia25).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutTosDia25).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkTosLeveDia25).setEnabled(false);
                                        getActivity().findViewById(R.id.chkTosModeradaDia25).setEnabled(false);
                                        getActivity().findViewById(R.id.chkTosSeveraDia25).setEnabled(false);
                                        if (segFlu.getTosLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia25)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia25)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosLeve(segFlu.getTosLeve());
                                        }
                                        if (segFlu.getTosModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia25)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia25)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosModerada(segFlu.getTosModerada());
                                        }
                                        if (segFlu.getTosSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia25)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia25)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosSevera(segFlu.getTosSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setTosLeve(null);
                                    seguimientoInfluenza.setTosModerada(null);
                                    seguimientoInfluenza.setTosSevera(null);
                                    getActivity().findViewById(R.id.layoutTosDia25).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia25)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia25)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia25)).setChecked(false);
                                }
                                break;
                            case 26:
                                if (seguimientoInfluenza.getTos().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutTosDia26).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutTosDia26).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkTosLeveDia26).setEnabled(false);
                                        getActivity().findViewById(R.id.chkTosModeradaDia26).setEnabled(false);
                                        getActivity().findViewById(R.id.chkTosSeveraDia26).setEnabled(false);
                                        if (segFlu.getTosLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia26)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia26)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosLeve(segFlu.getTosLeve());
                                        }
                                        if (segFlu.getTosModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia26)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia26)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosModerada(segFlu.getTosModerada());
                                        }
                                        if (segFlu.getTosSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia26)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia26)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosSevera(segFlu.getTosSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setTosLeve(null);
                                    seguimientoInfluenza.setTosModerada(null);
                                    seguimientoInfluenza.setTosSevera(null);
                                    getActivity().findViewById(R.id.layoutTosDia26).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia26)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia26)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia26)).setChecked(false);
                                }
                                break;
                            case 27:
                                if (seguimientoInfluenza.getTos().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutTosDia27).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutTosDia27).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkTosLeveDia27).setEnabled(false);
                                        getActivity().findViewById(R.id.chkTosModeradaDia27).setEnabled(false);
                                        getActivity().findViewById(R.id.chkTosSeveraDia27).setEnabled(false);
                                        if (segFlu.getTosLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia27)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia27)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosLeve(segFlu.getTosLeve());
                                        }
                                        if (segFlu.getTosModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia27)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia27)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosModerada(segFlu.getTosModerada());
                                        }
                                        if (segFlu.getTosSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia27)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia27)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosSevera(segFlu.getTosSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setTosLeve(null);
                                    seguimientoInfluenza.setTosModerada(null);
                                    seguimientoInfluenza.setTosSevera(null);
                                    getActivity().findViewById(R.id.layoutTosDia27).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia27)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia27)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia27)).setChecked(false);
                                }
                                break;
                            case 28:
                                if (seguimientoInfluenza.getTos().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutTosDia28).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutTosDia28).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkTosLeveDia28).setEnabled(false);
                                        getActivity().findViewById(R.id.chkTosModeradaDia28).setEnabled(false);
                                        getActivity().findViewById(R.id.chkTosSeveraDia28).setEnabled(false);
                                        if (segFlu.getTosLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia28)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia28)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosLeve(segFlu.getTosLeve());
                                        }
                                        if (segFlu.getTosModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia28)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia28)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosModerada(segFlu.getTosModerada());
                                        }
                                        if (segFlu.getTosSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia28)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia28)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setTosSevera(segFlu.getTosSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setTosLeve(null);
                                    seguimientoInfluenza.setTosModerada(null);
                                    seguimientoInfluenza.setTosSevera(null);
                                    getActivity().findViewById(R.id.layoutTosDia28).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosLeveDia28)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosModeradaDia28)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkTosSeveraDia28)).setChecked(false);
                                }
                                break;
                        }
                    }
                } else if (mSeguimientoInfluenzaActivity.adapter != null && mSeguimientoInfluenzaActivity.adapter.getItem(position).toString().compareTo("Seleccione") != 0) {
                    seguimientoInfluenza = new SeguimientoInfluenzaDTO();
                    seguimientoInfluenza.setControlDia(mPage);
                    seguimientoInfluenza.setTos(mSeguimientoInfluenzaActivity.adapter.getItem(position).toString());
                    mSeguimientoInfluenzaActivity.nuevaListaSegInfluenza.add(seguimientoInfluenza);
                }
            }

            public void cargarSecrecionNasal(int position) {
                SeguimientoInfluenzaDTO seguimientoInfluenza = obtenerNuevoSeguimientoPorDia(mPage);
                if (mSeguimientoInfluenzaActivity.adapter != null && seguimientoInfluenza != null) {
                    seguimientoInfluenza.setSecrecionNasal((mSeguimientoInfluenzaActivity.adapter.getItem(position).toString().compareTo("Seleccione") != 0) ?
                            mSeguimientoInfluenzaActivity.adapter.getItem(position).toString() : null);
                    /*CAMBIO SECRECION NASAL*/
                    if (seguimientoInfluenza.getSecrecionNasal() != null) {
                        switch (mPage) {
                            case 1:
                                if (seguimientoInfluenza.getSecrecionNasal().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutSecrecionNasalDia1).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutSecrecionNasalDia1).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkSecrecionNasalLeveDia1).setEnabled(false);
                                        getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia1).setEnabled(false);
                                        getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia1).setEnabled(false);
                                        if (segFlu.getSecrecionNasalLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia1)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia1)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalLeve(segFlu.getSecrecionNasalLeve());
                                        }
                                        if (segFlu.getSecrecionNasalModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia1)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia1)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalModerada(segFlu.getSecrecionNasalModerada());
                                        }
                                        if (segFlu.getSecrecionNasalSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia1)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia1)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalSevera(segFlu.getSecrecionNasalSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setSecrecionNasalLeve(null);
                                    seguimientoInfluenza.setSecrecionNasalModerada(null);
                                    seguimientoInfluenza.setSecrecionNasalSevera(null);
                                    getActivity().findViewById(R.id.layoutSecrecionNasalDia1).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia1)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia1)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia1)).setChecked(false);
                                }
                                break;
                            case 2:
                                if (seguimientoInfluenza.getSecrecionNasal().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutSecrecionNasalDia2).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutSecrecionNasalDia2).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkSecrecionNasalLeveDia2).setEnabled(false);
                                        getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia2).setEnabled(false);
                                        getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia2).setEnabled(false);
                                        if (segFlu.getSecrecionNasalLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia2)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia2)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalLeve(segFlu.getSecrecionNasalLeve());
                                        }
                                        if (segFlu.getSecrecionNasalModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia2)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia2)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalModerada(segFlu.getSecrecionNasalModerada());
                                        }
                                        if (segFlu.getSecrecionNasalSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia2)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia2)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalSevera(segFlu.getSecrecionNasalSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setSecrecionNasalLeve(null);
                                    seguimientoInfluenza.setSecrecionNasalModerada(null);
                                    seguimientoInfluenza.setSecrecionNasalSevera(null);
                                    getActivity().findViewById(R.id.layoutSecrecionNasalDia2).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia2)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia2)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia2)).setChecked(false);
                                }
                                break;
                            case 3:
                                if (seguimientoInfluenza.getSecrecionNasal().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutSecrecionNasalDia3).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutSecrecionNasalDia3).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkSecrecionNasalLeveDia3).setEnabled(false);
                                        getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia3).setEnabled(false);
                                        getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia3).setEnabled(false);
                                        if (segFlu.getSecrecionNasalLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia3)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia3)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalLeve(segFlu.getSecrecionNasalLeve());
                                        }
                                        if (segFlu.getSecrecionNasalModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia3)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia3)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalModerada(segFlu.getSecrecionNasalModerada());
                                        }
                                        if (segFlu.getSecrecionNasalSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia3)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia3)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalSevera(segFlu.getSecrecionNasalSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setSecrecionNasalLeve(null);
                                    seguimientoInfluenza.setSecrecionNasalModerada(null);
                                    seguimientoInfluenza.setSecrecionNasalSevera(null);
                                    getActivity().findViewById(R.id.layoutSecrecionNasalDia3).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia3)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia3)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia3)).setChecked(false);
                                }
                                break;
                            case 4:
                                if (seguimientoInfluenza.getSecrecionNasal().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutSecrecionNasalDia4).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutSecrecionNasalDia4).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkSecrecionNasalLeveDia4).setEnabled(false);
                                        getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia4).setEnabled(false);
                                        getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia4).setEnabled(false);
                                        if (segFlu.getSecrecionNasalLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia4)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia4)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalLeve(segFlu.getSecrecionNasalLeve());
                                        }
                                        if (segFlu.getSecrecionNasalModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia4)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia4)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalModerada(segFlu.getSecrecionNasalModerada());
                                        }
                                        if (segFlu.getSecrecionNasalSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia4)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia4)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalSevera(segFlu.getSecrecionNasalSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setSecrecionNasalLeve(null);
                                    seguimientoInfluenza.setSecrecionNasalModerada(null);
                                    seguimientoInfluenza.setSecrecionNasalSevera(null);
                                    getActivity().findViewById(R.id.layoutSecrecionNasalDia4).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia4)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia4)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia4)).setChecked(false);
                                }
                                break;
                            case 5:
                                if (seguimientoInfluenza.getSecrecionNasal().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutSecrecionNasalDia5).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutSecrecionNasalDia5).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkSecrecionNasalLeveDia5).setEnabled(false);
                                        getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia5).setEnabled(false);
                                        getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia5).setEnabled(false);
                                        if (segFlu.getSecrecionNasalLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia5)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia5)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalLeve(segFlu.getSecrecionNasalLeve());
                                        }
                                        if (segFlu.getSecrecionNasalModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia5)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia5)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalModerada(segFlu.getSecrecionNasalModerada());
                                        }
                                        if (segFlu.getSecrecionNasalSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia5)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia5)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalSevera(segFlu.getSecrecionNasalSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setSecrecionNasalLeve(null);
                                    seguimientoInfluenza.setSecrecionNasalModerada(null);
                                    seguimientoInfluenza.setSecrecionNasalSevera(null);
                                    getActivity().findViewById(R.id.layoutSecrecionNasalDia5).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia5)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia5)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia5)).setChecked(false);
                                }
                                break;
                            case 6:
                                if (seguimientoInfluenza.getSecrecionNasal().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutSecrecionNasalDia6).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutSecrecionNasalDia6).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkSecrecionNasalLeveDia6).setEnabled(false);
                                        getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia6).setEnabled(false);
                                        getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia6).setEnabled(false);
                                        if (segFlu.getSecrecionNasalLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia6)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia6)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalLeve(segFlu.getSecrecionNasalLeve());
                                        }
                                        if (segFlu.getSecrecionNasalModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia6)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia6)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalModerada(segFlu.getSecrecionNasalModerada());
                                        }
                                        if (segFlu.getSecrecionNasalSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia6)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia6)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalSevera(segFlu.getSecrecionNasalSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setSecrecionNasalLeve(null);
                                    seguimientoInfluenza.setSecrecionNasalModerada(null);
                                    seguimientoInfluenza.setSecrecionNasalSevera(null);
                                    getActivity().findViewById(R.id.layoutSecrecionNasalDia6).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia6)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia6)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia6)).setChecked(false);
                                }
                                break;
                            case 7:
                                if (seguimientoInfluenza.getSecrecionNasal().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutSecrecionNasalDia7).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutSecrecionNasalDia7).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkSecrecionNasalLeveDia7).setEnabled(false);
                                        getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia7).setEnabled(false);
                                        getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia7).setEnabled(false);
                                        if (segFlu.getSecrecionNasalLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia7)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia7)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalLeve(segFlu.getSecrecionNasalLeve());
                                        }
                                        if (segFlu.getSecrecionNasalModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia7)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia7)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalModerada(segFlu.getSecrecionNasalModerada());
                                        }
                                        if (segFlu.getSecrecionNasalSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia7)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia7)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalSevera(segFlu.getSecrecionNasalSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setSecrecionNasalLeve(null);
                                    seguimientoInfluenza.setSecrecionNasalModerada(null);
                                    seguimientoInfluenza.setSecrecionNasalSevera(null);
                                    getActivity().findViewById(R.id.layoutSecrecionNasalDia7).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia7)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia7)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia7)).setChecked(false);
                                }
                                break;
                            case 8:
                                if (seguimientoInfluenza.getSecrecionNasal().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutSecrecionNasalDia8).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutSecrecionNasalDia8).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkSecrecionNasalLeveDia8).setEnabled(false);
                                        getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia8).setEnabled(false);
                                        getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia8).setEnabled(false);
                                        if (segFlu.getSecrecionNasalLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia8)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia8)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalLeve(segFlu.getSecrecionNasalLeve());
                                        }
                                        if (segFlu.getSecrecionNasalModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia8)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia8)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalModerada(segFlu.getSecrecionNasalModerada());
                                        }
                                        if (segFlu.getSecrecionNasalSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia8)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia8)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalSevera(segFlu.getSecrecionNasalSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setSecrecionNasalLeve(null);
                                    seguimientoInfluenza.setSecrecionNasalModerada(null);
                                    seguimientoInfluenza.setSecrecionNasalSevera(null);
                                    getActivity().findViewById(R.id.layoutSecrecionNasalDia8).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia8)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia8)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia8)).setChecked(false);
                                }
                                break;
                            case 9:
                                if (seguimientoInfluenza.getSecrecionNasal().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutSecrecionNasalDia9).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutSecrecionNasalDia9).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkSecrecionNasalLeveDia9).setEnabled(false);
                                        getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia9).setEnabled(false);
                                        getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia9).setEnabled(false);
                                        if (segFlu.getSecrecionNasalLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia9)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia9)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalLeve(segFlu.getSecrecionNasalLeve());
                                        }
                                        if (segFlu.getSecrecionNasalModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia9)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia9)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalModerada(segFlu.getSecrecionNasalModerada());
                                        }
                                        if (segFlu.getSecrecionNasalSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia9)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia9)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalSevera(segFlu.getSecrecionNasalSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setSecrecionNasalLeve(null);
                                    seguimientoInfluenza.setSecrecionNasalModerada(null);
                                    seguimientoInfluenza.setSecrecionNasalSevera(null);
                                    getActivity().findViewById(R.id.layoutSecrecionNasalDia9).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia9)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia9)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia9)).setChecked(false);
                                }
                                break;
                            case 10:
                                if (seguimientoInfluenza.getSecrecionNasal().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutSecrecionNasalDia10).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutSecrecionNasalDia10).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkSecrecionNasalLeveDia10).setEnabled(false);
                                        getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia10).setEnabled(false);
                                        getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia10).setEnabled(false);
                                        if (segFlu.getSecrecionNasalLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia10)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia10)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalLeve(segFlu.getSecrecionNasalLeve());
                                        }
                                        if (segFlu.getSecrecionNasalModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia10)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia10)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalModerada(segFlu.getSecrecionNasalModerada());
                                        }
                                        if (segFlu.getSecrecionNasalSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia10)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia10)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalSevera(segFlu.getSecrecionNasalSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setSecrecionNasalLeve(null);
                                    seguimientoInfluenza.setSecrecionNasalModerada(null);
                                    seguimientoInfluenza.setSecrecionNasalSevera(null);
                                    getActivity().findViewById(R.id.layoutSecrecionNasalDia10).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia10)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia10)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia10)).setChecked(false);
                                }
                                break;
                            case 11:
                                if (seguimientoInfluenza.getSecrecionNasal().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutSecrecionNasalDia11).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutSecrecionNasalDia11).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkSecrecionNasalLeveDia11).setEnabled(false);
                                        getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia11).setEnabled(false);
                                        getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia11).setEnabled(false);
                                        if (segFlu.getSecrecionNasalLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia11)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia11)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalLeve(segFlu.getSecrecionNasalLeve());
                                        }
                                        if (segFlu.getSecrecionNasalModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia11)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia11)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalModerada(segFlu.getSecrecionNasalModerada());
                                        }
                                        if (segFlu.getSecrecionNasalSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia11)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia11)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalSevera(segFlu.getSecrecionNasalSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setSecrecionNasalLeve(null);
                                    seguimientoInfluenza.setSecrecionNasalModerada(null);
                                    seguimientoInfluenza.setSecrecionNasalSevera(null);
                                    getActivity().findViewById(R.id.layoutSecrecionNasalDia11).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia11)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia11)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia11)).setChecked(false);
                                }
                                break;
                            case 12:
                                if (seguimientoInfluenza.getSecrecionNasal().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutSecrecionNasalDia12).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutSecrecionNasalDia12).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkSecrecionNasalLeveDia12).setEnabled(false);
                                        getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia12).setEnabled(false);
                                        getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia12).setEnabled(false);
                                        if (segFlu.getSecrecionNasalLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia12)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia12)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalLeve(segFlu.getSecrecionNasalLeve());
                                        }
                                        if (segFlu.getSecrecionNasalModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia12)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia12)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalModerada(segFlu.getSecrecionNasalModerada());
                                        }
                                        if (segFlu.getSecrecionNasalSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia12)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia12)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalSevera(segFlu.getSecrecionNasalSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setSecrecionNasalLeve(null);
                                    seguimientoInfluenza.setSecrecionNasalModerada(null);
                                    seguimientoInfluenza.setSecrecionNasalSevera(null);
                                    getActivity().findViewById(R.id.layoutSecrecionNasalDia12).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia12)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia12)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia12)).setChecked(false);
                                }
                                break;
                            case 13:
                                if (seguimientoInfluenza.getSecrecionNasal().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutSecrecionNasalDia13).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutSecrecionNasalDia13).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkSecrecionNasalLeveDia13).setEnabled(false);
                                        getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia13).setEnabled(false);
                                        getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia13).setEnabled(false);
                                        if (segFlu.getSecrecionNasalLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia13)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia13)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalLeve(segFlu.getSecrecionNasalLeve());
                                        }
                                        if (segFlu.getSecrecionNasalModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia13)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia13)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalModerada(segFlu.getSecrecionNasalModerada());
                                        }
                                        if (segFlu.getSecrecionNasalSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia13)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia13)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalSevera(segFlu.getSecrecionNasalSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setSecrecionNasalLeve(null);
                                    seguimientoInfluenza.setSecrecionNasalModerada(null);
                                    seguimientoInfluenza.setSecrecionNasalSevera(null);
                                    getActivity().findViewById(R.id.layoutSecrecionNasalDia13).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia13)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia13)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia13)).setChecked(false);
                                }
                                break;
                            case 14:
                                if (seguimientoInfluenza.getSecrecionNasal().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutSecrecionNasalDia14).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutSecrecionNasalDia14).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkSecrecionNasalLeveDia14).setEnabled(false);
                                        getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia14).setEnabled(false);
                                        getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia14).setEnabled(false);
                                        if (segFlu.getSecrecionNasalLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia14)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia14)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalLeve(segFlu.getSecrecionNasalLeve());
                                        }
                                        if (segFlu.getSecrecionNasalModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia14)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia14)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalModerada(segFlu.getSecrecionNasalModerada());
                                        }
                                        if (segFlu.getSecrecionNasalSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia14)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia14)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalSevera(segFlu.getSecrecionNasalSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setSecrecionNasalLeve(null);
                                    seguimientoInfluenza.setSecrecionNasalModerada(null);
                                    seguimientoInfluenza.setSecrecionNasalSevera(null);
                                    getActivity().findViewById(R.id.layoutSecrecionNasalDia14).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia14)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia14)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia14)).setChecked(false);
                                }
                                break;
                            case 15:
                                if (seguimientoInfluenza.getSecrecionNasal().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutSecrecionNasalDia15).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutSecrecionNasalDia15).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkSecrecionNasalLeveDia15).setEnabled(false);
                                        getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia15).setEnabled(false);
                                        getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia15).setEnabled(false);
                                        if (segFlu.getSecrecionNasalLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia15)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia15)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalLeve(segFlu.getSecrecionNasalLeve());
                                        }
                                        if (segFlu.getSecrecionNasalModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia15)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia15)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalModerada(segFlu.getSecrecionNasalModerada());
                                        }
                                        if (segFlu.getSecrecionNasalSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia15)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia15)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalSevera(segFlu.getSecrecionNasalSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setSecrecionNasalLeve(null);
                                    seguimientoInfluenza.setSecrecionNasalModerada(null);
                                    seguimientoInfluenza.setSecrecionNasalSevera(null);
                                    getActivity().findViewById(R.id.layoutSecrecionNasalDia15).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia15)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia15)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia15)).setChecked(false);
                                }
                                break;
                            case 16:
                                if (seguimientoInfluenza.getSecrecionNasal().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutSecrecionNasalDia16).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutSecrecionNasalDia16).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkSecrecionNasalLeveDia16).setEnabled(false);
                                        getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia16).setEnabled(false);
                                        getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia16).setEnabled(false);
                                        if (segFlu.getSecrecionNasalLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia16)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia16)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalLeve(segFlu.getSecrecionNasalLeve());
                                        }
                                        if (segFlu.getSecrecionNasalModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia16)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia16)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalModerada(segFlu.getSecrecionNasalModerada());
                                        }
                                        if (segFlu.getSecrecionNasalSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia16)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia16)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalSevera(segFlu.getSecrecionNasalSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setSecrecionNasalLeve(null);
                                    seguimientoInfluenza.setSecrecionNasalModerada(null);
                                    seguimientoInfluenza.setSecrecionNasalSevera(null);
                                    getActivity().findViewById(R.id.layoutSecrecionNasalDia16).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia16)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia16)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia16)).setChecked(false);
                                }
                                break;
                            case 17:
                                if (seguimientoInfluenza.getSecrecionNasal().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutSecrecionNasalDia17).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutSecrecionNasalDia17).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkSecrecionNasalLeveDia17).setEnabled(false);
                                        getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia17).setEnabled(false);
                                        getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia17).setEnabled(false);
                                        if (segFlu.getSecrecionNasalLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia17)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia17)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalLeve(segFlu.getSecrecionNasalLeve());
                                        }
                                        if (segFlu.getSecrecionNasalModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia17)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia17)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalModerada(segFlu.getSecrecionNasalModerada());
                                        }
                                        if (segFlu.getSecrecionNasalSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia17)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia17)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalSevera(segFlu.getSecrecionNasalSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setSecrecionNasalLeve(null);
                                    seguimientoInfluenza.setSecrecionNasalModerada(null);
                                    seguimientoInfluenza.setSecrecionNasalSevera(null);
                                    getActivity().findViewById(R.id.layoutSecrecionNasalDia17).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia17)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia17)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia17)).setChecked(false);
                                }
                                break;
                            case 18:
                                if (seguimientoInfluenza.getSecrecionNasal().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutSecrecionNasalDia18).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutSecrecionNasalDia18).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkSecrecionNasalLeveDia18).setEnabled(false);
                                        getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia18).setEnabled(false);
                                        getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia18).setEnabled(false);
                                        if (segFlu.getSecrecionNasalLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia18)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia18)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalLeve(segFlu.getSecrecionNasalLeve());
                                        }
                                        if (segFlu.getSecrecionNasalModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia18)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia18)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalModerada(segFlu.getSecrecionNasalModerada());
                                        }
                                        if (segFlu.getSecrecionNasalSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia18)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia18)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalSevera(segFlu.getSecrecionNasalSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setSecrecionNasalLeve(null);
                                    seguimientoInfluenza.setSecrecionNasalModerada(null);
                                    seguimientoInfluenza.setSecrecionNasalSevera(null);
                                    getActivity().findViewById(R.id.layoutSecrecionNasalDia18).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia18)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia18)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia18)).setChecked(false);
                                }
                                break;
                            case 19:
                                if (seguimientoInfluenza.getSecrecionNasal().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutSecrecionNasalDia19).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutSecrecionNasalDia19).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkSecrecionNasalLeveDia19).setEnabled(false);
                                        getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia19).setEnabled(false);
                                        getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia19).setEnabled(false);
                                        if (segFlu.getSecrecionNasalLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia19)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia19)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalLeve(segFlu.getSecrecionNasalLeve());
                                        }
                                        if (segFlu.getSecrecionNasalModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia19)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia19)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalModerada(segFlu.getSecrecionNasalModerada());
                                        }
                                        if (segFlu.getSecrecionNasalSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia19)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia19)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalSevera(segFlu.getSecrecionNasalSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setSecrecionNasalLeve(null);
                                    seguimientoInfluenza.setSecrecionNasalModerada(null);
                                    seguimientoInfluenza.setSecrecionNasalSevera(null);
                                    getActivity().findViewById(R.id.layoutSecrecionNasalDia19).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia19)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia19)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia19)).setChecked(false);
                                }
                                break;
                            case 20:
                                if (seguimientoInfluenza.getSecrecionNasal().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutSecrecionNasalDia20).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutSecrecionNasalDia20).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkSecrecionNasalLeveDia20).setEnabled(false);
                                        getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia20).setEnabled(false);
                                        getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia20).setEnabled(false);
                                        if (segFlu.getSecrecionNasalLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia20)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia20)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalLeve(segFlu.getSecrecionNasalLeve());
                                        }
                                        if (segFlu.getSecrecionNasalModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia20)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia20)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalModerada(segFlu.getSecrecionNasalModerada());
                                        }
                                        if (segFlu.getSecrecionNasalSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia20)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia20)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalSevera(segFlu.getSecrecionNasalSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setSecrecionNasalLeve(null);
                                    seguimientoInfluenza.setSecrecionNasalModerada(null);
                                    seguimientoInfluenza.setSecrecionNasalSevera(null);
                                    getActivity().findViewById(R.id.layoutSecrecionNasalDia20).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia20)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia20)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia20)).setChecked(false);
                                }
                                break;
                            case 21:
                                if (seguimientoInfluenza.getSecrecionNasal().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutSecrecionNasalDia21).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutSecrecionNasalDia21).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkSecrecionNasalLeveDia21).setEnabled(false);
                                        getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia21).setEnabled(false);
                                        getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia21).setEnabled(false);
                                        if (segFlu.getSecrecionNasalLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia21)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia21)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalLeve(segFlu.getSecrecionNasalLeve());
                                        }
                                        if (segFlu.getSecrecionNasalModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia21)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia21)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalModerada(segFlu.getSecrecionNasalModerada());
                                        }
                                        if (segFlu.getSecrecionNasalSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia21)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia21)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalSevera(segFlu.getSecrecionNasalSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setSecrecionNasalLeve(null);
                                    seguimientoInfluenza.setSecrecionNasalModerada(null);
                                    seguimientoInfluenza.setSecrecionNasalSevera(null);
                                    getActivity().findViewById(R.id.layoutSecrecionNasalDia21).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia21)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia21)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia21)).setChecked(false);
                                }
                                break;
                            case 22:
                                if (seguimientoInfluenza.getSecrecionNasal().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutSecrecionNasalDia22).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutSecrecionNasalDia22).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkSecrecionNasalLeveDia22).setEnabled(false);
                                        getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia22).setEnabled(false);
                                        getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia22).setEnabled(false);
                                        if (segFlu.getSecrecionNasalLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia22)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia22)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalLeve(segFlu.getSecrecionNasalLeve());
                                        }
                                        if (segFlu.getSecrecionNasalModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia22)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia22)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalModerada(segFlu.getSecrecionNasalModerada());
                                        }
                                        if (segFlu.getSecrecionNasalSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia22)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia22)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalSevera(segFlu.getSecrecionNasalSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setSecrecionNasalLeve(null);
                                    seguimientoInfluenza.setSecrecionNasalModerada(null);
                                    seguimientoInfluenza.setSecrecionNasalSevera(null);
                                    getActivity().findViewById(R.id.layoutSecrecionNasalDia22).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia22)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia22)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia22)).setChecked(false);
                                }
                                break;
                            case 23:
                                if (seguimientoInfluenza.getSecrecionNasal().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutSecrecionNasalDia23).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutSecrecionNasalDia23).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkSecrecionNasalLeveDia23).setEnabled(false);
                                        getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia23).setEnabled(false);
                                        getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia23).setEnabled(false);
                                        if (segFlu.getSecrecionNasalLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia23)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia23)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalLeve(segFlu.getSecrecionNasalLeve());
                                        }
                                        if (segFlu.getSecrecionNasalModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia23)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia23)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalModerada(segFlu.getSecrecionNasalModerada());
                                        }
                                        if (segFlu.getSecrecionNasalSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia23)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia23)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalSevera(segFlu.getSecrecionNasalSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setSecrecionNasalLeve(null);
                                    seguimientoInfluenza.setSecrecionNasalModerada(null);
                                    seguimientoInfluenza.setSecrecionNasalSevera(null);
                                    getActivity().findViewById(R.id.layoutSecrecionNasalDia23).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia23)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia23)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia23)).setChecked(false);
                                }
                                break;
                            case 24:
                                if (seguimientoInfluenza.getSecrecionNasal().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutSecrecionNasalDia24).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutSecrecionNasalDia24).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkSecrecionNasalLeveDia24).setEnabled(false);
                                        getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia24).setEnabled(false);
                                        getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia24).setEnabled(false);
                                        if (segFlu.getSecrecionNasalLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia24)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia24)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalLeve(segFlu.getSecrecionNasalLeve());
                                        }
                                        if (segFlu.getSecrecionNasalModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia24)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia24)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalModerada(segFlu.getSecrecionNasalModerada());
                                        }
                                        if (segFlu.getSecrecionNasalSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia24)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia24)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalSevera(segFlu.getSecrecionNasalSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setSecrecionNasalLeve(null);
                                    seguimientoInfluenza.setSecrecionNasalModerada(null);
                                    seguimientoInfluenza.setSecrecionNasalSevera(null);
                                    getActivity().findViewById(R.id.layoutSecrecionNasalDia24).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia24)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia24)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia24)).setChecked(false);
                                }
                                break;
                            case 25:
                                if (seguimientoInfluenza.getSecrecionNasal().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutSecrecionNasalDia25).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutSecrecionNasalDia25).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkSecrecionNasalLeveDia25).setEnabled(false);
                                        getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia25).setEnabled(false);
                                        getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia25).setEnabled(false);
                                        if (segFlu.getSecrecionNasalLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia25)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia25)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalLeve(segFlu.getSecrecionNasalLeve());
                                        }
                                        if (segFlu.getSecrecionNasalModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia25)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia25)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalModerada(segFlu.getSecrecionNasalModerada());
                                        }
                                        if (segFlu.getSecrecionNasalSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia25)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia25)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalSevera(segFlu.getSecrecionNasalSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setSecrecionNasalLeve(null);
                                    seguimientoInfluenza.setSecrecionNasalModerada(null);
                                    seguimientoInfluenza.setSecrecionNasalSevera(null);
                                    getActivity().findViewById(R.id.layoutSecrecionNasalDia25).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia25)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia25)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia25)).setChecked(false);
                                }
                                break;
                            case 26:
                                if (seguimientoInfluenza.getSecrecionNasal().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutSecrecionNasalDia26).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutSecrecionNasalDia26).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkSecrecionNasalLeveDia26).setEnabled(false);
                                        getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia26).setEnabled(false);
                                        getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia26).setEnabled(false);
                                        if (segFlu.getSecrecionNasalLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia26)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia26)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalLeve(segFlu.getSecrecionNasalLeve());
                                        }
                                        if (segFlu.getSecrecionNasalModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia26)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia26)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalModerada(segFlu.getSecrecionNasalModerada());
                                        }
                                        if (segFlu.getSecrecionNasalSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia26)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia26)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalSevera(segFlu.getSecrecionNasalSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setSecrecionNasalLeve(null);
                                    seguimientoInfluenza.setSecrecionNasalModerada(null);
                                    seguimientoInfluenza.setSecrecionNasalSevera(null);
                                    getActivity().findViewById(R.id.layoutSecrecionNasalDia26).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia26)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia26)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia26)).setChecked(false);
                                }
                                break;
                            case 27:
                                if (seguimientoInfluenza.getSecrecionNasal().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutSecrecionNasalDia27).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutSecrecionNasalDia27).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkSecrecionNasalLeveDia27).setEnabled(false);
                                        getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia27).setEnabled(false);
                                        getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia27).setEnabled(false);
                                        if (segFlu.getSecrecionNasalLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia27)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia27)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalLeve(segFlu.getSecrecionNasalLeve());
                                        }
                                        if (segFlu.getSecrecionNasalModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia27)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia27)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalModerada(segFlu.getSecrecionNasalModerada());
                                        }
                                        if (segFlu.getSecrecionNasalSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia27)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia27)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalSevera(segFlu.getSecrecionNasalSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setSecrecionNasalLeve(null);
                                    seguimientoInfluenza.setSecrecionNasalModerada(null);
                                    seguimientoInfluenza.setSecrecionNasalSevera(null);
                                    getActivity().findViewById(R.id.layoutSecrecionNasalDia27).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia27)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia27)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia27)).setChecked(false);
                                }
                                break;
                            case 28:
                                if (seguimientoInfluenza.getSecrecionNasal().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutSecrecionNasalDia28).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutSecrecionNasalDia28).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkSecrecionNasalLeveDia28).setEnabled(false);
                                        getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia28).setEnabled(false);
                                        getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia28).setEnabled(false);
                                        if (segFlu.getSecrecionNasalLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia28)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia28)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalLeve(segFlu.getSecrecionNasalLeve());
                                        }
                                        if (segFlu.getSecrecionNasalModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia28)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia28)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalModerada(segFlu.getSecrecionNasalModerada());
                                        }
                                        if (segFlu.getSecrecionNasalSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia28)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia28)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setSecrecionNasalSevera(segFlu.getSecrecionNasalSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setSecrecionNasalLeve(null);
                                    seguimientoInfluenza.setSecrecionNasalModerada(null);
                                    seguimientoInfluenza.setSecrecionNasalSevera(null);
                                    getActivity().findViewById(R.id.layoutSecrecionNasalDia28).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalLeveDia28)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalModeradaDia28)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkSecrecionNasalSeveraDia28)).setChecked(false);
                                }
                                break;
                        }
                    }
                } else if (mSeguimientoInfluenzaActivity.adapter != null && mSeguimientoInfluenzaActivity.adapter.getItem(position).toString().compareTo("Seleccione") != 0) {
                    seguimientoInfluenza = new SeguimientoInfluenzaDTO();
                    seguimientoInfluenza.setControlDia(mPage);
                    seguimientoInfluenza.setSecrecionNasal(mSeguimientoInfluenzaActivity.adapter.getItem(position).toString());
                    mSeguimientoInfluenzaActivity.nuevaListaSegInfluenza.add(seguimientoInfluenza);
                }
            }

            public void cargarDolorGarganta(int position) {
                SeguimientoInfluenzaDTO seguimientoInfluenza = obtenerNuevoSeguimientoPorDia(mPage);
                if (mSeguimientoInfluenzaActivity.adapter != null && seguimientoInfluenza != null) {
                    seguimientoInfluenza.setDolorGarganta((mSeguimientoInfluenzaActivity.adapter.getItem(position).toString().compareTo("Seleccione") != 0) ?
                            mSeguimientoInfluenzaActivity.adapter.getItem(position).toString() : null);
                    /*CAMBIO DOLOR GARGANTA*/
                    if (seguimientoInfluenza.getDolorGarganta() != null) {
                        switch (mPage) {
                            case 1:
                                if (seguimientoInfluenza.getDolorGarganta().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorGargantaDia1).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorGargantaDia1).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorGargantaLeveDia1).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorGargantaModeradaDia1).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorGargantaSeveraDia1).setEnabled(false);
                                        if (segFlu.getDolorGargantaLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia1)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia1)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaLeve(segFlu.getDolorGargantaLeve());
                                        }
                                        if (segFlu.getDolorGargantaModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia1)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia1)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaModerada(segFlu.getDolorGargantaModerada());
                                        }
                                        if (segFlu.getDolorGargantaSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia1)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia1)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaSevera(segFlu.getDolorGargantaSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorGargantaLeve(null);
                                    seguimientoInfluenza.setDolorGargantaModerada(null);
                                    seguimientoInfluenza.setDolorGargantaSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorGargantaDia1).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia1)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia1)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia1)).setChecked(false);
                                }
                                break;
                            case 2:
                                if (seguimientoInfluenza.getDolorGarganta().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorGargantaDia2).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorGargantaDia2).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorGargantaLeveDia2).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorGargantaModeradaDia2).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorGargantaSeveraDia2).setEnabled(false);
                                        if (segFlu.getDolorGargantaLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia2)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia2)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaLeve(segFlu.getDolorGargantaLeve());
                                        }
                                        if (segFlu.getDolorGargantaModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia2)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia2)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaModerada(segFlu.getDolorGargantaModerada());
                                        }
                                        if (segFlu.getDolorGargantaSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia2)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia2)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaSevera(segFlu.getDolorGargantaSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorGargantaLeve(null);
                                    seguimientoInfluenza.setDolorGargantaModerada(null);
                                    seguimientoInfluenza.setDolorGargantaSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorGargantaDia2).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia2)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia2)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia2)).setChecked(false);
                                }
                                break;
                            case 3:
                                if (seguimientoInfluenza.getDolorGarganta().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorGargantaDia3).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorGargantaDia3).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorGargantaLeveDia3).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorGargantaModeradaDia3).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorGargantaSeveraDia3).setEnabled(false);
                                        if (segFlu.getDolorGargantaLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia3)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia3)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaLeve(segFlu.getDolorGargantaLeve());
                                        }
                                        if (segFlu.getDolorGargantaModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia3)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia3)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaModerada(segFlu.getDolorGargantaModerada());
                                        }
                                        if (segFlu.getDolorGargantaSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia3)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia3)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaSevera(segFlu.getDolorGargantaSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorGargantaLeve(null);
                                    seguimientoInfluenza.setDolorGargantaModerada(null);
                                    seguimientoInfluenza.setDolorGargantaSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorGargantaDia3).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia3)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia3)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia3)).setChecked(false);
                                }
                                break;
                            case 4:
                                if (seguimientoInfluenza.getDolorGarganta().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorGargantaDia4).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorGargantaDia4).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorGargantaLeveDia4).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorGargantaModeradaDia4).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorGargantaSeveraDia4).setEnabled(false);
                                        if (segFlu.getDolorGargantaLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia4)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia4)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaLeve(segFlu.getDolorGargantaLeve());
                                        }
                                        if (segFlu.getDolorGargantaModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia4)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia4)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaModerada(segFlu.getDolorGargantaModerada());
                                        }
                                        if (segFlu.getDolorGargantaSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia4)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia4)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaSevera(segFlu.getDolorGargantaSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorGargantaLeve(null);
                                    seguimientoInfluenza.setDolorGargantaModerada(null);
                                    seguimientoInfluenza.setDolorGargantaSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorGargantaDia4).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia4)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia4)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia4)).setChecked(false);
                                }
                                break;
                            case 5:
                                if (seguimientoInfluenza.getDolorGarganta().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorGargantaDia5).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorGargantaDia5).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorGargantaLeveDia5).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorGargantaModeradaDia5).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorGargantaSeveraDia5).setEnabled(false);
                                        if (segFlu.getDolorGargantaLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia5)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia5)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaLeve(segFlu.getDolorGargantaLeve());
                                        }
                                        if (segFlu.getDolorGargantaModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia5)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia5)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaModerada(segFlu.getDolorGargantaModerada());
                                        }
                                        if (segFlu.getDolorGargantaSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia5)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia5)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaSevera(segFlu.getDolorGargantaSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorGargantaLeve(null);
                                    seguimientoInfluenza.setDolorGargantaModerada(null);
                                    seguimientoInfluenza.setDolorGargantaSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorGargantaDia5).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia5)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia5)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia5)).setChecked(false);
                                }
                                break;
                            case 6:
                                if (seguimientoInfluenza.getDolorGarganta().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorGargantaDia6).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorGargantaDia6).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorGargantaLeveDia6).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorGargantaModeradaDia6).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorGargantaSeveraDia6).setEnabled(false);
                                        if (segFlu.getDolorGargantaLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia6)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia6)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaLeve(segFlu.getDolorGargantaLeve());
                                        }
                                        if (segFlu.getDolorGargantaModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia6)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia6)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaModerada(segFlu.getDolorGargantaModerada());
                                        }
                                        if (segFlu.getDolorGargantaSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia6)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia6)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaSevera(segFlu.getDolorGargantaSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorGargantaLeve(null);
                                    seguimientoInfluenza.setDolorGargantaModerada(null);
                                    seguimientoInfluenza.setDolorGargantaSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorGargantaDia6).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia6)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia6)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia6)).setChecked(false);
                                }
                                break;
                            case 7:
                                if (seguimientoInfluenza.getDolorGarganta().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorGargantaDia7).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorGargantaDia7).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorGargantaLeveDia7).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorGargantaModeradaDia7).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorGargantaSeveraDia7).setEnabled(false);
                                        if (segFlu.getDolorGargantaLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia7)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia7)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaLeve(segFlu.getDolorGargantaLeve());
                                        }
                                        if (segFlu.getDolorGargantaModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia7)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia7)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaModerada(segFlu.getDolorGargantaModerada());
                                        }
                                        if (segFlu.getDolorGargantaSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia7)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia7)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaSevera(segFlu.getDolorGargantaSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorGargantaLeve(null);
                                    seguimientoInfluenza.setDolorGargantaModerada(null);
                                    seguimientoInfluenza.setDolorGargantaSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorGargantaDia7).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia7)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia7)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia7)).setChecked(false);
                                }
                                break;
                            case 8:
                                if (seguimientoInfluenza.getDolorGarganta().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorGargantaDia8).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorGargantaDia8).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorGargantaLeveDia8).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorGargantaModeradaDia8).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorGargantaSeveraDia8).setEnabled(false);
                                        if (segFlu.getDolorGargantaLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia8)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia8)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaLeve(segFlu.getDolorGargantaLeve());
                                        }
                                        if (segFlu.getDolorGargantaModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia8)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia8)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaModerada(segFlu.getDolorGargantaModerada());
                                        }
                                        if (segFlu.getDolorGargantaSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia8)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia8)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaSevera(segFlu.getDolorGargantaSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorGargantaLeve(null);
                                    seguimientoInfluenza.setDolorGargantaModerada(null);
                                    seguimientoInfluenza.setDolorGargantaSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorGargantaDia8).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia8)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia8)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia8)).setChecked(false);
                                }
                                break;
                            case 9:
                                if (seguimientoInfluenza.getDolorGarganta().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorGargantaDia9).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorGargantaDia9).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorGargantaLeveDia9).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorGargantaModeradaDia9).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorGargantaSeveraDia9).setEnabled(false);
                                        if (segFlu.getDolorGargantaLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia9)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia9)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaLeve(segFlu.getDolorGargantaLeve());
                                        }
                                        if (segFlu.getDolorGargantaModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia9)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia9)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaModerada(segFlu.getDolorGargantaModerada());
                                        }
                                        if (segFlu.getDolorGargantaSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia9)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia9)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaSevera(segFlu.getDolorGargantaSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorGargantaLeve(null);
                                    seguimientoInfluenza.setDolorGargantaModerada(null);
                                    seguimientoInfluenza.setDolorGargantaSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorGargantaDia9).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia9)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia9)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia9)).setChecked(false);
                                }
                                break;
                            case 10:
                                if (seguimientoInfluenza.getDolorGarganta().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorGargantaDia10).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorGargantaDia10).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorGargantaLeveDia10).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorGargantaModeradaDia10).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorGargantaSeveraDia10).setEnabled(false);
                                        if (segFlu.getDolorGargantaLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia10)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia10)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaLeve(segFlu.getDolorGargantaLeve());
                                        }
                                        if (segFlu.getDolorGargantaModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia10)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia10)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaModerada(segFlu.getDolorGargantaModerada());
                                        }
                                        if (segFlu.getDolorGargantaSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia10)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia10)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaSevera(segFlu.getDolorGargantaSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorGargantaLeve(null);
                                    seguimientoInfluenza.setDolorGargantaModerada(null);
                                    seguimientoInfluenza.setDolorGargantaSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorGargantaDia10).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia10)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia10)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia10)).setChecked(false);
                                }
                                break;
                            case 11:
                                if (seguimientoInfluenza.getDolorGarganta().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorGargantaDia11).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorGargantaDia11).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorGargantaLeveDia11).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorGargantaModeradaDia11).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorGargantaSeveraDia11).setEnabled(false);
                                        if (segFlu.getDolorGargantaLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia11)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia11)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaLeve(segFlu.getDolorGargantaLeve());
                                        }
                                        if (segFlu.getDolorGargantaModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia11)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia11)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaModerada(segFlu.getDolorGargantaModerada());
                                        }
                                        if (segFlu.getDolorGargantaSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia11)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia11)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaSevera(segFlu.getDolorGargantaSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorGargantaLeve(null);
                                    seguimientoInfluenza.setDolorGargantaModerada(null);
                                    seguimientoInfluenza.setDolorGargantaSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorGargantaDia11).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia11)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia11)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia11)).setChecked(false);
                                }
                                break;
                            case 12:
                                if (seguimientoInfluenza.getDolorGarganta().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorGargantaDia12).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorGargantaDia12).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorGargantaLeveDia12).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorGargantaModeradaDia12).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorGargantaSeveraDia12).setEnabled(false);
                                        if (segFlu.getDolorGargantaLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia12)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia12)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaLeve(segFlu.getDolorGargantaLeve());
                                        }
                                        if (segFlu.getDolorGargantaModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia12)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia12)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaModerada(segFlu.getDolorGargantaModerada());
                                        }
                                        if (segFlu.getDolorGargantaSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia12)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia12)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaSevera(segFlu.getDolorGargantaSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorGargantaLeve(null);
                                    seguimientoInfluenza.setDolorGargantaModerada(null);
                                    seguimientoInfluenza.setDolorGargantaSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorGargantaDia12).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia12)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia12)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia12)).setChecked(false);
                                }
                                break;
                            case 13:
                                if (seguimientoInfluenza.getDolorGarganta().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorGargantaDia13).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorGargantaDia13).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorGargantaLeveDia13).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorGargantaModeradaDia13).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorGargantaSeveraDia13).setEnabled(false);
                                        if (segFlu.getDolorGargantaLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia13)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia13)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaLeve(segFlu.getDolorGargantaLeve());
                                        }
                                        if (segFlu.getDolorGargantaModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia13)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia13)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaModerada(segFlu.getDolorGargantaModerada());
                                        }
                                        if (segFlu.getDolorGargantaSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia13)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia13)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaSevera(segFlu.getDolorGargantaSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorGargantaLeve(null);
                                    seguimientoInfluenza.setDolorGargantaModerada(null);
                                    seguimientoInfluenza.setDolorGargantaSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorGargantaDia13).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia13)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia13)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia13)).setChecked(false);
                                }
                                break;
                            case 14:
                                if (seguimientoInfluenza.getDolorGarganta().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorGargantaDia14).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorGargantaDia14).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorGargantaLeveDia14).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorGargantaModeradaDia14).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorGargantaSeveraDia14).setEnabled(false);
                                        if (segFlu.getDolorGargantaLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia14)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia14)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaLeve(segFlu.getDolorGargantaLeve());
                                        }
                                        if (segFlu.getDolorGargantaModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia14)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia14)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaModerada(segFlu.getDolorGargantaModerada());
                                        }
                                        if (segFlu.getDolorGargantaSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia14)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia14)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaSevera(segFlu.getDolorGargantaSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorGargantaLeve(null);
                                    seguimientoInfluenza.setDolorGargantaModerada(null);
                                    seguimientoInfluenza.setDolorGargantaSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorGargantaDia14).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia14)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia14)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia14)).setChecked(false);
                                }
                                break;
                            case 15:
                                if (seguimientoInfluenza.getDolorGarganta().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorGargantaDia15).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorGargantaDia15).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorGargantaLeveDia15).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorGargantaModeradaDia15).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorGargantaSeveraDia15).setEnabled(false);
                                        if (segFlu.getDolorGargantaLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia15)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia15)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaLeve(segFlu.getDolorGargantaLeve());
                                        }
                                        if (segFlu.getDolorGargantaModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia15)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia15)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaModerada(segFlu.getDolorGargantaModerada());
                                        }
                                        if (segFlu.getDolorGargantaSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia15)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia15)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaSevera(segFlu.getDolorGargantaSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorGargantaLeve(null);
                                    seguimientoInfluenza.setDolorGargantaModerada(null);
                                    seguimientoInfluenza.setDolorGargantaSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorGargantaDia15).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia15)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia15)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia15)).setChecked(false);
                                }
                                break;
                            case 16:
                                if (seguimientoInfluenza.getDolorGarganta().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorGargantaDia16).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorGargantaDia16).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorGargantaLeveDia16).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorGargantaModeradaDia16).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorGargantaSeveraDia16).setEnabled(false);
                                        if (segFlu.getDolorGargantaLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia16)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia16)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaLeve(segFlu.getDolorGargantaLeve());
                                        }
                                        if (segFlu.getDolorGargantaModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia16)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia16)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaModerada(segFlu.getDolorGargantaModerada());
                                        }
                                        if (segFlu.getDolorGargantaSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia16)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia16)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaSevera(segFlu.getDolorGargantaSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorGargantaLeve(null);
                                    seguimientoInfluenza.setDolorGargantaModerada(null);
                                    seguimientoInfluenza.setDolorGargantaSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorGargantaDia16).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia16)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia16)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia16)).setChecked(false);
                                }
                                break;
                            case 17:
                                if (seguimientoInfluenza.getDolorGarganta().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorGargantaDia17).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorGargantaDia17).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorGargantaLeveDia17).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorGargantaModeradaDia17).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorGargantaSeveraDia17).setEnabled(false);
                                        if (segFlu.getDolorGargantaLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia17)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia17)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaLeve(segFlu.getDolorGargantaLeve());
                                        }
                                        if (segFlu.getDolorGargantaModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia17)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia17)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaModerada(segFlu.getDolorGargantaModerada());
                                        }
                                        if (segFlu.getDolorGargantaSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia17)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia17)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaSevera(segFlu.getDolorGargantaSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorGargantaLeve(null);
                                    seguimientoInfluenza.setDolorGargantaModerada(null);
                                    seguimientoInfluenza.setDolorGargantaSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorGargantaDia17).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia17)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia17)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia17)).setChecked(false);
                                }
                                break;
                            case 18:
                                if (seguimientoInfluenza.getDolorGarganta().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorGargantaDia18).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorGargantaDia18).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorGargantaLeveDia18).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorGargantaModeradaDia18).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorGargantaSeveraDia18).setEnabled(false);
                                        if (segFlu.getDolorGargantaLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia18)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia18)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaLeve(segFlu.getDolorGargantaLeve());
                                        }
                                        if (segFlu.getDolorGargantaModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia18)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia18)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaModerada(segFlu.getDolorGargantaModerada());
                                        }
                                        if (segFlu.getDolorGargantaSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia18)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia18)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaSevera(segFlu.getDolorGargantaSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorGargantaLeve(null);
                                    seguimientoInfluenza.setDolorGargantaModerada(null);
                                    seguimientoInfluenza.setDolorGargantaSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorGargantaDia18).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia18)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia18)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia18)).setChecked(false);
                                }
                                break;
                            case 19:
                                if (seguimientoInfluenza.getDolorGarganta().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorGargantaDia19).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorGargantaDia19).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorGargantaLeveDia19).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorGargantaModeradaDia19).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorGargantaSeveraDia19).setEnabled(false);
                                        if (segFlu.getDolorGargantaLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia19)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia19)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaLeve(segFlu.getDolorGargantaLeve());
                                        }
                                        if (segFlu.getDolorGargantaModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia19)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia19)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaModerada(segFlu.getDolorGargantaModerada());
                                        }
                                        if (segFlu.getDolorGargantaSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia19)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia19)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaSevera(segFlu.getDolorGargantaSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorGargantaLeve(null);
                                    seguimientoInfluenza.setDolorGargantaModerada(null);
                                    seguimientoInfluenza.setDolorGargantaSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorGargantaDia19).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia19)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia19)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia19)).setChecked(false);
                                }
                                break;
                            case 20:
                                if (seguimientoInfluenza.getDolorGarganta().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorGargantaDia20).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorGargantaDia20).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorGargantaLeveDia20).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorGargantaModeradaDia20).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorGargantaSeveraDia20).setEnabled(false);
                                        if (segFlu.getDolorGargantaLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia20)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia20)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaLeve(segFlu.getDolorGargantaLeve());
                                        }
                                        if (segFlu.getDolorGargantaModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia20)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia20)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaModerada(segFlu.getDolorGargantaModerada());
                                        }
                                        if (segFlu.getDolorGargantaSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia20)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia20)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaSevera(segFlu.getDolorGargantaSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorGargantaLeve(null);
                                    seguimientoInfluenza.setDolorGargantaModerada(null);
                                    seguimientoInfluenza.setDolorGargantaSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorGargantaDia20).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia20)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia20)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia20)).setChecked(false);
                                }
                                break;
                            case 21:
                                if (seguimientoInfluenza.getDolorGarganta().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorGargantaDia21).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorGargantaDia21).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorGargantaLeveDia21).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorGargantaModeradaDia21).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorGargantaSeveraDia21).setEnabled(false);
                                        if (segFlu.getDolorGargantaLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia21)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia21)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaLeve(segFlu.getDolorGargantaLeve());
                                        }
                                        if (segFlu.getDolorGargantaModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia21)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia21)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaModerada(segFlu.getDolorGargantaModerada());
                                        }
                                        if (segFlu.getDolorGargantaSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia21)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia21)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaSevera(segFlu.getDolorGargantaSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorGargantaLeve(null);
                                    seguimientoInfluenza.setDolorGargantaModerada(null);
                                    seguimientoInfluenza.setDolorGargantaSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorGargantaDia21).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia21)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia21)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia21)).setChecked(false);
                                }
                                break;
                            case 22:
                                if (seguimientoInfluenza.getDolorGarganta().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorGargantaDia22).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorGargantaDia22).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorGargantaLeveDia22).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorGargantaModeradaDia22).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorGargantaSeveraDia22).setEnabled(false);
                                        if (segFlu.getDolorGargantaLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia22)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia22)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaLeve(segFlu.getDolorGargantaLeve());
                                        }
                                        if (segFlu.getDolorGargantaModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia22)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia22)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaModerada(segFlu.getDolorGargantaModerada());
                                        }
                                        if (segFlu.getDolorGargantaSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia22)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia22)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaSevera(segFlu.getDolorGargantaSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorGargantaLeve(null);
                                    seguimientoInfluenza.setDolorGargantaModerada(null);
                                    seguimientoInfluenza.setDolorGargantaSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorGargantaDia22).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia22)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia22)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia22)).setChecked(false);
                                }
                                break;
                            case 23:
                                if (seguimientoInfluenza.getDolorGarganta().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorGargantaDia23).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorGargantaDia23).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorGargantaLeveDia23).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorGargantaModeradaDia23).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorGargantaSeveraDia23).setEnabled(false);
                                        if (segFlu.getDolorGargantaLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia23)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia23)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaLeve(segFlu.getDolorGargantaLeve());
                                        }
                                        if (segFlu.getDolorGargantaModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia23)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia23)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaModerada(segFlu.getDolorGargantaModerada());
                                        }
                                        if (segFlu.getDolorGargantaSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia23)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia23)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaSevera(segFlu.getDolorGargantaSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorGargantaLeve(null);
                                    seguimientoInfluenza.setDolorGargantaModerada(null);
                                    seguimientoInfluenza.setDolorGargantaSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorGargantaDia23).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia23)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia23)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia23)).setChecked(false);
                                }
                                break;
                            case 24:
                                if (seguimientoInfluenza.getDolorGarganta().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorGargantaDia24).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorGargantaDia24).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorGargantaLeveDia24).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorGargantaModeradaDia24).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorGargantaSeveraDia24).setEnabled(false);
                                        if (segFlu.getDolorGargantaLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia24)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia24)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaLeve(segFlu.getDolorGargantaLeve());
                                        }
                                        if (segFlu.getDolorGargantaModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia24)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia24)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaModerada(segFlu.getDolorGargantaModerada());
                                        }
                                        if (segFlu.getDolorGargantaSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia24)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia24)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaSevera(segFlu.getDolorGargantaSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorGargantaLeve(null);
                                    seguimientoInfluenza.setDolorGargantaModerada(null);
                                    seguimientoInfluenza.setDolorGargantaSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorGargantaDia24).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia24)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia24)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia24)).setChecked(false);
                                }
                                break;
                            case 25:
                                if (seguimientoInfluenza.getDolorGarganta().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorGargantaDia25).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorGargantaDia25).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorGargantaLeveDia25).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorGargantaModeradaDia25).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorGargantaSeveraDia25).setEnabled(false);
                                        if (segFlu.getDolorGargantaLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia25)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia25)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaLeve(segFlu.getDolorGargantaLeve());
                                        }
                                        if (segFlu.getDolorGargantaModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia25)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia25)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaModerada(segFlu.getDolorGargantaModerada());
                                        }
                                        if (segFlu.getDolorGargantaSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia25)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia25)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaSevera(segFlu.getDolorGargantaSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorGargantaLeve(null);
                                    seguimientoInfluenza.setDolorGargantaModerada(null);
                                    seguimientoInfluenza.setDolorGargantaSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorGargantaDia25).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia25)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia25)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia25)).setChecked(false);
                                }
                                break;
                            case 26:
                                if (seguimientoInfluenza.getDolorGarganta().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorGargantaDia26).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorGargantaDia26).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorGargantaLeveDia26).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorGargantaModeradaDia26).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorGargantaSeveraDia26).setEnabled(false);
                                        if (segFlu.getDolorGargantaLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia26)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia26)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaLeve(segFlu.getDolorGargantaLeve());
                                        }
                                        if (segFlu.getDolorGargantaModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia26)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia26)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaModerada(segFlu.getDolorGargantaModerada());
                                        }
                                        if (segFlu.getDolorGargantaSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia26)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia26)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaSevera(segFlu.getDolorGargantaSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorGargantaLeve(null);
                                    seguimientoInfluenza.setDolorGargantaModerada(null);
                                    seguimientoInfluenza.setDolorGargantaSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorGargantaDia26).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia26)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia26)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia26)).setChecked(false);
                                }
                                break;
                            case 27:
                                if (seguimientoInfluenza.getDolorGarganta().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorGargantaDia27).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorGargantaDia27).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorGargantaLeveDia27).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorGargantaModeradaDia27).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorGargantaSeveraDia27).setEnabled(false);
                                        if (segFlu.getDolorGargantaLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia27)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia27)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaLeve(segFlu.getDolorGargantaLeve());
                                        }
                                        if (segFlu.getDolorGargantaModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia27)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia27)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaModerada(segFlu.getDolorGargantaModerada());
                                        }
                                        if (segFlu.getDolorGargantaSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia27)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia27)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaSevera(segFlu.getDolorGargantaSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorGargantaLeve(null);
                                    seguimientoInfluenza.setDolorGargantaModerada(null);
                                    seguimientoInfluenza.setDolorGargantaSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorGargantaDia27).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia27)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia27)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia27)).setChecked(false);
                                }
                                break;
                            case 28:
                                if (seguimientoInfluenza.getDolorGarganta().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorGargantaDia28).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorGargantaDia28).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorGargantaLeveDia28).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorGargantaModeradaDia28).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorGargantaSeveraDia28).setEnabled(false);
                                        if (segFlu.getDolorGargantaLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia28)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia28)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaLeve(segFlu.getDolorGargantaLeve());
                                        }
                                        if (segFlu.getDolorGargantaModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia28)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia28)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaModerada(segFlu.getDolorGargantaModerada());
                                        }
                                        if (segFlu.getDolorGargantaSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia28)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia28)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorGargantaSevera(segFlu.getDolorGargantaSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorGargantaLeve(null);
                                    seguimientoInfluenza.setDolorGargantaModerada(null);
                                    seguimientoInfluenza.setDolorGargantaSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorGargantaDia28).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaLeveDia28)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaModeradaDia28)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorGargantaSeveraDia28)).setChecked(false);
                                }
                                break;
                        }
                    }
                } else if (mSeguimientoInfluenzaActivity.adapter != null && mSeguimientoInfluenzaActivity.adapter.getItem(position).toString().compareTo("Seleccione") != 0) {
                    seguimientoInfluenza = new SeguimientoInfluenzaDTO();
                    seguimientoInfluenza.setControlDia(mPage);
                    seguimientoInfluenza.setDolorGarganta(mSeguimientoInfluenzaActivity.adapter.getItem(position).toString());
                    mSeguimientoInfluenzaActivity.nuevaListaSegInfluenza.add(seguimientoInfluenza);
                }
            }

            public void cargarCongestionNasal(int position) {
                SeguimientoInfluenzaDTO seguimientoInfluenza = obtenerNuevoSeguimientoPorDia(mPage);
                if (mSeguimientoInfluenzaActivity.adapter != null && seguimientoInfluenza != null) {
                    seguimientoInfluenza.setCongestionNasa((mSeguimientoInfluenzaActivity.adapter.getItem(position).toString().compareTo("Seleccione") != 0) ?
                            mSeguimientoInfluenzaActivity.adapter.getItem(position).toString() : null);
                } else if (mSeguimientoInfluenzaActivity.adapter != null && mSeguimientoInfluenzaActivity.adapter.getItem(position).toString().compareTo("Seleccione") != 0) {
                    seguimientoInfluenza = new SeguimientoInfluenzaDTO();
                    seguimientoInfluenza.setControlDia(mPage);
                    seguimientoInfluenza.setCongestionNasa(mSeguimientoInfluenzaActivity.adapter.getItem(position).toString());
                    mSeguimientoInfluenzaActivity.nuevaListaSegInfluenza.add(seguimientoInfluenza);
                }
            }

            public void cargarDolorCabeza(int position) {
                SeguimientoInfluenzaDTO seguimientoInfluenza = obtenerNuevoSeguimientoPorDia(mPage);
                if (mSeguimientoInfluenzaActivity.adapter != null && seguimientoInfluenza != null) {
                    seguimientoInfluenza.setDolorCabeza((mSeguimientoInfluenzaActivity.adapter.getItem(position).toString().compareTo("Seleccione") != 0) ?
                            mSeguimientoInfluenzaActivity.adapter.getItem(position).toString() : null);
                    /*CAMBIO DOLOR CABEZA*/
                    if (seguimientoInfluenza.getDolorCabeza() != null) {
                        switch (mPage) {
                            case 1:
                                if (seguimientoInfluenza.getDolorCabeza().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorCabezaDia1).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorCabezaDia1).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorCabezaLeveDia1).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorCabezaModeradaDia1).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorCabezaSeveraDia1).setEnabled(false);
                                        if (segFlu.getDolorCabezaLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia1)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia1)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaLeve(segFlu.getDolorCabezaLeve());
                                        }
                                        if (segFlu.getDolorCabezaModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia1)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia1)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaModerada(segFlu.getDolorCabezaModerada());
                                        }
                                        if (segFlu.getDolorCabezaSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia1)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia1)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaSevera(segFlu.getDolorCabezaSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorCabezaLeve(null);
                                    seguimientoInfluenza.setDolorCabezaModerada(null);
                                    seguimientoInfluenza.setDolorCabezaSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorCabezaDia1).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia1)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia1)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia1)).setChecked(false);
                                }
                                break;
                            case 2:
                                if (seguimientoInfluenza.getDolorCabeza().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorCabezaDia2).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorCabezaDia2).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorCabezaLeveDia2).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorCabezaModeradaDia2).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorCabezaSeveraDia2).setEnabled(false);
                                        if (segFlu.getDolorCabezaLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia2)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia2)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaLeve(segFlu.getDolorCabezaLeve());
                                        }
                                        if (segFlu.getDolorCabezaModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia2)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia2)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaModerada(segFlu.getDolorCabezaModerada());
                                        }
                                        if (segFlu.getDolorCabezaSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia2)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia2)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaSevera(segFlu.getDolorCabezaSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorCabezaLeve(null);
                                    seguimientoInfluenza.setDolorCabezaModerada(null);
                                    seguimientoInfluenza.setDolorCabezaSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorCabezaDia2).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia2)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia2)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia2)).setChecked(false);
                                }
                                break;
                            case 3:
                                if (seguimientoInfluenza.getDolorCabeza().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorCabezaDia3).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorCabezaDia3).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorCabezaLeveDia3).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorCabezaModeradaDia3).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorCabezaSeveraDia3).setEnabled(false);
                                        if (segFlu.getDolorCabezaLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia3)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia3)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaLeve(segFlu.getDolorCabezaLeve());
                                        }
                                        if (segFlu.getDolorCabezaModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia3)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia3)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaModerada(segFlu.getDolorCabezaModerada());
                                        }
                                        if (segFlu.getDolorCabezaSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia3)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia3)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaSevera(segFlu.getDolorCabezaSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorCabezaLeve(null);
                                    seguimientoInfluenza.setDolorCabezaModerada(null);
                                    seguimientoInfluenza.setDolorCabezaSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorCabezaDia3).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia3)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia3)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia3)).setChecked(false);
                                }
                                break;
                            case 4:
                                if (seguimientoInfluenza.getDolorCabeza().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorCabezaDia4).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorCabezaDia4).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorCabezaLeveDia4).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorCabezaModeradaDia4).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorCabezaSeveraDia4).setEnabled(false);
                                        if (segFlu.getDolorCabezaLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia4)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia4)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaLeve(segFlu.getDolorCabezaLeve());
                                        }
                                        if (segFlu.getDolorCabezaModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia4)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia4)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaModerada(segFlu.getDolorCabezaModerada());
                                        }
                                        if (segFlu.getDolorCabezaSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia4)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia4)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaSevera(segFlu.getDolorCabezaSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorCabezaLeve(null);
                                    seguimientoInfluenza.setDolorCabezaModerada(null);
                                    seguimientoInfluenza.setDolorCabezaSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorCabezaDia4).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia4)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia4)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia4)).setChecked(false);
                                }
                                break;
                            case 5:
                                if (seguimientoInfluenza.getDolorCabeza().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorCabezaDia5).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorCabezaDia5).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorCabezaLeveDia5).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorCabezaModeradaDia5).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorCabezaSeveraDia5).setEnabled(false);
                                        if (segFlu.getDolorCabezaLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia5)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia5)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaLeve(segFlu.getDolorCabezaLeve());
                                        }
                                        if (segFlu.getDolorCabezaModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia5)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia5)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaModerada(segFlu.getDolorCabezaModerada());
                                        }
                                        if (segFlu.getDolorCabezaSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia5)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia5)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaSevera(segFlu.getDolorCabezaSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorCabezaLeve(null);
                                    seguimientoInfluenza.setDolorCabezaModerada(null);
                                    seguimientoInfluenza.setDolorCabezaSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorCabezaDia5).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia5)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia5)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia5)).setChecked(false);
                                }
                                break;
                            case 6:
                                if (seguimientoInfluenza.getDolorCabeza().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorCabezaDia6).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorCabezaDia6).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorCabezaLeveDia6).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorCabezaModeradaDia6).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorCabezaSeveraDia6).setEnabled(false);
                                        if (segFlu.getDolorCabezaLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia6)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia6)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaLeve(segFlu.getDolorCabezaLeve());
                                        }
                                        if (segFlu.getDolorCabezaModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia6)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia6)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaModerada(segFlu.getDolorCabezaModerada());
                                        }
                                        if (segFlu.getDolorCabezaSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia6)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia6)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaSevera(segFlu.getDolorCabezaSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorCabezaLeve(null);
                                    seguimientoInfluenza.setDolorCabezaModerada(null);
                                    seguimientoInfluenza.setDolorCabezaSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorCabezaDia6).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia6)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia6)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia6)).setChecked(false);
                                }
                                break;
                            case 7:
                                if (seguimientoInfluenza.getDolorCabeza().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorCabezaDia7).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorCabezaDia7).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorCabezaLeveDia7).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorCabezaModeradaDia7).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorCabezaSeveraDia7).setEnabled(false);
                                        if (segFlu.getDolorCabezaLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia7)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia7)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaLeve(segFlu.getDolorCabezaLeve());
                                        }
                                        if (segFlu.getDolorCabezaModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia7)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia7)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaModerada(segFlu.getDolorCabezaModerada());
                                        }
                                        if (segFlu.getDolorCabezaSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia7)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia7)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaSevera(segFlu.getDolorCabezaSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorCabezaLeve(null);
                                    seguimientoInfluenza.setDolorCabezaModerada(null);
                                    seguimientoInfluenza.setDolorCabezaSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorCabezaDia7).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia7)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia7)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia7)).setChecked(false);
                                }
                                break;
                            case 8:
                                if (seguimientoInfluenza.getDolorCabeza().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorCabezaDia8).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorCabezaDia8).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorCabezaLeveDia8).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorCabezaModeradaDia8).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorCabezaSeveraDia8).setEnabled(false);
                                        if (segFlu.getDolorCabezaLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia8)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia8)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaLeve(segFlu.getDolorCabezaLeve());
                                        }
                                        if (segFlu.getDolorCabezaModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia8)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia8)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaModerada(segFlu.getDolorCabezaModerada());
                                        }
                                        if (segFlu.getDolorCabezaSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia8)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia8)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaSevera(segFlu.getDolorCabezaSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorCabezaLeve(null);
                                    seguimientoInfluenza.setDolorCabezaModerada(null);
                                    seguimientoInfluenza.setDolorCabezaSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorCabezaDia8).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia8)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia8)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia8)).setChecked(false);
                                }
                                break;
                            case 9:
                                if (seguimientoInfluenza.getDolorCabeza().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorCabezaDia9).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorCabezaDia9).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorCabezaLeveDia9).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorCabezaModeradaDia9).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorCabezaSeveraDia9).setEnabled(false);
                                        if (segFlu.getDolorCabezaLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia9)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia9)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaLeve(segFlu.getDolorCabezaLeve());
                                        }
                                        if (segFlu.getDolorCabezaModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia9)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia9)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaModerada(segFlu.getDolorCabezaModerada());
                                        }
                                        if (segFlu.getDolorCabezaSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia9)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia9)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaSevera(segFlu.getDolorCabezaSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorCabezaLeve(null);
                                    seguimientoInfluenza.setDolorCabezaModerada(null);
                                    seguimientoInfluenza.setDolorCabezaSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorCabezaDia9).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia9)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia9)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia9)).setChecked(false);
                                }
                                break;
                            case 10:
                                if (seguimientoInfluenza.getDolorCabeza().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorCabezaDia10).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorCabezaDia10).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorCabezaLeveDia10).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorCabezaModeradaDia10).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorCabezaSeveraDia10).setEnabled(false);
                                        if (segFlu.getDolorCabezaLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia10)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia10)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaLeve(segFlu.getDolorCabezaLeve());
                                        }
                                        if (segFlu.getDolorCabezaModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia10)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia10)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaModerada(segFlu.getDolorCabezaModerada());
                                        }
                                        if (segFlu.getDolorCabezaSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia10)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia10)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaSevera(segFlu.getDolorCabezaSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorCabezaLeve(null);
                                    seguimientoInfluenza.setDolorCabezaModerada(null);
                                    seguimientoInfluenza.setDolorCabezaSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorCabezaDia10).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia10)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia10)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia10)).setChecked(false);
                                }
                                break;
                            case 11:
                                if (seguimientoInfluenza.getDolorCabeza().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorCabezaDia11).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorCabezaDia11).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorCabezaLeveDia11).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorCabezaModeradaDia11).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorCabezaSeveraDia11).setEnabled(false);
                                        if (segFlu.getDolorCabezaLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia11)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia11)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaLeve(segFlu.getDolorCabezaLeve());
                                        }
                                        if (segFlu.getDolorCabezaModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia11)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia11)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaModerada(segFlu.getDolorCabezaModerada());
                                        }
                                        if (segFlu.getDolorCabezaSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia11)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia11)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaSevera(segFlu.getDolorCabezaSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorCabezaLeve(null);
                                    seguimientoInfluenza.setDolorCabezaModerada(null);
                                    seguimientoInfluenza.setDolorCabezaSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorCabezaDia11).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia11)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia11)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia11)).setChecked(false);
                                }
                                break;
                            case 12:
                                if (seguimientoInfluenza.getDolorCabeza().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorCabezaDia12).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorCabezaDia12).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorCabezaLeveDia12).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorCabezaModeradaDia12).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorCabezaSeveraDia12).setEnabled(false);
                                        if (segFlu.getDolorCabezaLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia12)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia12)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaLeve(segFlu.getDolorCabezaLeve());
                                        }
                                        if (segFlu.getDolorCabezaModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia12)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia12)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaModerada(segFlu.getDolorCabezaModerada());
                                        }
                                        if (segFlu.getDolorCabezaSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia12)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia12)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaSevera(segFlu.getDolorCabezaSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorCabezaLeve(null);
                                    seguimientoInfluenza.setDolorCabezaModerada(null);
                                    seguimientoInfluenza.setDolorCabezaSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorCabezaDia12).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia12)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia12)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia12)).setChecked(false);
                                }
                                break;
                            case 13:
                                if (seguimientoInfluenza.getDolorCabeza().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorCabezaDia13).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorCabezaDia13).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorCabezaLeveDia13).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorCabezaModeradaDia13).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorCabezaSeveraDia13).setEnabled(false);
                                        if (segFlu.getDolorCabezaLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia13)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia13)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaLeve(segFlu.getDolorCabezaLeve());
                                        }
                                        if (segFlu.getDolorCabezaModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia13)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia13)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaModerada(segFlu.getDolorCabezaModerada());
                                        }
                                        if (segFlu.getDolorCabezaSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia13)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia13)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaSevera(segFlu.getDolorCabezaSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorCabezaLeve(null);
                                    seguimientoInfluenza.setDolorCabezaModerada(null);
                                    seguimientoInfluenza.setDolorCabezaSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorCabezaDia13).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia13)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia13)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia13)).setChecked(false);
                                }
                                break;
                            case 14:
                                if (seguimientoInfluenza.getDolorCabeza().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorCabezaDia14).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorCabezaDia14).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorCabezaLeveDia14).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorCabezaModeradaDia14).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorCabezaSeveraDia14).setEnabled(false);
                                        if (segFlu.getDolorCabezaLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia14)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia14)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaLeve(segFlu.getDolorCabezaLeve());
                                        }
                                        if (segFlu.getDolorCabezaModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia14)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia14)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaModerada(segFlu.getDolorCabezaModerada());
                                        }
                                        if (segFlu.getDolorCabezaSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia14)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia14)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaSevera(segFlu.getDolorCabezaSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorCabezaLeve(null);
                                    seguimientoInfluenza.setDolorCabezaModerada(null);
                                    seguimientoInfluenza.setDolorCabezaSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorCabezaDia14).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia14)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia14)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia14)).setChecked(false);
                                }
                                break;
                            case 15:
                                if (seguimientoInfluenza.getDolorCabeza().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorCabezaDia15).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorCabezaDia15).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorCabezaLeveDia15).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorCabezaModeradaDia15).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorCabezaSeveraDia15).setEnabled(false);
                                        if (segFlu.getDolorCabezaLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia15)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia15)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaLeve(segFlu.getDolorCabezaLeve());
                                        }
                                        if (segFlu.getDolorCabezaModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia15)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia15)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaModerada(segFlu.getDolorCabezaModerada());
                                        }
                                        if (segFlu.getDolorCabezaSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia15)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia15)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaSevera(segFlu.getDolorCabezaSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorCabezaLeve(null);
                                    seguimientoInfluenza.setDolorCabezaModerada(null);
                                    seguimientoInfluenza.setDolorCabezaSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorCabezaDia15).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia15)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia15)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia15)).setChecked(false);
                                }
                                break;
                            case 16:
                                if (seguimientoInfluenza.getDolorCabeza().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorCabezaDia16).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorCabezaDia16).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorCabezaLeveDia16).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorCabezaModeradaDia16).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorCabezaSeveraDia16).setEnabled(false);
                                        if (segFlu.getDolorCabezaLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia16)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia16)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaLeve(segFlu.getDolorCabezaLeve());
                                        }
                                        if (segFlu.getDolorCabezaModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia16)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia16)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaModerada(segFlu.getDolorCabezaModerada());
                                        }
                                        if (segFlu.getDolorCabezaSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia16)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia16)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaSevera(segFlu.getDolorCabezaSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorCabezaLeve(null);
                                    seguimientoInfluenza.setDolorCabezaModerada(null);
                                    seguimientoInfluenza.setDolorCabezaSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorCabezaDia16).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia16)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia16)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia16)).setChecked(false);
                                }
                                break;
                            case 17:
                                if (seguimientoInfluenza.getDolorCabeza().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorCabezaDia17).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorCabezaDia17).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorCabezaLeveDia17).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorCabezaModeradaDia17).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorCabezaSeveraDia17).setEnabled(false);
                                        if (segFlu.getDolorCabezaLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia17)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia17)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaLeve(segFlu.getDolorCabezaLeve());
                                        }
                                        if (segFlu.getDolorCabezaModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia17)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia17)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaModerada(segFlu.getDolorCabezaModerada());
                                        }
                                        if (segFlu.getDolorCabezaSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia17)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia17)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaSevera(segFlu.getDolorCabezaSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorCabezaLeve(null);
                                    seguimientoInfluenza.setDolorCabezaModerada(null);
                                    seguimientoInfluenza.setDolorCabezaSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorCabezaDia17).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia17)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia17)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia17)).setChecked(false);
                                }
                                break;
                            case 18:
                                if (seguimientoInfluenza.getDolorCabeza().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorCabezaDia18).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorCabezaDia18).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorCabezaLeveDia18).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorCabezaModeradaDia18).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorCabezaSeveraDia18).setEnabled(false);
                                        if (segFlu.getDolorCabezaLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia18)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia18)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaLeve(segFlu.getDolorCabezaLeve());
                                        }
                                        if (segFlu.getDolorCabezaModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia18)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia18)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaModerada(segFlu.getDolorCabezaModerada());
                                        }
                                        if (segFlu.getDolorCabezaSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia18)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia18)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaSevera(segFlu.getDolorCabezaSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorCabezaLeve(null);
                                    seguimientoInfluenza.setDolorCabezaModerada(null);
                                    seguimientoInfluenza.setDolorCabezaSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorCabezaDia18).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia18)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia18)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia18)).setChecked(false);
                                }
                                break;
                            case 19:
                                if (seguimientoInfluenza.getDolorCabeza().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorCabezaDia19).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorCabezaDia19).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorCabezaLeveDia19).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorCabezaModeradaDia19).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorCabezaSeveraDia19).setEnabled(false);
                                        if (segFlu.getDolorCabezaLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia19)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia19)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaLeve(segFlu.getDolorCabezaLeve());
                                        }
                                        if (segFlu.getDolorCabezaModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia19)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia19)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaModerada(segFlu.getDolorCabezaModerada());
                                        }
                                        if (segFlu.getDolorCabezaSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia19)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia19)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaSevera(segFlu.getDolorCabezaSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorCabezaLeve(null);
                                    seguimientoInfluenza.setDolorCabezaModerada(null);
                                    seguimientoInfluenza.setDolorCabezaSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorCabezaDia19).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia19)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia19)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia19)).setChecked(false);
                                }
                                break;
                            case 20:
                                if (seguimientoInfluenza.getDolorCabeza().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorCabezaDia20).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorCabezaDia20).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorCabezaLeveDia20).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorCabezaModeradaDia20).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorCabezaSeveraDia20).setEnabled(false);
                                        if (segFlu.getDolorCabezaLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia20)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia20)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaLeve(segFlu.getDolorCabezaLeve());
                                        }
                                        if (segFlu.getDolorCabezaModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia20)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia20)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaModerada(segFlu.getDolorCabezaModerada());
                                        }
                                        if (segFlu.getDolorCabezaSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia20)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia20)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaSevera(segFlu.getDolorCabezaSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorCabezaLeve(null);
                                    seguimientoInfluenza.setDolorCabezaModerada(null);
                                    seguimientoInfluenza.setDolorCabezaSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorCabezaDia20).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia20)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia20)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia20)).setChecked(false);
                                }
                                break;
                            case 21:
                                if (seguimientoInfluenza.getDolorCabeza().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorCabezaDia21).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorCabezaDia21).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorCabezaLeveDia21).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorCabezaModeradaDia21).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorCabezaSeveraDia21).setEnabled(false);
                                        if (segFlu.getDolorCabezaLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia21)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia21)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaLeve(segFlu.getDolorCabezaLeve());
                                        }
                                        if (segFlu.getDolorCabezaModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia21)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia21)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaModerada(segFlu.getDolorCabezaModerada());
                                        }
                                        if (segFlu.getDolorCabezaSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia21)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia21)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaSevera(segFlu.getDolorCabezaSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorCabezaLeve(null);
                                    seguimientoInfluenza.setDolorCabezaModerada(null);
                                    seguimientoInfluenza.setDolorCabezaSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorCabezaDia21).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia21)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia21)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia21)).setChecked(false);
                                }
                                break;
                            case 22:
                                if (seguimientoInfluenza.getDolorCabeza().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorCabezaDia22).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorCabezaDia22).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorCabezaLeveDia22).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorCabezaModeradaDia22).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorCabezaSeveraDia22).setEnabled(false);
                                        if (segFlu.getDolorCabezaLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia22)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia22)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaLeve(segFlu.getDolorCabezaLeve());
                                        }
                                        if (segFlu.getDolorCabezaModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia22)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia22)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaModerada(segFlu.getDolorCabezaModerada());
                                        }
                                        if (segFlu.getDolorCabezaSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia22)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia22)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaSevera(segFlu.getDolorCabezaSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorCabezaLeve(null);
                                    seguimientoInfluenza.setDolorCabezaModerada(null);
                                    seguimientoInfluenza.setDolorCabezaSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorCabezaDia22).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia22)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia22)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia22)).setChecked(false);
                                }
                                break;
                            case 23:
                                if (seguimientoInfluenza.getDolorCabeza().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorCabezaDia23).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorCabezaDia23).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorCabezaLeveDia23).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorCabezaModeradaDia23).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorCabezaSeveraDia23).setEnabled(false);
                                        if (segFlu.getDolorCabezaLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia23)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia23)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaLeve(segFlu.getDolorCabezaLeve());
                                        }
                                        if (segFlu.getDolorCabezaModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia23)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia23)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaModerada(segFlu.getDolorCabezaModerada());
                                        }
                                        if (segFlu.getDolorCabezaSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia23)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia23)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaSevera(segFlu.getDolorCabezaSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorCabezaLeve(null);
                                    seguimientoInfluenza.setDolorCabezaModerada(null);
                                    seguimientoInfluenza.setDolorCabezaSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorCabezaDia23).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia23)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia23)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia23)).setChecked(false);
                                }
                                break;
                            case 24:
                                if (seguimientoInfluenza.getDolorCabeza().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorCabezaDia24).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorCabezaDia24).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorCabezaLeveDia24).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorCabezaModeradaDia24).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorCabezaSeveraDia24).setEnabled(false);
                                        if (segFlu.getDolorCabezaLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia24)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia24)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaLeve(segFlu.getDolorCabezaLeve());
                                        }
                                        if (segFlu.getDolorCabezaModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia24)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia24)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaModerada(segFlu.getDolorCabezaModerada());
                                        }
                                        if (segFlu.getDolorCabezaSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia24)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia24)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaSevera(segFlu.getDolorCabezaSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorCabezaLeve(null);
                                    seguimientoInfluenza.setDolorCabezaModerada(null);
                                    seguimientoInfluenza.setDolorCabezaSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorCabezaDia24).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia24)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia24)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia24)).setChecked(false);
                                }
                                break;
                            case 25:
                                if (seguimientoInfluenza.getDolorCabeza().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorCabezaDia25).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorCabezaDia25).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorCabezaLeveDia25).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorCabezaModeradaDia25).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorCabezaSeveraDia25).setEnabled(false);
                                        if (segFlu.getDolorCabezaLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia25)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia25)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaLeve(segFlu.getDolorCabezaLeve());
                                        }
                                        if (segFlu.getDolorCabezaModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia25)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia25)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaModerada(segFlu.getDolorCabezaModerada());
                                        }
                                        if (segFlu.getDolorCabezaSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia25)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia25)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaSevera(segFlu.getDolorCabezaSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorCabezaLeve(null);
                                    seguimientoInfluenza.setDolorCabezaModerada(null);
                                    seguimientoInfluenza.setDolorCabezaSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorCabezaDia25).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia25)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia25)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia25)).setChecked(false);
                                }
                                break;
                            case 26:
                                if (seguimientoInfluenza.getDolorCabeza().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorCabezaDia26).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorCabezaDia26).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorCabezaLeveDia26).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorCabezaModeradaDia26).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorCabezaSeveraDia26).setEnabled(false);
                                        if (segFlu.getDolorCabezaLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia26)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia26)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaLeve(segFlu.getDolorCabezaLeve());
                                        }
                                        if (segFlu.getDolorCabezaModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia26)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia26)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaModerada(segFlu.getDolorCabezaModerada());
                                        }
                                        if (segFlu.getDolorCabezaSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia26)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia26)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaSevera(segFlu.getDolorCabezaSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorCabezaLeve(null);
                                    seguimientoInfluenza.setDolorCabezaModerada(null);
                                    seguimientoInfluenza.setDolorCabezaSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorCabezaDia26).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia26)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia26)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia26)).setChecked(false);
                                }
                                break;
                            case 27:
                                if (seguimientoInfluenza.getDolorCabeza().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorCabezaDia27).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorCabezaDia27).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorCabezaLeveDia27).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorCabezaModeradaDia27).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorCabezaSeveraDia27).setEnabled(false);
                                        if (segFlu.getDolorCabezaLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia27)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia27)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaLeve(segFlu.getDolorCabezaLeve());
                                        }
                                        if (segFlu.getDolorCabezaModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia27)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia27)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaModerada(segFlu.getDolorCabezaModerada());
                                        }
                                        if (segFlu.getDolorCabezaSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia27)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia27)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaSevera(segFlu.getDolorCabezaSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorCabezaLeve(null);
                                    seguimientoInfluenza.setDolorCabezaModerada(null);
                                    seguimientoInfluenza.setDolorCabezaSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorCabezaDia27).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia27)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia27)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia27)).setChecked(false);
                                }
                                break;
                            case 28:
                                if (seguimientoInfluenza.getDolorCabeza().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorCabezaDia28).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorCabezaDia28).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorCabezaLeveDia28).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorCabezaModeradaDia28).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorCabezaSeveraDia28).setEnabled(false);
                                        if (segFlu.getDolorCabezaLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia28)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia28)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaLeve(segFlu.getDolorCabezaLeve());
                                        }
                                        if (segFlu.getDolorCabezaModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia28)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia28)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaModerada(segFlu.getDolorCabezaModerada());
                                        }
                                        if (segFlu.getDolorCabezaSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia28)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia28)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorCabezaSevera(segFlu.getDolorCabezaSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorCabezaLeve(null);
                                    seguimientoInfluenza.setDolorCabezaModerada(null);
                                    seguimientoInfluenza.setDolorCabezaSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorCabezaDia28).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaLeveDia28)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaModeradaDia28)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorCabezaSeveraDia28)).setChecked(false);
                                }
                                break;
                        }
                    }
                } else if (mSeguimientoInfluenzaActivity.adapter != null && mSeguimientoInfluenzaActivity.adapter.getItem(position).toString().compareTo("Seleccione") != 0) {
                    seguimientoInfluenza = new SeguimientoInfluenzaDTO();
                    seguimientoInfluenza.setControlDia(mPage);
                    seguimientoInfluenza.setDolorCabeza(mSeguimientoInfluenzaActivity.adapter.getItem(position).toString());
                    mSeguimientoInfluenzaActivity.nuevaListaSegInfluenza.add(seguimientoInfluenza);
                }
            }

            public void cargarFaltaApetito(int position) {
                SeguimientoInfluenzaDTO seguimientoInfluenza = obtenerNuevoSeguimientoPorDia(mPage);
                if (mSeguimientoInfluenzaActivity.adapter != null && seguimientoInfluenza != null) {
                    seguimientoInfluenza.setFaltaApetito((mSeguimientoInfluenzaActivity.adapter.getItem(position).toString().compareTo("Seleccione") != 0) ?
                            mSeguimientoInfluenzaActivity.adapter.getItem(position).toString() : null);
                } else if (mSeguimientoInfluenzaActivity.adapter != null && mSeguimientoInfluenzaActivity.adapter.getItem(position).toString().compareTo("Seleccione") != 0) {
                    seguimientoInfluenza = new SeguimientoInfluenzaDTO();
                    seguimientoInfluenza.setControlDia(mPage);
                    seguimientoInfluenza.setFaltaApetito(mSeguimientoInfluenzaActivity.adapter.getItem(position).toString());
                    mSeguimientoInfluenzaActivity.nuevaListaSegInfluenza.add(seguimientoInfluenza);
                }
            }

            public void cargarDolorMuscular(int position) {
                SeguimientoInfluenzaDTO seguimientoInfluenza = obtenerNuevoSeguimientoPorDia(mPage);
                if (mSeguimientoInfluenzaActivity.adapter != null && seguimientoInfluenza != null) {
                    seguimientoInfluenza.setDolorMuscular((mSeguimientoInfluenzaActivity.adapter.getItem(position).toString().compareTo("Seleccione") != 0) ?
                            mSeguimientoInfluenzaActivity.adapter.getItem(position).toString() : null);
                    /*CAMBIO DOLOR MUSCULAR*/
                    if (seguimientoInfluenza.getDolorMuscular() != null) {
                        switch (mPage) {
                            case 1:
                                if (seguimientoInfluenza.getDolorMuscular().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorMuscularDia1).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorMuscularDia1).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorMuscularLeveDia1).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorMuscularModeradaDia1).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorMuscularSeveraDia1).setEnabled(false);
                                        if (segFlu.getDolorMuscularLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia1)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia1)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularLeve(segFlu.getDolorMuscularLeve());
                                        }
                                        if (segFlu.getDolorMuscularModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia1)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia1)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularModerada(segFlu.getDolorMuscularModerada());
                                        }
                                        if (segFlu.getDolorMuscularSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia1)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia1)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularSevera(segFlu.getDolorMuscularSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorMuscularLeve(null);
                                    seguimientoInfluenza.setDolorMuscularModerada(null);
                                    seguimientoInfluenza.setDolorMuscularSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorMuscularDia1).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia1)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia1)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia1)).setChecked(false);
                                }
                                break;
                            case 2:
                                if (seguimientoInfluenza.getDolorMuscular().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorMuscularDia2).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorMuscularDia2).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorMuscularLeveDia2).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorMuscularModeradaDia2).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorMuscularSeveraDia2).setEnabled(false);
                                        if (segFlu.getDolorMuscularLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia2)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia2)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularLeve(segFlu.getDolorMuscularLeve());
                                        }
                                        if (segFlu.getDolorMuscularModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia2)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia2)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularModerada(segFlu.getDolorMuscularModerada());
                                        }
                                        if (segFlu.getDolorMuscularSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia2)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia2)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularSevera(segFlu.getDolorMuscularSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorMuscularLeve(null);
                                    seguimientoInfluenza.setDolorMuscularModerada(null);
                                    seguimientoInfluenza.setDolorMuscularSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorMuscularDia2).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia2)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia2)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia2)).setChecked(false);
                                }
                                break;
                            case 3:
                                if (seguimientoInfluenza.getDolorMuscular().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorMuscularDia3).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorMuscularDia3).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorMuscularLeveDia3).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorMuscularModeradaDia3).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorMuscularSeveraDia3).setEnabled(false);
                                        if (segFlu.getDolorMuscularLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia3)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia3)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularLeve(segFlu.getDolorMuscularLeve());
                                        }
                                        if (segFlu.getDolorMuscularModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia3)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia3)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularModerada(segFlu.getDolorMuscularModerada());
                                        }
                                        if (segFlu.getDolorMuscularSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia3)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia3)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularSevera(segFlu.getDolorMuscularSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorMuscularLeve(null);
                                    seguimientoInfluenza.setDolorMuscularModerada(null);
                                    seguimientoInfluenza.setDolorMuscularSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorMuscularDia3).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia3)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia3)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia3)).setChecked(false);
                                }
                                break;
                            case 4:
                                if (seguimientoInfluenza.getDolorMuscular().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorMuscularDia4).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorMuscularDia4).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorMuscularLeveDia4).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorMuscularModeradaDia4).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorMuscularSeveraDia4).setEnabled(false);
                                        if (segFlu.getDolorMuscularLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia4)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia4)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularLeve(segFlu.getDolorMuscularLeve());
                                        }
                                        if (segFlu.getDolorMuscularModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia4)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia4)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularModerada(segFlu.getDolorMuscularModerada());
                                        }
                                        if (segFlu.getDolorMuscularSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia4)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia4)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularSevera(segFlu.getDolorMuscularSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorMuscularLeve(null);
                                    seguimientoInfluenza.setDolorMuscularModerada(null);
                                    seguimientoInfluenza.setDolorMuscularSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorMuscularDia4).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia4)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia4)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia4)).setChecked(false);
                                }
                                break;
                            case 5:
                                if (seguimientoInfluenza.getDolorMuscular().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorMuscularDia5).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorMuscularDia5).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorMuscularLeveDia5).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorMuscularModeradaDia5).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorMuscularSeveraDia5).setEnabled(false);
                                        if (segFlu.getDolorMuscularLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia5)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia5)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularLeve(segFlu.getDolorMuscularLeve());
                                        }
                                        if (segFlu.getDolorMuscularModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia5)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia5)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularModerada(segFlu.getDolorMuscularModerada());
                                        }
                                        if (segFlu.getDolorMuscularSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia5)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia5)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularSevera(segFlu.getDolorMuscularSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorMuscularLeve(null);
                                    seguimientoInfluenza.setDolorMuscularModerada(null);
                                    seguimientoInfluenza.setDolorMuscularSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorMuscularDia5).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia5)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia5)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia5)).setChecked(false);
                                }
                                break;
                            case 6:
                                if (seguimientoInfluenza.getDolorMuscular().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorMuscularDia6).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorMuscularDia6).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorMuscularLeveDia6).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorMuscularModeradaDia6).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorMuscularSeveraDia6).setEnabled(false);
                                        if (segFlu.getDolorMuscularLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia6)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia6)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularLeve(segFlu.getDolorMuscularLeve());
                                        }
                                        if (segFlu.getDolorMuscularModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia6)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia6)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularModerada(segFlu.getDolorMuscularModerada());
                                        }
                                        if (segFlu.getDolorMuscularSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia6)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia6)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularSevera(segFlu.getDolorMuscularSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorMuscularLeve(null);
                                    seguimientoInfluenza.setDolorMuscularModerada(null);
                                    seguimientoInfluenza.setDolorMuscularSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorMuscularDia6).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia6)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia6)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia6)).setChecked(false);
                                }
                                break;
                            case 7:
                                if (seguimientoInfluenza.getDolorMuscular().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorMuscularDia7).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorMuscularDia7).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorMuscularLeveDia7).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorMuscularModeradaDia7).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorMuscularSeveraDia7).setEnabled(false);
                                        if (segFlu.getDolorMuscularLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia7)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia7)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularLeve(segFlu.getDolorMuscularLeve());
                                        }
                                        if (segFlu.getDolorMuscularModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia7)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia7)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularModerada(segFlu.getDolorMuscularModerada());
                                        }
                                        if (segFlu.getDolorMuscularSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia7)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia7)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularSevera(segFlu.getDolorMuscularSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorMuscularLeve(null);
                                    seguimientoInfluenza.setDolorMuscularModerada(null);
                                    seguimientoInfluenza.setDolorMuscularSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorMuscularDia7).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia7)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia7)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia7)).setChecked(false);
                                }
                                break;
                            case 8:
                                if (seguimientoInfluenza.getDolorMuscular().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorMuscularDia8).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorMuscularDia8).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorMuscularLeveDia8).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorMuscularModeradaDia8).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorMuscularSeveraDia8).setEnabled(false);
                                        if (segFlu.getDolorMuscularLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia8)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia8)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularLeve(segFlu.getDolorMuscularLeve());
                                        }
                                        if (segFlu.getDolorMuscularModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia8)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia8)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularModerada(segFlu.getDolorMuscularModerada());
                                        }
                                        if (segFlu.getDolorMuscularSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia8)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia8)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularSevera(segFlu.getDolorMuscularSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorMuscularLeve(null);
                                    seguimientoInfluenza.setDolorMuscularModerada(null);
                                    seguimientoInfluenza.setDolorMuscularSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorMuscularDia8).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia8)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia8)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia8)).setChecked(false);
                                }
                                break;
                            case 9:
                                if (seguimientoInfluenza.getDolorMuscular().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorMuscularDia9).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorMuscularDia9).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorMuscularLeveDia9).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorMuscularModeradaDia9).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorMuscularSeveraDia9).setEnabled(false);
                                        if (segFlu.getDolorMuscularLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia9)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia9)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularLeve(segFlu.getDolorMuscularLeve());
                                        }
                                        if (segFlu.getDolorMuscularModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia9)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia9)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularModerada(segFlu.getDolorMuscularModerada());
                                        }
                                        if (segFlu.getDolorMuscularSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia9)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia9)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularSevera(segFlu.getDolorMuscularSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorMuscularLeve(null);
                                    seguimientoInfluenza.setDolorMuscularModerada(null);
                                    seguimientoInfluenza.setDolorMuscularSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorMuscularDia9).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia9)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia9)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia9)).setChecked(false);
                                }
                                break;
                            case 10:
                                if (seguimientoInfluenza.getDolorMuscular().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorMuscularDia10).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorMuscularDia10).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorMuscularLeveDia10).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorMuscularModeradaDia10).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorMuscularSeveraDia10).setEnabled(false);
                                        if (segFlu.getDolorMuscularLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia10)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia10)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularLeve(segFlu.getDolorMuscularLeve());
                                        }
                                        if (segFlu.getDolorMuscularModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia10)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia10)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularModerada(segFlu.getDolorMuscularModerada());
                                        }
                                        if (segFlu.getDolorMuscularSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia10)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia10)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularSevera(segFlu.getDolorMuscularSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorMuscularLeve(null);
                                    seguimientoInfluenza.setDolorMuscularModerada(null);
                                    seguimientoInfluenza.setDolorMuscularSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorMuscularDia10).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia10)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia10)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia10)).setChecked(false);
                                }
                                break;
                            case 11:
                                if (seguimientoInfluenza.getDolorMuscular().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorMuscularDia11).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorMuscularDia11).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorMuscularLeveDia11).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorMuscularModeradaDia11).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorMuscularSeveraDia11).setEnabled(false);
                                        if (segFlu.getDolorMuscularLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia11)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia11)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularLeve(segFlu.getDolorMuscularLeve());
                                        }
                                        if (segFlu.getDolorMuscularModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia11)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia11)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularModerada(segFlu.getDolorMuscularModerada());
                                        }
                                        if (segFlu.getDolorMuscularSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia11)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia11)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularSevera(segFlu.getDolorMuscularSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorMuscularLeve(null);
                                    seguimientoInfluenza.setDolorMuscularModerada(null);
                                    seguimientoInfluenza.setDolorMuscularSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorMuscularDia11).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia11)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia11)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia11)).setChecked(false);
                                }
                                break;
                            case 12:
                                if (seguimientoInfluenza.getDolorMuscular().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorMuscularDia12).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorMuscularDia12).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorMuscularLeveDia12).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorMuscularModeradaDia12).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorMuscularSeveraDia12).setEnabled(false);
                                        if (segFlu.getDolorMuscularLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia12)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia12)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularLeve(segFlu.getDolorMuscularLeve());
                                        }
                                        if (segFlu.getDolorMuscularModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia12)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia12)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularModerada(segFlu.getDolorMuscularModerada());
                                        }
                                        if (segFlu.getDolorMuscularSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia12)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia12)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularSevera(segFlu.getDolorMuscularSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorMuscularLeve(null);
                                    seguimientoInfluenza.setDolorMuscularModerada(null);
                                    seguimientoInfluenza.setDolorMuscularSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorMuscularDia12).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia12)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia12)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia12)).setChecked(false);
                                }
                                break;
                            case 13:
                                if (seguimientoInfluenza.getDolorMuscular().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorMuscularDia13).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorMuscularDia13).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorMuscularLeveDia13).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorMuscularModeradaDia13).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorMuscularSeveraDia13).setEnabled(false);
                                        if (segFlu.getDolorMuscularLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia13)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia13)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularLeve(segFlu.getDolorMuscularLeve());
                                        }
                                        if (segFlu.getDolorMuscularModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia13)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia13)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularModerada(segFlu.getDolorMuscularModerada());
                                        }
                                        if (segFlu.getDolorMuscularSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia13)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia13)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularSevera(segFlu.getDolorMuscularSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorMuscularLeve(null);
                                    seguimientoInfluenza.setDolorMuscularModerada(null);
                                    seguimientoInfluenza.setDolorMuscularSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorMuscularDia13).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia13)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia13)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia13)).setChecked(false);
                                }
                                break;
                            case 14:
                                if (seguimientoInfluenza.getDolorMuscular().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorMuscularDia14).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorMuscularDia14).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorMuscularLeveDia14).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorMuscularModeradaDia14).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorMuscularSeveraDia14).setEnabled(false);
                                        if (segFlu.getDolorMuscularLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia14)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia14)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularLeve(segFlu.getDolorMuscularLeve());
                                        }
                                        if (segFlu.getDolorMuscularModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia14)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia14)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularModerada(segFlu.getDolorMuscularModerada());
                                        }
                                        if (segFlu.getDolorMuscularSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia14)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia14)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularSevera(segFlu.getDolorMuscularSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorMuscularLeve(null);
                                    seguimientoInfluenza.setDolorMuscularModerada(null);
                                    seguimientoInfluenza.setDolorMuscularSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorMuscularDia14).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia14)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia14)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia14)).setChecked(false);
                                }
                                break;
                            case 15:
                                if (seguimientoInfluenza.getDolorMuscular().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorMuscularDia15).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorMuscularDia15).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorMuscularLeveDia15).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorMuscularModeradaDia15).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorMuscularSeveraDia15).setEnabled(false);
                                        if (segFlu.getDolorMuscularLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia15)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia15)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularLeve(segFlu.getDolorMuscularLeve());
                                        }
                                        if (segFlu.getDolorMuscularModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia15)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia15)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularModerada(segFlu.getDolorMuscularModerada());
                                        }
                                        if (segFlu.getDolorMuscularSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia15)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia15)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularSevera(segFlu.getDolorMuscularSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorMuscularLeve(null);
                                    seguimientoInfluenza.setDolorMuscularModerada(null);
                                    seguimientoInfluenza.setDolorMuscularSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorMuscularDia15).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia15)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia15)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia15)).setChecked(false);
                                }
                                break;
                            case 16:
                                if (seguimientoInfluenza.getDolorMuscular().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorMuscularDia16).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorMuscularDia16).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorMuscularLeveDia16).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorMuscularModeradaDia16).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorMuscularSeveraDia16).setEnabled(false);
                                        if (segFlu.getDolorMuscularLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia16)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia16)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularLeve(segFlu.getDolorMuscularLeve());
                                        }
                                        if (segFlu.getDolorMuscularModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia16)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia16)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularModerada(segFlu.getDolorMuscularModerada());
                                        }
                                        if (segFlu.getDolorMuscularSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia16)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia16)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularSevera(segFlu.getDolorMuscularSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorMuscularLeve(null);
                                    seguimientoInfluenza.setDolorMuscularModerada(null);
                                    seguimientoInfluenza.setDolorMuscularSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorMuscularDia16).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia16)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia16)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia16)).setChecked(false);
                                }
                                break;
                            case 17:
                                if (seguimientoInfluenza.getDolorMuscular().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorMuscularDia17).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorMuscularDia17).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorMuscularLeveDia17).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorMuscularModeradaDia17).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorMuscularSeveraDia17).setEnabled(false);
                                        if (segFlu.getDolorMuscularLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia17)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia17)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularLeve(segFlu.getDolorMuscularLeve());
                                        }
                                        if (segFlu.getDolorMuscularModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia17)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia17)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularModerada(segFlu.getDolorMuscularModerada());
                                        }
                                        if (segFlu.getDolorMuscularSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia17)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia17)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularSevera(segFlu.getDolorMuscularSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorMuscularLeve(null);
                                    seguimientoInfluenza.setDolorMuscularModerada(null);
                                    seguimientoInfluenza.setDolorMuscularSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorMuscularDia17).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia17)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia17)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia17)).setChecked(false);
                                }
                                break;
                            case 18:
                                if (seguimientoInfluenza.getDolorMuscular().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorMuscularDia18).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorMuscularDia18).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorMuscularLeveDia18).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorMuscularModeradaDia18).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorMuscularSeveraDia18).setEnabled(false);
                                        if (segFlu.getDolorMuscularLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia18)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia18)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularLeve(segFlu.getDolorMuscularLeve());
                                        }
                                        if (segFlu.getDolorMuscularModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia18)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia18)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularModerada(segFlu.getDolorMuscularModerada());
                                        }
                                        if (segFlu.getDolorMuscularSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia18)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia18)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularSevera(segFlu.getDolorMuscularSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorMuscularLeve(null);
                                    seguimientoInfluenza.setDolorMuscularModerada(null);
                                    seguimientoInfluenza.setDolorMuscularSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorMuscularDia18).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia18)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia18)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia18)).setChecked(false);
                                }
                                break;
                            case 19:
                                if (seguimientoInfluenza.getDolorMuscular().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorMuscularDia19).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorMuscularDia19).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorMuscularLeveDia19).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorMuscularModeradaDia19).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorMuscularSeveraDia19).setEnabled(false);
                                        if (segFlu.getDolorMuscularLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia19)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia19)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularLeve(segFlu.getDolorMuscularLeve());
                                        }
                                        if (segFlu.getDolorMuscularModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia19)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia19)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularModerada(segFlu.getDolorMuscularModerada());
                                        }
                                        if (segFlu.getDolorMuscularSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia19)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia19)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularSevera(segFlu.getDolorMuscularSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorMuscularLeve(null);
                                    seguimientoInfluenza.setDolorMuscularModerada(null);
                                    seguimientoInfluenza.setDolorMuscularSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorMuscularDia19).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia19)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia19)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia19)).setChecked(false);
                                }
                                break;
                            case 20:
                                if (seguimientoInfluenza.getDolorMuscular().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorMuscularDia20).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorMuscularDia20).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorMuscularLeveDia20).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorMuscularModeradaDia20).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorMuscularSeveraDia20).setEnabled(false);
                                        if (segFlu.getDolorMuscularLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia20)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia20)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularLeve(segFlu.getDolorMuscularLeve());
                                        }
                                        if (segFlu.getDolorMuscularModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia20)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia20)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularModerada(segFlu.getDolorMuscularModerada());
                                        }
                                        if (segFlu.getDolorMuscularSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia20)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia20)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularSevera(segFlu.getDolorMuscularSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorMuscularLeve(null);
                                    seguimientoInfluenza.setDolorMuscularModerada(null);
                                    seguimientoInfluenza.setDolorMuscularSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorMuscularDia20).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia20)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia20)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia20)).setChecked(false);
                                }
                                break;
                            case 21:
                                if (seguimientoInfluenza.getDolorMuscular().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorMuscularDia21).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorMuscularDia21).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorMuscularLeveDia21).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorMuscularModeradaDia21).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorMuscularSeveraDia21).setEnabled(false);
                                        if (segFlu.getDolorMuscularLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia21)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia21)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularLeve(segFlu.getDolorMuscularLeve());
                                        }
                                        if (segFlu.getDolorMuscularModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia21)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia21)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularModerada(segFlu.getDolorMuscularModerada());
                                        }
                                        if (segFlu.getDolorMuscularSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia21)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia21)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularSevera(segFlu.getDolorMuscularSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorMuscularLeve(null);
                                    seguimientoInfluenza.setDolorMuscularModerada(null);
                                    seguimientoInfluenza.setDolorMuscularSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorMuscularDia21).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia21)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia21)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia21)).setChecked(false);
                                }
                                break;
                            case 22:
                                if (seguimientoInfluenza.getDolorMuscular().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorMuscularDia22).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorMuscularDia22).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorMuscularLeveDia22).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorMuscularModeradaDia22).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorMuscularSeveraDia22).setEnabled(false);
                                        if (segFlu.getDolorMuscularLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia22)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia22)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularLeve(segFlu.getDolorMuscularLeve());
                                        }
                                        if (segFlu.getDolorMuscularModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia22)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia22)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularModerada(segFlu.getDolorMuscularModerada());
                                        }
                                        if (segFlu.getDolorMuscularSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia22)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia22)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularSevera(segFlu.getDolorMuscularSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorMuscularLeve(null);
                                    seguimientoInfluenza.setDolorMuscularModerada(null);
                                    seguimientoInfluenza.setDolorMuscularSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorMuscularDia22).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia22)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia22)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia22)).setChecked(false);
                                }
                                break;
                            case 23:
                                if (seguimientoInfluenza.getDolorMuscular().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorMuscularDia23).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorMuscularDia23).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorMuscularLeveDia23).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorMuscularModeradaDia23).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorMuscularSeveraDia23).setEnabled(false);
                                        if (segFlu.getDolorMuscularLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia23)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia23)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularLeve(segFlu.getDolorMuscularLeve());
                                        }
                                        if (segFlu.getDolorMuscularModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia23)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia23)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularModerada(segFlu.getDolorMuscularModerada());
                                        }
                                        if (segFlu.getDolorMuscularSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia23)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia23)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularSevera(segFlu.getDolorMuscularSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorMuscularLeve(null);
                                    seguimientoInfluenza.setDolorMuscularModerada(null);
                                    seguimientoInfluenza.setDolorMuscularSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorMuscularDia23).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia23)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia23)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia23)).setChecked(false);
                                }
                                break;
                            case 24:
                                if (seguimientoInfluenza.getDolorMuscular().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorMuscularDia24).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorMuscularDia24).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorMuscularLeveDia24).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorMuscularModeradaDia24).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorMuscularSeveraDia24).setEnabled(false);
                                        if (segFlu.getDolorMuscularLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia24)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia24)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularLeve(segFlu.getDolorMuscularLeve());
                                        }
                                        if (segFlu.getDolorMuscularModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia24)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia24)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularModerada(segFlu.getDolorMuscularModerada());
                                        }
                                        if (segFlu.getDolorMuscularSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia24)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia24)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularSevera(segFlu.getDolorMuscularSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorMuscularLeve(null);
                                    seguimientoInfluenza.setDolorMuscularModerada(null);
                                    seguimientoInfluenza.setDolorMuscularSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorMuscularDia24).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia24)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia24)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia24)).setChecked(false);
                                }
                                break;
                            case 25:
                                if (seguimientoInfluenza.getDolorMuscular().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorMuscularDia25).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorMuscularDia25).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorMuscularLeveDia25).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorMuscularModeradaDia25).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorMuscularSeveraDia25).setEnabled(false);
                                        if (segFlu.getDolorMuscularLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia25)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia25)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularLeve(segFlu.getDolorMuscularLeve());
                                        }
                                        if (segFlu.getDolorMuscularModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia25)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia25)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularModerada(segFlu.getDolorMuscularModerada());
                                        }
                                        if (segFlu.getDolorMuscularSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia25)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia25)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularSevera(segFlu.getDolorMuscularSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorMuscularLeve(null);
                                    seguimientoInfluenza.setDolorMuscularModerada(null);
                                    seguimientoInfluenza.setDolorMuscularSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorMuscularDia25).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia25)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia25)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia25)).setChecked(false);
                                }
                                break;
                            case 26:
                                if (seguimientoInfluenza.getDolorMuscular().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorMuscularDia26).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorMuscularDia26).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorMuscularLeveDia26).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorMuscularModeradaDia26).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorMuscularSeveraDia26).setEnabled(false);
                                        if (segFlu.getDolorMuscularLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia26)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia26)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularLeve(segFlu.getDolorMuscularLeve());
                                        }
                                        if (segFlu.getDolorMuscularModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia26)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia26)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularModerada(segFlu.getDolorMuscularModerada());
                                        }
                                        if (segFlu.getDolorMuscularSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia26)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia26)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularSevera(segFlu.getDolorMuscularSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorMuscularLeve(null);
                                    seguimientoInfluenza.setDolorMuscularModerada(null);
                                    seguimientoInfluenza.setDolorMuscularSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorMuscularDia26).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia26)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia26)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia26)).setChecked(false);
                                }
                                break;
                            case 27:
                                if (seguimientoInfluenza.getDolorMuscular().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorMuscularDia27).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorMuscularDia27).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorMuscularLeveDia27).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorMuscularModeradaDia27).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorMuscularSeveraDia27).setEnabled(false);
                                        if (segFlu.getDolorMuscularLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia27)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia27)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularLeve(segFlu.getDolorMuscularLeve());
                                        }
                                        if (segFlu.getDolorMuscularModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia27)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia27)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularModerada(segFlu.getDolorMuscularModerada());
                                        }
                                        if (segFlu.getDolorMuscularSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia27)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia27)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularSevera(segFlu.getDolorMuscularSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorMuscularLeve(null);
                                    seguimientoInfluenza.setDolorMuscularModerada(null);
                                    seguimientoInfluenza.setDolorMuscularSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorMuscularDia27).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia27)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia27)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia27)).setChecked(false);
                                }
                                break;
                            case 28:
                                if (seguimientoInfluenza.getDolorMuscular().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorMuscularDia28).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorMuscularDia28).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorMuscularLeveDia28).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorMuscularModeradaDia28).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorMuscularSeveraDia28).setEnabled(false);
                                        if (segFlu.getDolorMuscularLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia28)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia28)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularLeve(segFlu.getDolorMuscularLeve());
                                        }
                                        if (segFlu.getDolorMuscularModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia28)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia28)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularModerada(segFlu.getDolorMuscularModerada());
                                        }
                                        if (segFlu.getDolorMuscularSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia28)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia28)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorMuscularSevera(segFlu.getDolorMuscularSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorMuscularLeve(null);
                                    seguimientoInfluenza.setDolorMuscularModerada(null);
                                    seguimientoInfluenza.setDolorMuscularSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorMuscularDia28).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularLeveDia28)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularModeradaDia28)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorMuscularSeveraDia28)).setChecked(false);
                                }
                                break;
                        }
                    }
                } else if (mSeguimientoInfluenzaActivity.adapter != null && mSeguimientoInfluenzaActivity.adapter.getItem(position).toString().compareTo("Seleccione") != 0) {
                    seguimientoInfluenza = new SeguimientoInfluenzaDTO();
                    seguimientoInfluenza.setControlDia(mPage);
                    seguimientoInfluenza.setDolorMuscular(mSeguimientoInfluenzaActivity.adapter.getItem(position).toString());
                    mSeguimientoInfluenzaActivity.nuevaListaSegInfluenza.add(seguimientoInfluenza);
                }
            }

            public void cargarDolorArticular(int position) {
                SeguimientoInfluenzaDTO seguimientoInfluenza = obtenerNuevoSeguimientoPorDia(mPage);
                if (mSeguimientoInfluenzaActivity.adapter != null && seguimientoInfluenza != null) {
                    seguimientoInfluenza.setDolorArticular((mSeguimientoInfluenzaActivity.adapter.getItem(position).toString().compareTo("Seleccione") != 0) ?
                            mSeguimientoInfluenzaActivity.adapter.getItem(position).toString() : null);
                    /*CAMBIO DOLOR ARTICULAR*/
                    if (seguimientoInfluenza.getDolorArticular() != null) {
                        switch (mPage) {
                            case 1:
                                if (seguimientoInfluenza.getDolorArticular().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorArticularDia1).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorArticularDia1).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorArticularLeveDia1).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorArticularModeradaDia1).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorArticularSeveraDia1).setEnabled(false);
                                        if (segFlu.getDolorArticularLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia1)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia1)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularLeve(segFlu.getDolorArticularLeve());
                                        }
                                        if (segFlu.getDolorArticularModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia1)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia1)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularModerada(segFlu.getDolorArticularModerada());
                                        }
                                        if (segFlu.getDolorArticularSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia1)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia1)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularSevera(segFlu.getDolorArticularSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorArticularLeve(null);
                                    seguimientoInfluenza.setDolorArticularModerada(null);
                                    seguimientoInfluenza.setDolorArticularSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorArticularDia1).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia1)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia1)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia1)).setChecked(false);
                                }
                                break;
                            case 2:
                                if (seguimientoInfluenza.getDolorArticular().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorArticularDia2).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorArticularDia2).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorArticularLeveDia2).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorArticularModeradaDia2).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorArticularSeveraDia2).setEnabled(false);
                                        if (segFlu.getDolorArticularLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia2)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia2)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularLeve(segFlu.getDolorArticularLeve());
                                        }
                                        if (segFlu.getDolorArticularModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia2)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia2)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularModerada(segFlu.getDolorArticularModerada());
                                        }
                                        if (segFlu.getDolorArticularSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia2)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia2)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularSevera(segFlu.getDolorArticularSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorArticularLeve(null);
                                    seguimientoInfluenza.setDolorArticularModerada(null);
                                    seguimientoInfluenza.setDolorArticularSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorArticularDia2).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia2)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia2)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia2)).setChecked(false);
                                }
                                break;
                            case 3:
                                if (seguimientoInfluenza.getDolorArticular().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorArticularDia3).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorArticularDia3).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorArticularLeveDia3).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorArticularModeradaDia3).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorArticularSeveraDia3).setEnabled(false);
                                        if (segFlu.getDolorArticularLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia3)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia3)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularLeve(segFlu.getDolorArticularLeve());
                                        }
                                        if (segFlu.getDolorArticularModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia3)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia3)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularModerada(segFlu.getDolorArticularModerada());
                                        }
                                        if (segFlu.getDolorArticularSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia3)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia3)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularSevera(segFlu.getDolorArticularSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorArticularLeve(null);
                                    seguimientoInfluenza.setDolorArticularModerada(null);
                                    seguimientoInfluenza.setDolorArticularSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorArticularDia3).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia3)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia3)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia3)).setChecked(false);
                                }
                                break;
                            case 4:
                                if (seguimientoInfluenza.getDolorArticular().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorArticularDia4).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorArticularDia4).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorArticularLeveDia4).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorArticularModeradaDia4).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorArticularSeveraDia4).setEnabled(false);
                                        if (segFlu.getDolorArticularLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia4)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia4)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularLeve(segFlu.getDolorArticularLeve());
                                        }
                                        if (segFlu.getDolorArticularModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia4)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia4)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularModerada(segFlu.getDolorArticularModerada());
                                        }
                                        if (segFlu.getDolorArticularSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia4)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia4)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularSevera(segFlu.getDolorArticularSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorArticularLeve(null);
                                    seguimientoInfluenza.setDolorArticularModerada(null);
                                    seguimientoInfluenza.setDolorArticularSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorArticularDia4).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia4)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia4)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia4)).setChecked(false);
                                }
                                break;
                            case 5:
                                if (seguimientoInfluenza.getDolorArticular().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorArticularDia5).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorArticularDia5).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorArticularLeveDia5).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorArticularModeradaDia5).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorArticularSeveraDia5).setEnabled(false);
                                        if (segFlu.getDolorArticularLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia5)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia5)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularLeve(segFlu.getDolorArticularLeve());
                                        }
                                        if (segFlu.getDolorArticularModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia5)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia5)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularModerada(segFlu.getDolorArticularModerada());
                                        }
                                        if (segFlu.getDolorArticularSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia5)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia5)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularSevera(segFlu.getDolorArticularSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorArticularLeve(null);
                                    seguimientoInfluenza.setDolorArticularModerada(null);
                                    seguimientoInfluenza.setDolorArticularSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorArticularDia5).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia5)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia5)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia5)).setChecked(false);
                                }
                                break;
                            case 6:
                                if (seguimientoInfluenza.getDolorArticular().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorArticularDia6).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorArticularDia6).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorArticularLeveDia6).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorArticularModeradaDia6).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorArticularSeveraDia6).setEnabled(false);
                                        if (segFlu.getDolorArticularLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia6)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia6)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularLeve(segFlu.getDolorArticularLeve());
                                        }
                                        if (segFlu.getDolorArticularModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia6)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia6)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularModerada(segFlu.getDolorArticularModerada());
                                        }
                                        if (segFlu.getDolorArticularSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia6)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia6)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularSevera(segFlu.getDolorArticularSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorArticularLeve(null);
                                    seguimientoInfluenza.setDolorArticularModerada(null);
                                    seguimientoInfluenza.setDolorArticularSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorArticularDia6).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia6)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia6)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia6)).setChecked(false);
                                }
                                break;
                            case 7:
                                if (seguimientoInfluenza.getDolorArticular().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorArticularDia7).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorArticularDia7).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorArticularLeveDia7).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorArticularModeradaDia7).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorArticularSeveraDia7).setEnabled(false);
                                        if (segFlu.getDolorArticularLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia7)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia7)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularLeve(segFlu.getDolorArticularLeve());
                                        }
                                        if (segFlu.getDolorArticularModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia7)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia7)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularModerada(segFlu.getDolorArticularModerada());
                                        }
                                        if (segFlu.getDolorArticularSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia7)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia7)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularSevera(segFlu.getDolorArticularSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorArticularLeve(null);
                                    seguimientoInfluenza.setDolorArticularModerada(null);
                                    seguimientoInfluenza.setDolorArticularSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorArticularDia7).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia7)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia7)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia7)).setChecked(false);
                                }
                                break;
                            case 8:
                                if (seguimientoInfluenza.getDolorArticular().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorArticularDia8).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorArticularDia8).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorArticularLeveDia8).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorArticularModeradaDia8).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorArticularSeveraDia8).setEnabled(false);
                                        if (segFlu.getDolorArticularLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia8)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia8)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularLeve(segFlu.getDolorArticularLeve());
                                        }
                                        if (segFlu.getDolorArticularModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia8)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia8)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularModerada(segFlu.getDolorArticularModerada());
                                        }
                                        if (segFlu.getDolorArticularSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia8)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia8)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularSevera(segFlu.getDolorArticularSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorArticularLeve(null);
                                    seguimientoInfluenza.setDolorArticularModerada(null);
                                    seguimientoInfluenza.setDolorArticularSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorArticularDia8).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia8)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia8)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia8)).setChecked(false);
                                }
                                break;
                            case 9:
                                if (seguimientoInfluenza.getDolorArticular().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorArticularDia9).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorArticularDia9).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorArticularLeveDia9).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorArticularModeradaDia9).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorArticularSeveraDia9).setEnabled(false);
                                        if (segFlu.getDolorArticularLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia9)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia9)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularLeve(segFlu.getDolorArticularLeve());
                                        }
                                        if (segFlu.getDolorArticularModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia9)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia9)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularModerada(segFlu.getDolorArticularModerada());
                                        }
                                        if (segFlu.getDolorArticularSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia9)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia9)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularSevera(segFlu.getDolorArticularSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorArticularLeve(null);
                                    seguimientoInfluenza.setDolorArticularModerada(null);
                                    seguimientoInfluenza.setDolorArticularSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorArticularDia9).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia9)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia9)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia9)).setChecked(false);
                                }
                                break;
                            case 10:
                                if (seguimientoInfluenza.getDolorArticular().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorArticularDia10).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorArticularDia10).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorArticularLeveDia10).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorArticularModeradaDia10).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorArticularSeveraDia10).setEnabled(false);
                                        if (segFlu.getDolorArticularLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia10)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia10)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularLeve(segFlu.getDolorArticularLeve());
                                        }
                                        if (segFlu.getDolorArticularModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia10)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia10)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularModerada(segFlu.getDolorArticularModerada());
                                        }
                                        if (segFlu.getDolorArticularSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia10)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia10)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularSevera(segFlu.getDolorArticularSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorArticularLeve(null);
                                    seguimientoInfluenza.setDolorArticularModerada(null);
                                    seguimientoInfluenza.setDolorArticularSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorArticularDia10).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia10)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia10)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia10)).setChecked(false);
                                }
                                break;
                            case 11:
                                if (seguimientoInfluenza.getDolorArticular().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorArticularDia11).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorArticularDia11).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorArticularLeveDia11).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorArticularModeradaDia11).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorArticularSeveraDia11).setEnabled(false);
                                        if (segFlu.getDolorArticularLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia11)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia11)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularLeve(segFlu.getDolorArticularLeve());
                                        }
                                        if (segFlu.getDolorArticularModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia11)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia11)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularModerada(segFlu.getDolorArticularModerada());
                                        }
                                        if (segFlu.getDolorArticularSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia11)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia11)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularSevera(segFlu.getDolorArticularSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorArticularLeve(null);
                                    seguimientoInfluenza.setDolorArticularModerada(null);
                                    seguimientoInfluenza.setDolorArticularSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorArticularDia11).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia11)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia11)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia11)).setChecked(false);
                                }
                                break;
                            case 12:
                                if (seguimientoInfluenza.getDolorArticular().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorArticularDia12).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorArticularDia12).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorArticularLeveDia12).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorArticularModeradaDia12).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorArticularSeveraDia12).setEnabled(false);
                                        if (segFlu.getDolorArticularLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia12)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia12)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularLeve(segFlu.getDolorArticularLeve());
                                        }
                                        if (segFlu.getDolorArticularModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia12)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia12)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularModerada(segFlu.getDolorArticularModerada());
                                        }
                                        if (segFlu.getDolorArticularSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia12)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia12)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularSevera(segFlu.getDolorArticularSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorArticularLeve(null);
                                    seguimientoInfluenza.setDolorArticularModerada(null);
                                    seguimientoInfluenza.setDolorArticularSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorArticularDia12).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia12)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia12)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia12)).setChecked(false);
                                }
                                break;
                            case 13:
                                if (seguimientoInfluenza.getDolorArticular().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorArticularDia13).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorArticularDia13).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorArticularLeveDia13).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorArticularModeradaDia13).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorArticularSeveraDia13).setEnabled(false);
                                        if (segFlu.getDolorArticularLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia13)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia13)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularLeve(segFlu.getDolorArticularLeve());
                                        }
                                        if (segFlu.getDolorArticularModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia13)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia13)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularModerada(segFlu.getDolorArticularModerada());
                                        }
                                        if (segFlu.getDolorArticularSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia13)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia13)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularSevera(segFlu.getDolorArticularSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorArticularLeve(null);
                                    seguimientoInfluenza.setDolorArticularModerada(null);
                                    seguimientoInfluenza.setDolorArticularSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorArticularDia13).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia13)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia13)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia13)).setChecked(false);
                                }
                                break;
                            case 14:
                                if (seguimientoInfluenza.getDolorArticular().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorArticularDia14).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorArticularDia14).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorArticularLeveDia14).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorArticularModeradaDia14).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorArticularSeveraDia14).setEnabled(false);
                                        if (segFlu.getDolorArticularLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia14)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia14)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularLeve(segFlu.getDolorArticularLeve());
                                        }
                                        if (segFlu.getDolorArticularModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia14)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia14)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularModerada(segFlu.getDolorArticularModerada());
                                        }
                                        if (segFlu.getDolorArticularSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia14)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia14)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularSevera(segFlu.getDolorArticularSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorArticularLeve(null);
                                    seguimientoInfluenza.setDolorArticularModerada(null);
                                    seguimientoInfluenza.setDolorArticularSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorArticularDia14).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia14)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia14)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia14)).setChecked(false);
                                }
                                break;
                            case 15:
                                if (seguimientoInfluenza.getDolorArticular().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorArticularDia15).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorArticularDia15).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorArticularLeveDia15).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorArticularModeradaDia15).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorArticularSeveraDia15).setEnabled(false);
                                        if (segFlu.getDolorArticularLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia15)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia15)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularLeve(segFlu.getDolorArticularLeve());
                                        }
                                        if (segFlu.getDolorArticularModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia15)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia15)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularModerada(segFlu.getDolorArticularModerada());
                                        }
                                        if (segFlu.getDolorArticularSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia15)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia15)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularSevera(segFlu.getDolorArticularSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorArticularLeve(null);
                                    seguimientoInfluenza.setDolorArticularModerada(null);
                                    seguimientoInfluenza.setDolorArticularSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorArticularDia15).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia15)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia15)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia15)).setChecked(false);
                                }
                                break;
                            case 16:
                                if (seguimientoInfluenza.getDolorArticular().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorArticularDia16).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorArticularDia16).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorArticularLeveDia16).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorArticularModeradaDia16).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorArticularSeveraDia16).setEnabled(false);
                                        if (segFlu.getDolorArticularLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia16)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia16)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularLeve(segFlu.getDolorArticularLeve());
                                        }
                                        if (segFlu.getDolorArticularModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia16)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia16)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularModerada(segFlu.getDolorArticularModerada());
                                        }
                                        if (segFlu.getDolorArticularSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia16)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia16)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularSevera(segFlu.getDolorArticularSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorArticularLeve(null);
                                    seguimientoInfluenza.setDolorArticularModerada(null);
                                    seguimientoInfluenza.setDolorArticularSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorArticularDia16).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia16)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia16)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia16)).setChecked(false);
                                }
                                break;
                            case 17:
                                if (seguimientoInfluenza.getDolorArticular().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorArticularDia17).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorArticularDia17).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorArticularLeveDia17).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorArticularModeradaDia17).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorArticularSeveraDia17).setEnabled(false);
                                        if (segFlu.getDolorArticularLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia17)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia17)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularLeve(segFlu.getDolorArticularLeve());
                                        }
                                        if (segFlu.getDolorArticularModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia17)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia17)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularModerada(segFlu.getDolorArticularModerada());
                                        }
                                        if (segFlu.getDolorArticularSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia17)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia17)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularSevera(segFlu.getDolorArticularSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorArticularLeve(null);
                                    seguimientoInfluenza.setDolorArticularModerada(null);
                                    seguimientoInfluenza.setDolorArticularSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorArticularDia17).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia17)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia17)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia17)).setChecked(false);
                                }
                                break;
                            case 18:
                                if (seguimientoInfluenza.getDolorArticular().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorArticularDia18).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorArticularDia18).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorArticularLeveDia18).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorArticularModeradaDia18).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorArticularSeveraDia18).setEnabled(false);
                                        if (segFlu.getDolorArticularLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia18)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia18)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularLeve(segFlu.getDolorArticularLeve());
                                        }
                                        if (segFlu.getDolorArticularModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia18)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia18)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularModerada(segFlu.getDolorArticularModerada());
                                        }
                                        if (segFlu.getDolorArticularSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia18)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia18)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularSevera(segFlu.getDolorArticularSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorArticularLeve(null);
                                    seguimientoInfluenza.setDolorArticularModerada(null);
                                    seguimientoInfluenza.setDolorArticularSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorArticularDia18).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia18)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia18)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia18)).setChecked(false);
                                }
                                break;
                            case 19:
                                if (seguimientoInfluenza.getDolorArticular().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorArticularDia19).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorArticularDia19).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorArticularLeveDia19).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorArticularModeradaDia19).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorArticularSeveraDia19).setEnabled(false);
                                        if (segFlu.getDolorArticularLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia19)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia19)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularLeve(segFlu.getDolorArticularLeve());
                                        }
                                        if (segFlu.getDolorArticularModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia19)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia19)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularModerada(segFlu.getDolorArticularModerada());
                                        }
                                        if (segFlu.getDolorArticularSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia19)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia19)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularSevera(segFlu.getDolorArticularSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorArticularLeve(null);
                                    seguimientoInfluenza.setDolorArticularModerada(null);
                                    seguimientoInfluenza.setDolorArticularSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorArticularDia19).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia19)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia19)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia19)).setChecked(false);
                                }
                                break;
                            case 20:
                                if (seguimientoInfluenza.getDolorArticular().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorArticularDia20).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorArticularDia20).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorArticularLeveDia20).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorArticularModeradaDia20).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorArticularSeveraDia20).setEnabled(false);
                                        if (segFlu.getDolorArticularLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia20)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia20)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularLeve(segFlu.getDolorArticularLeve());
                                        }
                                        if (segFlu.getDolorArticularModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia20)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia20)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularModerada(segFlu.getDolorArticularModerada());
                                        }
                                        if (segFlu.getDolorArticularSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia20)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia20)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularSevera(segFlu.getDolorArticularSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorArticularLeve(null);
                                    seguimientoInfluenza.setDolorArticularModerada(null);
                                    seguimientoInfluenza.setDolorArticularSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorArticularDia20).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia20)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia20)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia20)).setChecked(false);
                                }
                                break;
                            case 21:
                                if (seguimientoInfluenza.getDolorArticular().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorArticularDia21).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorArticularDia21).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorArticularLeveDia21).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorArticularModeradaDia21).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorArticularSeveraDia21).setEnabled(false);
                                        if (segFlu.getDolorArticularLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia21)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia21)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularLeve(segFlu.getDolorArticularLeve());
                                        }
                                        if (segFlu.getDolorArticularModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia21)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia21)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularModerada(segFlu.getDolorArticularModerada());
                                        }
                                        if (segFlu.getDolorArticularSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia21)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia21)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularSevera(segFlu.getDolorArticularSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorArticularLeve(null);
                                    seguimientoInfluenza.setDolorArticularModerada(null);
                                    seguimientoInfluenza.setDolorArticularSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorArticularDia21).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia21)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia21)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia21)).setChecked(false);
                                }
                                break;
                            case 22:
                                if (seguimientoInfluenza.getDolorArticular().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorArticularDia22).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorArticularDia22).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorArticularLeveDia22).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorArticularModeradaDia22).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorArticularSeveraDia22).setEnabled(false);
                                        if (segFlu.getDolorArticularLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia22)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia22)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularLeve(segFlu.getDolorArticularLeve());
                                        }
                                        if (segFlu.getDolorArticularModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia22)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia22)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularModerada(segFlu.getDolorArticularModerada());
                                        }
                                        if (segFlu.getDolorArticularSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia22)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia22)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularSevera(segFlu.getDolorArticularSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorArticularLeve(null);
                                    seguimientoInfluenza.setDolorArticularModerada(null);
                                    seguimientoInfluenza.setDolorArticularSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorArticularDia22).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia22)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia22)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia22)).setChecked(false);
                                }
                                break;
                            case 23:
                                if (seguimientoInfluenza.getDolorArticular().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorArticularDia23).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorArticularDia23).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorArticularLeveDia23).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorArticularModeradaDia23).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorArticularSeveraDia23).setEnabled(false);
                                        if (segFlu.getDolorArticularLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia23)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia23)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularLeve(segFlu.getDolorArticularLeve());
                                        }
                                        if (segFlu.getDolorArticularModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia23)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia23)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularModerada(segFlu.getDolorArticularModerada());
                                        }
                                        if (segFlu.getDolorArticularSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia23)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia23)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularSevera(segFlu.getDolorArticularSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorArticularLeve(null);
                                    seguimientoInfluenza.setDolorArticularModerada(null);
                                    seguimientoInfluenza.setDolorArticularSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorArticularDia23).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia23)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia23)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia23)).setChecked(false);
                                }
                                break;
                            case 24:
                                if (seguimientoInfluenza.getDolorArticular().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorArticularDia24).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorArticularDia24).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorArticularLeveDia24).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorArticularModeradaDia24).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorArticularSeveraDia24).setEnabled(false);
                                        if (segFlu.getDolorArticularLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia24)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia24)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularLeve(segFlu.getDolorArticularLeve());
                                        }
                                        if (segFlu.getDolorArticularModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia24)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia24)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularModerada(segFlu.getDolorArticularModerada());
                                        }
                                        if (segFlu.getDolorArticularSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia24)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia24)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularSevera(segFlu.getDolorArticularSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorArticularLeve(null);
                                    seguimientoInfluenza.setDolorArticularModerada(null);
                                    seguimientoInfluenza.setDolorArticularSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorArticularDia24).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia24)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia24)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia24)).setChecked(false);
                                }
                                break;
                            case 25:
                                if (seguimientoInfluenza.getDolorArticular().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorArticularDia25).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorArticularDia25).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorArticularLeveDia25).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorArticularModeradaDia25).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorArticularSeveraDia25).setEnabled(false);
                                        if (segFlu.getDolorArticularLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia25)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia25)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularLeve(segFlu.getDolorArticularLeve());
                                        }
                                        if (segFlu.getDolorArticularModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia25)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia25)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularModerada(segFlu.getDolorArticularModerada());
                                        }
                                        if (segFlu.getDolorArticularSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia25)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia25)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularSevera(segFlu.getDolorArticularSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorArticularLeve(null);
                                    seguimientoInfluenza.setDolorArticularModerada(null);
                                    seguimientoInfluenza.setDolorArticularSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorArticularDia25).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia25)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia25)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia25)).setChecked(false);
                                }
                                break;
                            case 26:
                                if (seguimientoInfluenza.getDolorArticular().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorArticularDia26).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorArticularDia26).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorArticularLeveDia26).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorArticularModeradaDia26).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorArticularSeveraDia26).setEnabled(false);
                                        if (segFlu.getDolorArticularLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia26)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia26)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularLeve(segFlu.getDolorArticularLeve());
                                        }
                                        if (segFlu.getDolorArticularModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia26)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia26)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularModerada(segFlu.getDolorArticularModerada());
                                        }
                                        if (segFlu.getDolorArticularSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia26)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia26)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularSevera(segFlu.getDolorArticularSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorArticularLeve(null);
                                    seguimientoInfluenza.setDolorArticularModerada(null);
                                    seguimientoInfluenza.setDolorArticularSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorArticularDia26).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia26)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia26)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia26)).setChecked(false);
                                }
                                break;
                            case 27:
                                if (seguimientoInfluenza.getDolorArticular().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorArticularDia27).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorArticularDia27).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorArticularLeveDia27).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorArticularModeradaDia27).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorArticularSeveraDia27).setEnabled(false);
                                        if (segFlu.getDolorArticularLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia27)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia27)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularLeve(segFlu.getDolorArticularLeve());
                                        }
                                        if (segFlu.getDolorArticularModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia27)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia27)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularModerada(segFlu.getDolorArticularModerada());
                                        }
                                        if (segFlu.getDolorArticularSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia27)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia27)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularSevera(segFlu.getDolorArticularSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorArticularLeve(null);
                                    seguimientoInfluenza.setDolorArticularModerada(null);
                                    seguimientoInfluenza.setDolorArticularSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorArticularDia27).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia27)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia27)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia27)).setChecked(false);
                                }
                                break;
                            case 28:
                                if (seguimientoInfluenza.getDolorArticular().equals("S")) {

                                    SeguimientoInfluenzaDTO segFlu = obtenerSeguimientoPorDia(mPage);
                                    if (segFlu == null) {
                                        getActivity().findViewById(R.id.layoutDolorArticularDia28).setVisibility(View.VISIBLE);
                                    }
                                    if (segFlu != null) {
                                        getActivity().findViewById(R.id.layoutDolorArticularDia28).setVisibility(View.VISIBLE);
                                        getActivity().findViewById(R.id.chkDolorArticularLeveDia28).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorArticularModeradaDia28).setEnabled(false);
                                        getActivity().findViewById(R.id.chkDolorArticularSeveraDia28).setEnabled(false);
                                        if (segFlu.getDolorArticularLeve() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia28)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia28)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularLeve(segFlu.getDolorArticularLeve());
                                        }
                                        if (segFlu.getDolorArticularModerada() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia28)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia28)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularModerada(segFlu.getDolorArticularModerada());
                                        }
                                        if (segFlu.getDolorArticularSevera() != null) {
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia28)).setChecked(true);
                                            ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia28)).jumpDrawablesToCurrentState();
                                            seguimientoInfluenza.setDolorArticularSevera(segFlu.getDolorArticularSevera());
                                        }
                                    }
                                } else {
                                    seguimientoInfluenza.setDolorArticularLeve(null);
                                    seguimientoInfluenza.setDolorArticularModerada(null);
                                    seguimientoInfluenza.setDolorArticularSevera(null);
                                    getActivity().findViewById(R.id.layoutDolorArticularDia28).setVisibility(View.GONE);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularLeveDia28)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularModeradaDia28)).setChecked(false);
                                    ((CheckBox) getActivity().findViewById(R.id.chkDolorArticularSeveraDia28)).setChecked(false);
                                }
                                break;
                        }
                    }
                } else if (mSeguimientoInfluenzaActivity.adapter != null && mSeguimientoInfluenzaActivity.adapter.getItem(position).toString().compareTo("Seleccione") != 0) {
                    seguimientoInfluenza = new SeguimientoInfluenzaDTO();
                    seguimientoInfluenza.setControlDia(mPage);
                    seguimientoInfluenza.setDolorArticular(mSeguimientoInfluenzaActivity.adapter.getItem(position).toString());
                    mSeguimientoInfluenzaActivity.nuevaListaSegInfluenza.add(seguimientoInfluenza);
                }
            }

            public void cargarDolorOido(int position) {
                SeguimientoInfluenzaDTO seguimientoInfluenza = obtenerNuevoSeguimientoPorDia(mPage);
                if (mSeguimientoInfluenzaActivity.adapter != null && seguimientoInfluenza != null) {
                    seguimientoInfluenza.setDolorOido((mSeguimientoInfluenzaActivity.adapter.getItem(position).toString().compareTo("Seleccione") != 0) ?
                            mSeguimientoInfluenzaActivity.adapter.getItem(position).toString() : null);
                } else if (mSeguimientoInfluenzaActivity.adapter != null && mSeguimientoInfluenzaActivity.adapter.getItem(position).toString().compareTo("Seleccione") != 0) {
                    seguimientoInfluenza = new SeguimientoInfluenzaDTO();
                    seguimientoInfluenza.setControlDia(mPage);
                    seguimientoInfluenza.setDolorOido(mSeguimientoInfluenzaActivity.adapter.getItem(position).toString());
                    mSeguimientoInfluenzaActivity.nuevaListaSegInfluenza.add(seguimientoInfluenza);
                }
            }

            public void cargarRespiracionRapida(int position) {
                SeguimientoInfluenzaDTO seguimientoInfluenza = obtenerNuevoSeguimientoPorDia(mPage);
                if (mSeguimientoInfluenzaActivity.adapter != null && seguimientoInfluenza != null) {
                    seguimientoInfluenza.setRespiracionRapida((mSeguimientoInfluenzaActivity.adapter.getItem(position).toString().compareTo("Seleccione") != 0) ?
                            mSeguimientoInfluenzaActivity.adapter.getItem(position).toString() : null);
                } else if (mSeguimientoInfluenzaActivity.adapter != null && mSeguimientoInfluenzaActivity.adapter.getItem(position).toString().compareTo("Seleccione") != 0) {
                    seguimientoInfluenza = new SeguimientoInfluenzaDTO();
                    seguimientoInfluenza.setControlDia(mPage);
                    seguimientoInfluenza.setRespiracionRapida(mSeguimientoInfluenzaActivity.adapter.getItem(position).toString());
                    mSeguimientoInfluenzaActivity.nuevaListaSegInfluenza.add(seguimientoInfluenza);
                }
            }

            public void cargarDificultadRespirar(int position) {
                SeguimientoInfluenzaDTO seguimientoInfluenza = obtenerNuevoSeguimientoPorDia(mPage);
                if (mSeguimientoInfluenzaActivity.adapter != null && seguimientoInfluenza != null) {
                    seguimientoInfluenza.setDificultadRespirar((mSeguimientoInfluenzaActivity.adapter.getItem(position).toString().compareTo("Seleccione") != 0) ?
                            mSeguimientoInfluenzaActivity.adapter.getItem(position).toString() : null);
                } else if (mSeguimientoInfluenzaActivity.adapter != null && mSeguimientoInfluenzaActivity.adapter.getItem(position).toString().compareTo("Seleccione") != 0) {
                    seguimientoInfluenza = new SeguimientoInfluenzaDTO();
                    seguimientoInfluenza.setControlDia(mPage);
                    seguimientoInfluenza.setDificultadRespirar(mSeguimientoInfluenzaActivity.adapter.getItem(position).toString());
                    mSeguimientoInfluenzaActivity.nuevaListaSegInfluenza.add(seguimientoInfluenza);
                }
            }

            public void cargarFaltaEscuela(int position) {
                SeguimientoInfluenzaDTO seguimientoInfluenza = obtenerNuevoSeguimientoPorDia(mPage);
                if (mSeguimientoInfluenzaActivity.adapter != null && seguimientoInfluenza != null) {
                    seguimientoInfluenza.setFaltaEscuela((mSeguimientoInfluenzaActivity.adapter.getItem(position).toString().compareTo("Seleccione") != 0) ?
                            mSeguimientoInfluenzaActivity.adapter.getItem(position).toString() : null);
                } else if (mSeguimientoInfluenzaActivity.adapter != null && mSeguimientoInfluenzaActivity.adapter.getItem(position).toString().compareTo("Seleccione") != 0) {
                    seguimientoInfluenza = new SeguimientoInfluenzaDTO();
                    seguimientoInfluenza.setControlDia(mPage);
                    seguimientoInfluenza.setFaltaEscuela(mSeguimientoInfluenzaActivity.adapter.getItem(position).toString());
                    mSeguimientoInfluenzaActivity.nuevaListaSegInfluenza.add(seguimientoInfluenza);
                }
            }

            public void cargarQuedoEnCama(int position) {
                SeguimientoInfluenzaDTO seguimientoInfluenza = obtenerNuevoSeguimientoPorDia(mPage);
                if (mSeguimientoInfluenzaActivity.adapter != null && seguimientoInfluenza != null) {
                    seguimientoInfluenza.setQuedoEnCama((mSeguimientoInfluenzaActivity.adapter.getItem(position).toString().compareTo("Seleccione") != 0) ?
                            mSeguimientoInfluenzaActivity.adapter.getItem(position).toString() : null);
                } else if (mSeguimientoInfluenzaActivity.adapter != null && mSeguimientoInfluenzaActivity.adapter.getItem(position).toString().compareTo("Seleccione") != 0) {
                    seguimientoInfluenza = new SeguimientoInfluenzaDTO();
                    seguimientoInfluenza.setControlDia(mPage);
                    seguimientoInfluenza.setQuedoEnCama(mSeguimientoInfluenzaActivity.adapter.getItem(position).toString());
                    mSeguimientoInfluenzaActivity.nuevaListaSegInfluenza.add(seguimientoInfluenza);
                }
            }
            /******************************/
            public void cargarCuadroNeurologico(int position) {
                SeguimientoInfluenzaDTO seguimientoInfluenza = obtenerNuevoSeguimientoPorDia(mPage);
                if (mSeguimientoInfluenzaActivity.adapter != null && seguimientoInfluenza != null) {
                    seguimientoInfluenza.setCuadroNeurologico((mSeguimientoInfluenzaActivity.adapter.getItem(position).toString().compareTo("Seleccione") != 0) ?
                            mSeguimientoInfluenzaActivity.adapter.getItem(position).toString() : null);
                } else if (mSeguimientoInfluenzaActivity.adapter != null && mSeguimientoInfluenzaActivity.adapter.getItem(position).toString().compareTo("Seleccione") != 0) {
                    seguimientoInfluenza = new SeguimientoInfluenzaDTO();
                    seguimientoInfluenza.setControlDia(mPage);
                    seguimientoInfluenza.setCuadroNeurologico(mSeguimientoInfluenzaActivity.adapter.getItem(position).toString());
                    mSeguimientoInfluenzaActivity.nuevaListaSegInfluenza.add(seguimientoInfluenza);
                }
            }
            public void cargarConfusionMental(int position) {
                SeguimientoInfluenzaDTO seguimientoInfluenza = obtenerNuevoSeguimientoPorDia(mPage);
                if (mSeguimientoInfluenzaActivity.adapter != null && seguimientoInfluenza != null) {
                    seguimientoInfluenza.setConfusionMental((mSeguimientoInfluenzaActivity.adapter.getItem(position).toString().compareTo("Seleccione") != 0) ?
                            mSeguimientoInfluenzaActivity.adapter.getItem(position).toString() : null);
                } else if (mSeguimientoInfluenzaActivity.adapter != null && mSeguimientoInfluenzaActivity.adapter.getItem(position).toString().compareTo("Seleccione") != 0) {
                    seguimientoInfluenza = new SeguimientoInfluenzaDTO();
                    seguimientoInfluenza.setControlDia(mPage);
                    seguimientoInfluenza.setConfusionMental(mSeguimientoInfluenzaActivity.adapter.getItem(position).toString());
                    mSeguimientoInfluenzaActivity.nuevaListaSegInfluenza.add(seguimientoInfluenza);
                }
            }
            public void cargarCuadroConfusional(int position) {
                SeguimientoInfluenzaDTO seguimientoInfluenza = obtenerNuevoSeguimientoPorDia(mPage);
                if (mSeguimientoInfluenzaActivity.adapter != null && seguimientoInfluenza != null) {
                    seguimientoInfluenza.setCuadroConfusional((mSeguimientoInfluenzaActivity.adapter.getItem(position).toString().compareTo("Seleccione") != 0) ?
                            mSeguimientoInfluenzaActivity.adapter.getItem(position).toString() : null);
                } else if (mSeguimientoInfluenzaActivity.adapter != null && mSeguimientoInfluenzaActivity.adapter.getItem(position).toString().compareTo("Seleccione") != 0) {
                    seguimientoInfluenza = new SeguimientoInfluenzaDTO();
                    seguimientoInfluenza.setControlDia(mPage);
                    seguimientoInfluenza.setCuadroConfusional(mSeguimientoInfluenzaActivity.adapter.getItem(position).toString());
                    mSeguimientoInfluenzaActivity.nuevaListaSegInfluenza.add(seguimientoInfluenza);
                }
            }
            public void cargarAnosmia(int position) {
                SeguimientoInfluenzaDTO seguimientoInfluenza = obtenerNuevoSeguimientoPorDia(mPage);
                if (mSeguimientoInfluenzaActivity.adapter != null && seguimientoInfluenza != null) {
                    seguimientoInfluenza.setAnosmia((mSeguimientoInfluenzaActivity.adapter.getItem(position).toString().compareTo("Seleccione") != 0) ?
                            mSeguimientoInfluenzaActivity.adapter.getItem(position).toString() : null);
                } else if (mSeguimientoInfluenzaActivity.adapter != null && mSeguimientoInfluenzaActivity.adapter.getItem(position).toString().compareTo("Seleccione") != 0) {
                    seguimientoInfluenza = new SeguimientoInfluenzaDTO();
                    seguimientoInfluenza.setControlDia(mPage);
                    seguimientoInfluenza.setAnosmia(mSeguimientoInfluenzaActivity.adapter.getItem(position).toString());
                    mSeguimientoInfluenzaActivity.nuevaListaSegInfluenza.add(seguimientoInfluenza);
                }
            }
            public void cargarAgeusia(int position) {
                SeguimientoInfluenzaDTO seguimientoInfluenza = obtenerNuevoSeguimientoPorDia(mPage);
                if (mSeguimientoInfluenzaActivity.adapter != null && seguimientoInfluenza != null) {
                    seguimientoInfluenza.setAgeusia((mSeguimientoInfluenzaActivity.adapter.getItem(position).toString().compareTo("Seleccione") != 0) ?
                            mSeguimientoInfluenzaActivity.adapter.getItem(position).toString() : null);
                } else if (mSeguimientoInfluenzaActivity.adapter != null && mSeguimientoInfluenzaActivity.adapter.getItem(position).toString().compareTo("Seleccione") != 0) {
                    seguimientoInfluenza = new SeguimientoInfluenzaDTO();
                    seguimientoInfluenza.setControlDia(mPage);
                    seguimientoInfluenza.setAgeusia(mSeguimientoInfluenzaActivity.adapter.getItem(position).toString());
                    mSeguimientoInfluenzaActivity.nuevaListaSegInfluenza.add(seguimientoInfluenza);
                }
            }
            public void cargarMareo(int position) {
                SeguimientoInfluenzaDTO seguimientoInfluenza = obtenerNuevoSeguimientoPorDia(mPage);
                if (mSeguimientoInfluenzaActivity.adapter != null && seguimientoInfluenza != null) {
                    seguimientoInfluenza.setMareo((mSeguimientoInfluenzaActivity.adapter.getItem(position).toString().compareTo("Seleccione") != 0) ?
                            mSeguimientoInfluenzaActivity.adapter.getItem(position).toString() : null);
                } else if (mSeguimientoInfluenzaActivity.adapter != null && mSeguimientoInfluenzaActivity.adapter.getItem(position).toString().compareTo("Seleccione") != 0) {
                    seguimientoInfluenza = new SeguimientoInfluenzaDTO();
                    seguimientoInfluenza.setControlDia(mPage);
                    seguimientoInfluenza.setMareo(mSeguimientoInfluenzaActivity.adapter.getItem(position).toString());
                    mSeguimientoInfluenzaActivity.nuevaListaSegInfluenza.add(seguimientoInfluenza);
                }
            }
            public void cargarIctus(int position) {
                SeguimientoInfluenzaDTO seguimientoInfluenza = obtenerNuevoSeguimientoPorDia(mPage);
                if (mSeguimientoInfluenzaActivity.adapter != null && seguimientoInfluenza != null) {
                    seguimientoInfluenza.setIctus((mSeguimientoInfluenzaActivity.adapter.getItem(position).toString().compareTo("Seleccione") != 0) ?
                            mSeguimientoInfluenzaActivity.adapter.getItem(position).toString() : null);
                } else if (mSeguimientoInfluenzaActivity.adapter != null && mSeguimientoInfluenzaActivity.adapter.getItem(position).toString().compareTo("Seleccione") != 0) {
                    seguimientoInfluenza = new SeguimientoInfluenzaDTO();
                    seguimientoInfluenza.setControlDia(mPage);
                    seguimientoInfluenza.setIctus(mSeguimientoInfluenzaActivity.adapter.getItem(position).toString());
                    mSeguimientoInfluenzaActivity.nuevaListaSegInfluenza.add(seguimientoInfluenza);
                }
            }
            public void cargarSincope(int position) {
                SeguimientoInfluenzaDTO seguimientoInfluenza = obtenerNuevoSeguimientoPorDia(mPage);
                if (mSeguimientoInfluenzaActivity.adapter != null && seguimientoInfluenza != null) {
                    seguimientoInfluenza.setSincope((mSeguimientoInfluenzaActivity.adapter.getItem(position).toString().compareTo("Seleccione") != 0) ?
                            mSeguimientoInfluenzaActivity.adapter.getItem(position).toString() : null);
                } else if (mSeguimientoInfluenzaActivity.adapter != null && mSeguimientoInfluenzaActivity.adapter.getItem(position).toString().compareTo("Seleccione") != 0) {
                    seguimientoInfluenza = new SeguimientoInfluenzaDTO();
                    seguimientoInfluenza.setControlDia(mPage);
                    seguimientoInfluenza.setSincope(mSeguimientoInfluenzaActivity.adapter.getItem(position).toString());
                    mSeguimientoInfluenzaActivity.nuevaListaSegInfluenza.add(seguimientoInfluenza);
                }
            }

            /***
             * Metodo para llamar el servicio de cargar la lista de medicos.
             */
            public void llamadoListaMedicoServicio() {

                if (mSeguimientoInfluenzaActivity.mObtenerMedicosTask == null ||
                        mSeguimientoInfluenzaActivity.mObtenerMedicosTask.getStatus() == AsyncTask.Status.FINISHED) {
                    mSeguimientoInfluenzaActivity.mObtenerMedicosTask = new AsyncTask<Void, Void, Void>() {
                        private ProgressDialog PD;
                        private ConnectivityManager CM = (ConnectivityManager) CONTEXT.getSystemService(Context.CONNECTIVITY_SERVICE);

                        private NetworkInfo NET_INFO = CM.getActiveNetworkInfo();

                        private ConsultaWS CONSULTAWS = new ConsultaWS(CONTEXT.getResources());

                        @Override
                        protected void onPreExecute() {
                            PD = new ProgressDialog(CONTEXT);
                            PD.setTitle(CONTEXT.getResources().getString(R.string.title_obteniendo));
                            PD.setMessage(CONTEXT.getResources().getString(R.string.msj_espere_por_favor));
                            PD.setCancelable(false);
                            PD.setIndeterminate(true);
                            PD.show();
                        }

                        @Override
                        protected Void doInBackground(Void... params) {
                            if (NET_INFO != null && NET_INFO.isConnected()) {
                                try {
                                    if (!esCargaInicial) {
                                        RESPUESTAMEDICO = CONSULTAWS.getListaMedicos(textoBusquedaMedico, true);
                                    } else {
                                        RESPUESTAMEDICO = CONSULTAWS.getListaMedicos(true);
                                    }
                                } catch (Exception e) {
                                    MensajesHelper.mostrarMensajeError(CONTEXT,
                                            e.getMessage(), CONTEXT.getResources().getString(
                                                    R.string.app_name), null);

                                }

                            } else {
                                RESPUESTAMEDICO.setCodigoError(Long.parseLong("3"));
                                RESPUESTAMEDICO.setMensajeError(CONTEXT.getResources().getString(R.string.msj_no_tiene_conexion));
                            }

                            return null;
                        }

                        @Override
                        protected void onPostExecute(Void result) {
                            PD.dismiss();
                            if (RESPUESTAMEDICO.getCodigoError().intValue() == 0) {
                                MedicosDTO diagTO = new MedicosDTO();
                                ArrayList<MedicosDTO> diagMedico = new ArrayList<>();
                                diagTO.setPresentaCodigoPersonal(true);
                                diagTO.setIdMedico((short) 0);
                                diagTO.setNombreMedico("Seleccione Medico");
                                diagTO.setCodigoPersonal("Seleccione Medico");
                                diagMedico.add(diagTO);
                                diagMedico.addAll(RESPUESTAMEDICO.getLstResultado());

                                switch (mPage) {
                                    case 1:
                                        adapterMedico1 = new ArrayAdapter<>(CONTEXT, R.layout.simple_spinner_dropdown_item, diagMedico);
                                        adapterMedico1.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
                                        break;
                                    case 2:
                                        adapterMedico2 = new ArrayAdapter<>(CONTEXT, R.layout.simple_spinner_dropdown_item, diagMedico);
                                        adapterMedico2.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
                                        break;
                                    case 3:
                                        adapterMedico3 = new ArrayAdapter<>(CONTEXT, R.layout.simple_spinner_dropdown_item, diagMedico);
                                        adapterMedico3.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
                                        break;
                                    case 4:
                                        adapterMedico4 = new ArrayAdapter<>(CONTEXT, R.layout.simple_spinner_dropdown_item, diagMedico);
                                        adapterMedico4.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
                                        break;
                                    case 5:
                                        adapterMedico5 = new ArrayAdapter<>(CONTEXT, R.layout.simple_spinner_dropdown_item, diagMedico);
                                        adapterMedico5.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
                                        break;
                                    case 6:
                                        adapterMedico6 = new ArrayAdapter<>(CONTEXT, R.layout.simple_spinner_dropdown_item, diagMedico);
                                        adapterMedico6.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
                                        break;
                                    case 7:
                                        adapterMedico7 = new ArrayAdapter<>(CONTEXT, R.layout.simple_spinner_dropdown_item, diagMedico);
                                        adapterMedico7.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
                                        break;
                                    case 8:
                                        adapterMedico8 = new ArrayAdapter<>(CONTEXT, R.layout.simple_spinner_dropdown_item, diagMedico);
                                        adapterMedico8.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
                                        break;

                                    case 9:
                                        adapterMedico9 = new ArrayAdapter<>(CONTEXT, R.layout.simple_spinner_dropdown_item, diagMedico);
                                        adapterMedico9.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
                                        break;

                                    case 10:
                                        adapterMedico10 = new ArrayAdapter<>(CONTEXT, R.layout.simple_spinner_dropdown_item, diagMedico);
                                        adapterMedico10.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
                                        break;
                                    case 11:
                                        adapterMedico11 = new ArrayAdapter<>(CONTEXT, R.layout.simple_spinner_dropdown_item, diagMedico);
                                        adapterMedico11.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
                                        break;
                                    case 12:
                                        adapterMedico12 = new ArrayAdapter<>(CONTEXT, R.layout.simple_spinner_dropdown_item, diagMedico);
                                        adapterMedico12.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
                                        break;
                                    case 13:
                                        adapterMedico13 = new ArrayAdapter<>(CONTEXT, R.layout.simple_spinner_dropdown_item, diagMedico);
                                        adapterMedico13.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
                                        break;
                                    case 14:
                                        adapterMedico14 = new ArrayAdapter<>(CONTEXT, R.layout.simple_spinner_dropdown_item, diagMedico);
                                        adapterMedico14.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
                                        break;
                                    case 15:
                                        adapterMedico15 = new ArrayAdapter<>(CONTEXT, R.layout.simple_spinner_dropdown_item, diagMedico);
                                        adapterMedico15.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
                                        break;
                                    case 16:
                                        adapterMedico16 = new ArrayAdapter<>(CONTEXT, R.layout.simple_spinner_dropdown_item, diagMedico);
                                        adapterMedico16.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
                                        break;
                                    case 17:
                                        adapterMedico17 = new ArrayAdapter<>(CONTEXT, R.layout.simple_spinner_dropdown_item, diagMedico);
                                        adapterMedico17.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
                                        break;
                                    case 18:
                                        adapterMedico18 = new ArrayAdapter<>(CONTEXT, R.layout.simple_spinner_dropdown_item, diagMedico);
                                        adapterMedico18.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
                                        break;
                                    case 19:
                                        adapterMedico19 = new ArrayAdapter<>(CONTEXT, R.layout.simple_spinner_dropdown_item, diagMedico);
                                        adapterMedico19.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
                                        break;
                                    case 20:
                                        adapterMedico20 = new ArrayAdapter<>(CONTEXT, R.layout.simple_spinner_dropdown_item, diagMedico);
                                        adapterMedico20.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
                                        break;
                                    case 21:
                                        adapterMedico21 = new ArrayAdapter<>(CONTEXT, R.layout.simple_spinner_dropdown_item, diagMedico);
                                        adapterMedico21.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
                                        break;
                                    case 22:
                                        adapterMedico22 = new ArrayAdapter<>(CONTEXT, R.layout.simple_spinner_dropdown_item, diagMedico);
                                        adapterMedico22.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
                                        break;
                                    case 23:
                                        adapterMedico23 = new ArrayAdapter<>(CONTEXT, R.layout.simple_spinner_dropdown_item, diagMedico);
                                        adapterMedico23.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
                                        break;
                                    case 24:
                                        adapterMedico24 = new ArrayAdapter<>(CONTEXT, R.layout.simple_spinner_dropdown_item, diagMedico);
                                        adapterMedico24.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
                                        break;
                                    case 25:
                                        adapterMedico25 = new ArrayAdapter<>(CONTEXT, R.layout.simple_spinner_dropdown_item, diagMedico);
                                        adapterMedico25.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
                                        break;
                                    case 26:
                                        adapterMedico26 = new ArrayAdapter<>(CONTEXT, R.layout.simple_spinner_dropdown_item, diagMedico);
                                        adapterMedico26.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
                                        break;
                                    case 27:
                                        adapterMedico27 = new ArrayAdapter<>(CONTEXT, R.layout.simple_spinner_dropdown_item, diagMedico);
                                        adapterMedico27.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
                                        break;
                                    case 28:
                                        adapterMedico28 = new ArrayAdapter<>(CONTEXT, R.layout.simple_spinner_dropdown_item, diagMedico);
                                        adapterMedico28.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
                                        break;
                                }

                                //carga todos los spinner o según el dia de seguimiento
                                cargaSpinerMedicos();

                            } else if (RESPUESTAMEDICO.getCodigoError().intValue() != 999) {
                                MensajesHelper.mostrarMensajeInfo(CONTEXT,
                                        RESPUESTAMEDICO.getMensajeError(), CONTEXT.getResources().getString(
                                                R.string.app_name), null);

                            } else {
                                MensajesHelper.mostrarMensajeError(CONTEXT,
                                        RESPUESTAMEDICO.getMensajeError(), CONTEXT.getResources().getString(
                                                R.string.app_name), null);
                            }
                        }
                    };
                    mSeguimientoInfluenzaActivity.mObtenerMedicosTask.execute((Void[]) null);
                }
            }

            //carga todos los spinner o según el dia de seguimiento
            public void cargaSpinerMedicos() {
                if (esCargaInicial) {
                    switch (mPage) {
                        case 1:
                            Spinner spnMedico1 = (Spinner) getActivity().findViewById(R.id.spnMedico1);
                            spnMedico1.setEnabled(false);
                            spnMedico1.setAdapter(adapterMedico1);
                            /*for (int i = 0; i < adapterMedico1.getCount(); i++) {
                                if (adapterMedico1.getItem(i).getIdMedico().intValue() == ((CssfvApp)getActivity().getApplication()).getInfoSessionWSDTO().getUserId()) {
                                    posicionMedico = i;
                                    //medicoEncontrado = adapterMedico1.getItem(i);
                                }
                            }*/
                            spnMedico1.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                                @Override
                                public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                                    cargarMedico(position, adapterMedico1);
                                }

                                @Override
                                public void onNothingSelected(AdapterView<?> parent) {

                                }
                            });
                            break;
                        case 2:
                            Spinner spnMedico2 = (Spinner) getActivity().findViewById(R.id.spnMedico2);
                            spnMedico2.setEnabled(false);
                            spnMedico2.setAdapter(adapterMedico2);
                            /*for (int i = 0; i < adapterMedico2.getCount(); i++) {
                                if (adapterMedico2.getItem(i).getIdMedico().intValue() == ((CssfvApp)getActivity().getApplication()).getInfoSessionWSDTO().getUserId()) {
                                    posicionMedico = i;
                                    //medicoEncontrado = adapterMedico1.getItem(i);
                                }
                            }*/
                            spnMedico2.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                                @Override
                                public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                                    cargarMedico(position, adapterMedico2);
                                }

                                @Override
                                public void onNothingSelected(AdapterView<?> parent) {

                                }
                            });
                            break;
                        case 3:
                            Spinner spnMedico3 = (Spinner) getActivity().findViewById(R.id.spnMedico3);
                            spnMedico3.setEnabled(false);
                            spnMedico3.setAdapter(adapterMedico3);
                            /*for (int i = 0; i < adapterMedico3.getCount(); i++) {
                                if (adapterMedico3.getItem(i).getIdMedico().intValue() == ((CssfvApp)getActivity().getApplication()).getInfoSessionWSDTO().getUserId()) {
                                    posicionMedico = i;
                                    //medicoEncontrado = adapterMedico1.getItem(i);
                                }
                            }*/
                            spnMedico3.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                                @Override
                                public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                                    cargarMedico(position, adapterMedico3);
                                }

                                @Override
                                public void onNothingSelected(AdapterView<?> parent) {

                                }
                            });
                            break;
                        case 4:
                            Spinner spnMedico4 = (Spinner) getActivity().findViewById(R.id.spnMedico4);
                            spnMedico4.setEnabled(false);
                            spnMedico4.setAdapter(adapterMedico4);
                            /*for (int i = 0; i < adapterMedico4.getCount(); i++) {
                                if (adapterMedico4.getItem(i).getIdMedico().intValue() == ((CssfvApp)getActivity().getApplication()).getInfoSessionWSDTO().getUserId()) {
                                    posicionMedico = i;
                                    //medicoEncontrado = adapterMedico1.getItem(i);
                                }
                            }*/
                            spnMedico4.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                                @Override
                                public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                                    cargarMedico(position, adapterMedico4);
                                }

                                @Override
                                public void onNothingSelected(AdapterView<?> parent) {

                                }
                            });
                            break;
                        case 5:
                            Spinner spnMedico5 = (Spinner) getActivity().findViewById(R.id.spnMedico5);
                            spnMedico5.setEnabled(false);
                            spnMedico5.setAdapter(adapterMedico5);
                            /*for (int i = 0; i < adapterMedico5.getCount(); i++) {
                                if (adapterMedico5.getItem(i).getIdMedico().intValue() == ((CssfvApp)getActivity().getApplication()).getInfoSessionWSDTO().getUserId()) {
                                    posicionMedico = i;
                                    //medicoEncontrado = adapterMedico1.getItem(i);
                                }
                            }*/
                            spnMedico5.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                                @Override
                                public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                                    cargarMedico(position, adapterMedico5);
                                }

                                @Override
                                public void onNothingSelected(AdapterView<?> parent) {

                                }
                            });
                            break;
                        case 6:
                            Spinner spnMedico6 = (Spinner) getActivity().findViewById(R.id.spnMedico6);
                            spnMedico6.setEnabled(false);
                            spnMedico6.setAdapter(adapterMedico6);
                            /*for (int i = 0; i < adapterMedico6.getCount(); i++) {
                                if (adapterMedico6.getItem(i).getIdMedico().intValue() == ((CssfvApp)getActivity().getApplication()).getInfoSessionWSDTO().getUserId()) {
                                    posicionMedico = i;
                                    //medicoEncontrado = adapterMedico1.getItem(i);
                                }
                            }*/
                            spnMedico6.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                                @Override
                                public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                                    cargarMedico(position, adapterMedico6);
                                }

                                @Override
                                public void onNothingSelected(AdapterView<?> parent) {

                                }
                            });
                            break;
                        case 7:
                            Spinner spnMedico7 = (Spinner) getActivity().findViewById(R.id.spnMedico7);
                            spnMedico7.setEnabled(false);
                            spnMedico7.setAdapter(adapterMedico7);
                            /*for (int i = 0; i < adapterMedico7.getCount(); i++) {
                                if (adapterMedico7.getItem(i).getIdMedico().intValue() == ((CssfvApp)getActivity().getApplication()).getInfoSessionWSDTO().getUserId()) {
                                    posicionMedico = i;
                                    //medicoEncontrado = adapterMedico1.getItem(i);
                                }
                            }*/
                            spnMedico7.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                                @Override
                                public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                                    cargarMedico(position, adapterMedico7);
                                }

                                @Override
                                public void onNothingSelected(AdapterView<?> parent) {

                                }
                            });
                            break;
                        case 8:
                            Spinner spnMedico8 = (Spinner) getActivity().findViewById(R.id.spnMedico8);
                            spnMedico8.setEnabled(false);
                            spnMedico8.setAdapter(adapterMedico8);
                            /*for (int i = 0; i < adapterMedico8.getCount(); i++) {
                                if (adapterMedico8.getItem(i).getIdMedico().intValue() == ((CssfvApp)getActivity().getApplication()).getInfoSessionWSDTO().getUserId()) {
                                    posicionMedico = i;
                                    //medicoEncontrado = adapterMedico1.getItem(i);
                                }
                            }*/
                            spnMedico8.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                                @Override
                                public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                                    cargarMedico(position, adapterMedico8);
                                }

                                @Override
                                public void onNothingSelected(AdapterView<?> parent) {

                                }
                            });
                            break;
                        case 9:
                            Spinner spnMedico9 = (Spinner) getActivity().findViewById(R.id.spnMedico9);
                            spnMedico9.setEnabled(false);
                            spnMedico9.setAdapter(adapterMedico9);
                            /*for (int i = 0; i < adapterMedico9.getCount(); i++) {
                                if (adapterMedico9.getItem(i).getIdMedico().intValue() == ((CssfvApp)getActivity().getApplication()).getInfoSessionWSDTO().getUserId()) {
                                    posicionMedico = i;
                                    //medicoEncontrado = adapterMedico1.getItem(i);
                                }
                            }*/
                            spnMedico9.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                                @Override
                                public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                                    cargarMedico(position, adapterMedico9);
                                }

                                @Override
                                public void onNothingSelected(AdapterView<?> parent) {

                                }
                            });
                            break;

                        case 10:
                            Spinner spnMedico10 = (Spinner) getActivity().findViewById(R.id.spnMedico10);
                            spnMedico10.setEnabled(false);
                            spnMedico10.setAdapter(adapterMedico10);
                            /*for (int i = 0; i < adapterMedico10.getCount(); i++) {
                                if (adapterMedico10.getItem(i).getIdMedico().intValue() == ((CssfvApp)getActivity().getApplication()).getInfoSessionWSDTO().getUserId()) {
                                    posicionMedico = i;
                                    //medicoEncontrado = adapterMedico1.getItem(i);
                                }
                            }*/
                            spnMedico10.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                                @Override
                                public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                                    cargarMedico(position, adapterMedico10);
                                }

                                @Override
                                public void onNothingSelected(AdapterView<?> parent) {

                                }
                            });
                            break;
                        case 11:
                            Spinner spnMedico11 = (Spinner) getActivity().findViewById(R.id.spnMedico11);
                            spnMedico11.setEnabled(false);
                            spnMedico11.setAdapter(adapterMedico11);
                            /*for (int i = 0; i < adapterMedico11.getCount(); i++) {
                                if (adapterMedico11.getItem(i).getIdMedico().intValue() == ((CssfvApp)getActivity().getApplication()).getInfoSessionWSDTO().getUserId()) {
                                    posicionMedico = i;
                                    //medicoEncontrado = adapterMedico1.getItem(i);
                                }
                            }*/
                            spnMedico11.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                                @Override
                                public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                                    cargarMedico(position, adapterMedico11);
                                }

                                @Override
                                public void onNothingSelected(AdapterView<?> parent) {

                                }
                            });
                            break;
                        case 12:
                            Spinner spnMedico12 = (Spinner) getActivity().findViewById(R.id.spnMedico12);
                            spnMedico12.setEnabled(false);
                            spnMedico12.setAdapter(adapterMedico12);
                            /*for (int i = 0; i < adapterMedico12.getCount(); i++) {
                                if (adapterMedico12.getItem(i).getIdMedico().intValue() == ((CssfvApp)getActivity().getApplication()).getInfoSessionWSDTO().getUserId()) {
                                    posicionMedico = i;
                                    //medicoEncontrado = adapterMedico1.getItem(i);
                                }
                            }*/
                            spnMedico12.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                                @Override
                                public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                                    cargarMedico(position, adapterMedico12);
                                }

                                @Override
                                public void onNothingSelected(AdapterView<?> parent) {

                                }
                            });
                            break;
                        case 13:
                            Spinner spnMedico13 = (Spinner) getActivity().findViewById(R.id.spnMedico13);
                            spnMedico13.setEnabled(false);
                            spnMedico13.setAdapter(adapterMedico13);
                            /*for (int i = 0; i < adapterMedico13.getCount(); i++) {
                                if (adapterMedico13.getItem(i).getIdMedico().intValue() == ((CssfvApp)getActivity().getApplication()).getInfoSessionWSDTO().getUserId()) {
                                    posicionMedico = i;
                                    //medicoEncontrado = adapterMedico1.getItem(i);
                                }
                            }*/
                            spnMedico13.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                                @Override
                                public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                                    cargarMedico(position, adapterMedico13);
                                }

                                @Override
                                public void onNothingSelected(AdapterView<?> parent) {

                                }
                            });
                            break;
                        case 14:
                            Spinner spnMedico14 = (Spinner) getActivity().findViewById(R.id.spnMedico14);
                            spnMedico14.setEnabled(false);
                            spnMedico14.setAdapter(adapterMedico14);
                            /*for (int i = 0; i < adapterMedico14.getCount(); i++) {
                                if (adapterMedico14.getItem(i).getIdMedico().intValue() == ((CssfvApp)getActivity().getApplication()).getInfoSessionWSDTO().getUserId()) {
                                    posicionMedico = i;
                                    //medicoEncontrado = adapterMedico1.getItem(i);
                                }
                            }*/
                            spnMedico14.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                                @Override
                                public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                                    cargarMedico(position, adapterMedico14);
                                }

                                @Override
                                public void onNothingSelected(AdapterView<?> parent) {

                                }
                            });
                            break;
                        case 15:
                            Spinner spnMedico15 = (Spinner) getActivity().findViewById(R.id.spnMedico15);
                            spnMedico15.setEnabled(false);
                            spnMedico15.setAdapter(adapterMedico15);
                            /*for (int i = 0; i < adapterMedico15.getCount(); i++) {
                                if (adapterMedico15.getItem(i).getIdMedico().intValue() == ((CssfvApp)getActivity().getApplication()).getInfoSessionWSDTO().getUserId()) {
                                    posicionMedico = i;
                                    //medicoEncontrado = adapterMedico1.getItem(i);
                                }
                            }*/
                            spnMedico15.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                                @Override
                                public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                                    cargarMedico(position, adapterMedico15);
                                }

                                @Override
                                public void onNothingSelected(AdapterView<?> parent) {

                                }
                            });
                            break;
                        case 16:
                            Spinner spnMedico16 = (Spinner) getActivity().findViewById(R.id.spnMedico16);
                            spnMedico16.setEnabled(false);
                            spnMedico16.setAdapter(adapterMedico16);
                            /*for (int i = 0; i < adapterMedico16.getCount(); i++) {
                                if (adapterMedico16.getItem(i).getIdMedico().intValue() == ((CssfvApp)getActivity().getApplication()).getInfoSessionWSDTO().getUserId()) {
                                    posicionMedico = i;
                                    //medicoEncontrado = adapterMedico1.getItem(i);
                                }
                            }*/
                            spnMedico16.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                                @Override
                                public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                                    cargarMedico(position, adapterMedico16);
                                }

                                @Override
                                public void onNothingSelected(AdapterView<?> parent) {

                                }
                            });
                            break;
                        case 17:
                            Spinner spnMedico17 = (Spinner) getActivity().findViewById(R.id.spnMedico17);
                            spnMedico17.setEnabled(false);
                            spnMedico17.setAdapter(adapterMedico17);
                            /*for (int i = 0; i < adapterMedico17.getCount(); i++) {
                                if (adapterMedico17.getItem(i).getIdMedico().intValue() == ((CssfvApp)getActivity().getApplication()).getInfoSessionWSDTO().getUserId()) {
                                    posicionMedico = i;
                                    //medicoEncontrado = adapterMedico1.getItem(i);
                                }
                            }*/
                            spnMedico17.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                                @Override
                                public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                                    cargarMedico(position, adapterMedico17);
                                }

                                @Override
                                public void onNothingSelected(AdapterView<?> parent) {

                                }
                            });
                            break;
                        case 18:
                            Spinner spnMedico18 = (Spinner) getActivity().findViewById(R.id.spnMedico18);
                            spnMedico18.setEnabled(false);
                            spnMedico18.setAdapter(adapterMedico18);
                            /*for (int i = 0; i < adapterMedico18.getCount(); i++) {
                                if (adapterMedico18.getItem(i).getIdMedico().intValue() == ((CssfvApp)getActivity().getApplication()).getInfoSessionWSDTO().getUserId()) {
                                    posicionMedico = i;
                                    //medicoEncontrado = adapterMedico1.getItem(i);
                                }
                            }*/
                            spnMedico18.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                                @Override
                                public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                                    cargarMedico(position, adapterMedico18);
                                }

                                @Override
                                public void onNothingSelected(AdapterView<?> parent) {

                                }
                            });
                            break;
                        case 19:
                            Spinner spnMedico19 = (Spinner) getActivity().findViewById(R.id.spnMedico19);
                            spnMedico19.setEnabled(false);
                            spnMedico19.setAdapter(adapterMedico19);
                            /*for (int i = 0; i < adapterMedico19.getCount(); i++) {
                                if (adapterMedico19.getItem(i).getIdMedico().intValue() == ((CssfvApp)getActivity().getApplication()).getInfoSessionWSDTO().getUserId()) {
                                    posicionMedico = i;
                                    //medicoEncontrado = adapterMedico1.getItem(i);
                                }
                            }*/
                            spnMedico19.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                                @Override
                                public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                                    cargarMedico(position, adapterMedico19);
                                }

                                @Override
                                public void onNothingSelected(AdapterView<?> parent) {

                                }
                            });
                            break;
                        case 20:
                            Spinner spnMedico20 = (Spinner) getActivity().findViewById(R.id.spnMedico20);
                            spnMedico20.setEnabled(false);
                            spnMedico20.setAdapter(adapterMedico20);
                            /*for (int i = 0; i < adapterMedico20.getCount(); i++) {
                                if (adapterMedico20.getItem(i).getIdMedico().intValue() == ((CssfvApp)getActivity().getApplication()).getInfoSessionWSDTO().getUserId()) {
                                    posicionMedico = i;
                                    //medicoEncontrado = adapterMedico1.getItem(i);
                                }
                            }*/
                            spnMedico20.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                                @Override
                                public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                                    cargarMedico(position, adapterMedico20);
                                }

                                @Override
                                public void onNothingSelected(AdapterView<?> parent) {

                                }
                            });
                            break;
                        case 21:
                            Spinner spnMedico21 = (Spinner) getActivity().findViewById(R.id.spnMedico21);
                            spnMedico21.setEnabled(false);
                            spnMedico21.setAdapter(adapterMedico21);
                            /*for (int i = 0; i < adapterMedico21.getCount(); i++) {
                                if (adapterMedico21.getItem(i).getIdMedico().intValue() == ((CssfvApp)getActivity().getApplication()).getInfoSessionWSDTO().getUserId()) {
                                    posicionMedico = i;
                                    //medicoEncontrado = adapterMedico1.getItem(i);
                                }
                            }*/
                            spnMedico21.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                                @Override
                                public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                                    cargarMedico(position, adapterMedico21);
                                }

                                @Override
                                public void onNothingSelected(AdapterView<?> parent) {

                                }
                            });
                            break;
                        case 22:
                            Spinner spnMedico22 = (Spinner) getActivity().findViewById(R.id.spnMedico22);
                            spnMedico22.setEnabled(false);
                            spnMedico22.setAdapter(adapterMedico22);
                            /*for (int i = 0; i < adapterMedico22.getCount(); i++) {
                                if (adapterMedico22.getItem(i).getIdMedico().intValue() == ((CssfvApp)getActivity().getApplication()).getInfoSessionWSDTO().getUserId()) {
                                    posicionMedico = i;
                                    //medicoEncontrado = adapterMedico1.getItem(i);
                                }
                            }*/
                            spnMedico22.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                                @Override
                                public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                                    cargarMedico(position, adapterMedico22);
                                }

                                @Override
                                public void onNothingSelected(AdapterView<?> parent) {

                                }
                            });
                            break;
                        case 23:
                            Spinner spnMedico23 = (Spinner) getActivity().findViewById(R.id.spnMedico23);
                            spnMedico23.setEnabled(false);
                            spnMedico23.setAdapter(adapterMedico23);
                            /*for (int i = 0; i < adapterMedico23.getCount(); i++) {
                                if (adapterMedico23.getItem(i).getIdMedico().intValue() == ((CssfvApp)getActivity().getApplication()).getInfoSessionWSDTO().getUserId()) {
                                    posicionMedico = i;
                                    //medicoEncontrado = adapterMedico1.getItem(i);
                                }
                            }*/
                            spnMedico23.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                                @Override
                                public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                                    cargarMedico(position, adapterMedico23);
                                }

                                @Override
                                public void onNothingSelected(AdapterView<?> parent) {

                                }
                            });
                            break;
                        case 24:
                            Spinner spnMedico24 = (Spinner) getActivity().findViewById(R.id.spnMedico24);
                            spnMedico24.setEnabled(false);
                            spnMedico24.setAdapter(adapterMedico24);
                            /*for (int i = 0; i < adapterMedico24.getCount(); i++) {
                                if (adapterMedico24.getItem(i).getIdMedico().intValue() == ((CssfvApp)getActivity().getApplication()).getInfoSessionWSDTO().getUserId()) {
                                    posicionMedico = i;
                                    //medicoEncontrado = adapterMedico1.getItem(i);
                                }
                            }*/
                            spnMedico24.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                                @Override
                                public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                                    cargarMedico(position, adapterMedico24);
                                }

                                @Override
                                public void onNothingSelected(AdapterView<?> parent) {

                                }
                            });
                            break;
                        case 25:
                            Spinner spnMedico25 = (Spinner) getActivity().findViewById(R.id.spnMedico25);
                            spnMedico25.setEnabled(false);
                            spnMedico25.setAdapter(adapterMedico25);
                            /*for (int i = 0; i < adapterMedico25.getCount(); i++) {
                                if (adapterMedico25.getItem(i).getIdMedico().intValue() == ((CssfvApp)getActivity().getApplication()).getInfoSessionWSDTO().getUserId()) {
                                    posicionMedico = i;
                                    //medicoEncontrado = adapterMedico1.getItem(i);
                                }
                            }*/
                            spnMedico25.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                                @Override
                                public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                                    cargarMedico(position, adapterMedico25);
                                }

                                @Override
                                public void onNothingSelected(AdapterView<?> parent) {

                                }
                            });
                            break;
                        case 26:
                            Spinner spnMedico26 = (Spinner) getActivity().findViewById(R.id.spnMedico26);
                            spnMedico26.setEnabled(false);
                            spnMedico26.setAdapter(adapterMedico26);
                            /*for (int i = 0; i < adapterMedico26.getCount(); i++) {
                                if (adapterMedico26.getItem(i).getIdMedico().intValue() == ((CssfvApp)getActivity().getApplication()).getInfoSessionWSDTO().getUserId()) {
                                    posicionMedico = i;
                                    //medicoEncontrado = adapterMedico1.getItem(i);
                                }
                            }*/
                            spnMedico26.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                                @Override
                                public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                                    cargarMedico(position, adapterMedico26);
                                }

                                @Override
                                public void onNothingSelected(AdapterView<?> parent) {

                                }
                            });
                            break;
                        case 27:
                            Spinner spnMedico27 = (Spinner) getActivity().findViewById(R.id.spnMedico27);
                            spnMedico27.setEnabled(false);
                            spnMedico27.setAdapter(adapterMedico27);
                            /*for (int i = 0; i < adapterMedico27.getCount(); i++) {
                                if (adapterMedico27.getItem(i).getIdMedico().intValue() == ((CssfvApp)getActivity().getApplication()).getInfoSessionWSDTO().getUserId()) {
                                    posicionMedico = i;
                                    //medicoEncontrado = adapterMedico1.getItem(i);
                                }
                            }*/
                            spnMedico27.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                                @Override
                                public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                                    cargarMedico(position, adapterMedico27);
                                }

                                @Override
                                public void onNothingSelected(AdapterView<?> parent) {

                                }
                            });
                            break;
                        case 28:
                            Spinner spnMedico28 = (Spinner) getActivity().findViewById(R.id.spnMedico28);
                            spnMedico28.setEnabled(false);
                            spnMedico28.setAdapter(adapterMedico28);
                            /*for (int i = 0; i < adapterMedico28.getCount(); i++) {
                                if (adapterMedico28.getItem(i).getIdMedico().intValue() == ((CssfvApp)getActivity().getApplication()).getInfoSessionWSDTO().getUserId()) {
                                    posicionMedico = i;
                                    //medicoEncontrado = adapterMedico1.getItem(i);
                                }
                            }*/
                            spnMedico28.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                                @Override
                                public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                                    cargarMedico(position, adapterMedico28);
                                }

                                @Override
                                public void onNothingSelected(AdapterView<?> parent) {

                                }
                            });
                            break;
                    }
                    esCargaInicial = false;
                    //posicionMedico = 0;
                } else {
                    switch (mPage) {
                        case 1:
                            Spinner spnMedico1 = (Spinner) getActivity().findViewById(R.id.spnMedico1);
                            spnMedico1.setEnabled(false);
                            spnMedico1.setAdapter(adapterMedico1);
                            /*for (int i = 0; i < adapterMedico1.getCount(); i++) {
                                if (adapterMedico1.getItem(i).getIdMedico().intValue() == ((CssfvApp)getActivity().getApplication()).getInfoSessionWSDTO().getUserId()) {
                                    posicionMedico = i;
                                    //medicoEncontrado = adapterMedico1.getItem(i);
                                }
                            }*/
                            spnMedico1.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                                @Override
                                public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                                    cargarMedico(position, adapterMedico1);
                                }

                                @Override
                                public void onNothingSelected(AdapterView<?> parent) {

                                }
                            });
                            break;
                        case 2:
                            Spinner spnMedico2 = (Spinner) getActivity().findViewById(R.id.spnMedico2);
                            spnMedico2.setEnabled(false);
                            spnMedico2.setAdapter(adapterMedico2);
                            /*for (int i = 0; i < adapterMedico2.getCount(); i++) {
                                if (adapterMedico2.getItem(i).getIdMedico().intValue() == ((CssfvApp)getActivity().getApplication()).getInfoSessionWSDTO().getUserId()) {
                                    posicionMedico = i;
                                    //medicoEncontrado = adapterMedico1.getItem(i);
                                }
                            }*/
                            spnMedico2.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                                @Override
                                public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                                    cargarMedico(position, adapterMedico2);
                                }

                                @Override
                                public void onNothingSelected(AdapterView<?> parent) {

                                }
                            });
                            break;

                        case 3:
                            Spinner spnMedico3 = (Spinner) getActivity().findViewById(R.id.spnMedico3);
                            spnMedico3.setEnabled(false);
                            spnMedico3.setAdapter(adapterMedico3);
                            /*for (int i = 0; i < adapterMedico3.getCount(); i++) {
                                if (adapterMedico3.getItem(i).getIdMedico().intValue() == ((CssfvApp)getActivity().getApplication()).getInfoSessionWSDTO().getUserId()) {
                                    posicionMedico = i;
                                    //medicoEncontrado = adapterMedico1.getItem(i);
                                }
                            }*/
                            spnMedico3.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                                @Override
                                public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                                    cargarMedico(position, adapterMedico3);
                                }

                                @Override
                                public void onNothingSelected(AdapterView<?> parent) {

                                }
                            });
                            break;

                        case 4:
                            Spinner spnMedico4 = (Spinner) getActivity().findViewById(R.id.spnMedico4);
                            spnMedico4.setEnabled(false);
                            spnMedico4.setAdapter(adapterMedico4);
                            /*for (int i = 0; i < adapterMedico4.getCount(); i++) {
                                if (adapterMedico4.getItem(i).getIdMedico().intValue() == ((CssfvApp)getActivity().getApplication()).getInfoSessionWSDTO().getUserId()) {
                                    posicionMedico = i;
                                    //medicoEncontrado = adapterMedico1.getItem(i);
                                }
                            }*/
                            spnMedico4.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                                @Override
                                public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                                    cargarMedico(position, adapterMedico4);
                                }

                                @Override
                                public void onNothingSelected(AdapterView<?> parent) {

                                }
                            });
                            break;

                        case 5:
                            Spinner spnMedico5 = (Spinner) getActivity().findViewById(R.id.spnMedico5);
                            spnMedico5.setEnabled(false);
                            spnMedico5.setAdapter(adapterMedico5);
                            /*for (int i = 0; i < adapterMedico5.getCount(); i++) {
                                if (adapterMedico5.getItem(i).getIdMedico().intValue() == ((CssfvApp)getActivity().getApplication()).getInfoSessionWSDTO().getUserId()) {
                                    posicionMedico = i;
                                    //medicoEncontrado = adapterMedico1.getItem(i);
                                }
                            }*/
                            spnMedico5.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                                @Override
                                public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                                    cargarMedico(position, adapterMedico5);
                                }

                                @Override
                                public void onNothingSelected(AdapterView<?> parent) {

                                }
                            });
                            break;

                        case 6:
                            Spinner spnMedico6 = (Spinner) getActivity().findViewById(R.id.spnMedico6);
                            spnMedico6.setEnabled(false);
                            spnMedico6.setAdapter(adapterMedico6);
                           /* for (int i = 0; i < adapterMedico6.getCount(); i++) {
                                if (adapterMedico6.getItem(i).getIdMedico().intValue() == ((CssfvApp)getActivity().getApplication()).getInfoSessionWSDTO().getUserId()) {
                                    posicionMedico = i;
                                    //medicoEncontrado = adapterMedico1.getItem(i);
                                }
                            }*/
                            spnMedico6.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                                @Override
                                public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                                    cargarMedico(position, adapterMedico6);
                                }

                                @Override
                                public void onNothingSelected(AdapterView<?> parent) {

                                }
                            });
                            break;

                        case 7:
                            Spinner spnMedico7 = (Spinner) getActivity().findViewById(R.id.spnMedico7);
                            spnMedico7.setEnabled(false);
                            spnMedico7.setAdapter(adapterMedico7);
                            /*for (int i = 0; i < adapterMedico7.getCount(); i++) {
                                if (adapterMedico7.getItem(i).getIdMedico().intValue() == ((CssfvApp)getActivity().getApplication()).getInfoSessionWSDTO().getUserId()) {
                                    posicionMedico = i;
                                    //medicoEncontrado = adapterMedico1.getItem(i);
                                }
                            }*/
                            spnMedico7.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                                @Override
                                public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                                    cargarMedico(position, adapterMedico7);
                                }

                                @Override
                                public void onNothingSelected(AdapterView<?> parent) {

                                }
                            });
                            break;
                        case 8:
                            Spinner spnMedico8 = (Spinner) getActivity().findViewById(R.id.spnMedico8);
                            spnMedico8.setEnabled(false);
                            spnMedico8.setAdapter(adapterMedico8);
                            /*for (int i = 0; i < adapterMedico8.getCount(); i++) {
                                if (adapterMedico8.getItem(i).getIdMedico().intValue() == ((CssfvApp)getActivity().getApplication()).getInfoSessionWSDTO().getUserId()) {
                                    posicionMedico = i;
                                    //medicoEncontrado = adapterMedico1.getItem(i);
                                }
                            }*/
                            spnMedico8.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                                @Override
                                public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                                    cargarMedico(position, adapterMedico8);
                                }

                                @Override
                                public void onNothingSelected(AdapterView<?> parent) {

                                }
                            });
                            break;

                        case 9:
                            Spinner spnMedico9 = (Spinner) getActivity().findViewById(R.id.spnMedico9);
                            spnMedico9.setEnabled(false);
                            spnMedico9.setAdapter(adapterMedico9);
                            /*for (int i = 0; i < adapterMedico9.getCount(); i++) {
                                if (adapterMedico9.getItem(i).getIdMedico().intValue() == ((CssfvApp)getActivity().getApplication()).getInfoSessionWSDTO().getUserId()) {
                                    posicionMedico = i;
                                    //medicoEncontrado = adapterMedico1.getItem(i);
                                }
                            }*/
                            spnMedico9.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                                @Override
                                public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                                    cargarMedico(position, adapterMedico9);
                                }

                                @Override
                                public void onNothingSelected(AdapterView<?> parent) {

                                }
                            });
                            break;

                        case 10:
                            Spinner spnMedico10 = (Spinner) getActivity().findViewById(R.id.spnMedico10);
                            spnMedico10.setEnabled(false);
                            spnMedico10.setAdapter(adapterMedico10);
                            /*for (int i = 0; i < adapterMedico10.getCount(); i++) {
                                if (adapterMedico10.getItem(i).getIdMedico().intValue() == ((CssfvApp)getActivity().getApplication()).getInfoSessionWSDTO().getUserId()) {
                                    posicionMedico = i;
                                    //medicoEncontrado = adapterMedico1.getItem(i);
                                }
                            }*/
                            spnMedico10.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                                @Override
                                public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                                    cargarMedico(position, adapterMedico10);
                                }

                                @Override
                                public void onNothingSelected(AdapterView<?> parent) {

                                }
                            });
                            break;

                        case 11:
                            Spinner spnMedico11 = (Spinner) getActivity().findViewById(R.id.spnMedico11);
                            spnMedico11.setEnabled(false);
                            spnMedico11.setAdapter(adapterMedico11);
                            /*for (int i = 0; i < adapterMedico11.getCount(); i++) {
                                if (adapterMedico11.getItem(i).getIdMedico().intValue() == ((CssfvApp)getActivity().getApplication()).getInfoSessionWSDTO().getUserId()) {
                                    posicionMedico = i;
                                    //medicoEncontrado = adapterMedico1.getItem(i);
                                }
                            }*/
                            spnMedico11.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                                @Override
                                public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                                    cargarMedico(position, adapterMedico11);
                                }

                                @Override
                                public void onNothingSelected(AdapterView<?> parent) {

                                }
                            });
                            break;

                        case 12:
                            Spinner spnMedico12 = (Spinner) getActivity().findViewById(R.id.spnMedico12);
                            spnMedico12.setEnabled(false);
                            spnMedico12.setAdapter(adapterMedico12);
                            /*for (int i = 0; i < adapterMedico12.getCount(); i++) {
                                if (adapterMedico12.getItem(i).getIdMedico().intValue() == ((CssfvApp)getActivity().getApplication()).getInfoSessionWSDTO().getUserId()) {
                                    posicionMedico = i;
                                    //medicoEncontrado = adapterMedico1.getItem(i);
                                }
                            }*/
                            spnMedico12.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                                @Override
                                public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                                    cargarMedico(position, adapterMedico12);
                                }

                                @Override
                                public void onNothingSelected(AdapterView<?> parent) {

                                }
                            });
                            break;
                        case 13:
                            Spinner spnMedico13 = (Spinner) getActivity().findViewById(R.id.spnMedico13);
                            spnMedico13.setEnabled(false);
                            spnMedico13.setAdapter(adapterMedico13);
                            /*for (int i = 0; i < adapterMedico13.getCount(); i++) {
                                if (adapterMedico13.getItem(i).getIdMedico().intValue() == ((CssfvApp)getActivity().getApplication()).getInfoSessionWSDTO().getUserId()) {
                                    posicionMedico = i;
                                    //medicoEncontrado = adapterMedico1.getItem(i);
                                }
                            }*/
                            spnMedico13.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                                @Override
                                public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                                    cargarMedico(position, adapterMedico13);
                                }

                                @Override
                                public void onNothingSelected(AdapterView<?> parent) {

                                }
                            });
                            break;
                        case 14:
                            Spinner spnMedico14 = (Spinner) getActivity().findViewById(R.id.spnMedico14);
                            spnMedico14.setEnabled(false);
                            spnMedico14.setAdapter(adapterMedico14);
                            /*for (int i = 0; i < adapterMedico14.getCount(); i++) {
                                if (adapterMedico14.getItem(i).getIdMedico().intValue() == ((CssfvApp)getActivity().getApplication()).getInfoSessionWSDTO().getUserId()) {
                                    posicionMedico = i;
                                    //medicoEncontrado = adapterMedico1.getItem(i);
                                }
                            }*/
                            spnMedico14.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                                @Override
                                public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                                    cargarMedico(position, adapterMedico14);
                                }

                                @Override
                                public void onNothingSelected(AdapterView<?> parent) {

                                }
                            });
                            break;
                        case 15:
                            Spinner spnMedico15 = (Spinner) getActivity().findViewById(R.id.spnMedico15);
                            spnMedico15.setEnabled(false);
                            spnMedico15.setAdapter(adapterMedico15);
                            /*for (int i = 0; i < adapterMedico15.getCount(); i++) {
                                if (adapterMedico15.getItem(i).getIdMedico().intValue() == ((CssfvApp)getActivity().getApplication()).getInfoSessionWSDTO().getUserId()) {
                                    posicionMedico = i;
                                    //medicoEncontrado = adapterMedico1.getItem(i);
                                }
                            }*/
                            spnMedico15.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                                @Override
                                public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                                    cargarMedico(position, adapterMedico15);
                                }

                                @Override
                                public void onNothingSelected(AdapterView<?> parent) {

                                }
                            });
                            break;
                        case 16:
                            Spinner spnMedico16 = (Spinner) getActivity().findViewById(R.id.spnMedico16);
                            spnMedico16.setEnabled(false);
                            spnMedico16.setAdapter(adapterMedico16);
                            /*for (int i = 0; i < adapterMedico16.getCount(); i++) {
                                if (adapterMedico16.getItem(i).getIdMedico().intValue() == ((CssfvApp)getActivity().getApplication()).getInfoSessionWSDTO().getUserId()) {
                                    posicionMedico = i;
                                    //medicoEncontrado = adapterMedico1.getItem(i);
                                }
                            }*/
                            spnMedico16.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                                @Override
                                public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                                    cargarMedico(position, adapterMedico16);
                                }

                                @Override
                                public void onNothingSelected(AdapterView<?> parent) {

                                }
                            });
                            break;
                        case 17:
                            Spinner spnMedico17 = (Spinner) getActivity().findViewById(R.id.spnMedico17);
                            spnMedico17.setEnabled(false);
                            spnMedico17.setAdapter(adapterMedico17);
                            /*for (int i = 0; i < adapterMedico17.getCount(); i++) {
                                if (adapterMedico17.getItem(i).getIdMedico().intValue() == ((CssfvApp)getActivity().getApplication()).getInfoSessionWSDTO().getUserId()) {
                                    posicionMedico = i;
                                    //medicoEncontrado = adapterMedico1.getItem(i);
                                }
                            }*/
                            spnMedico17.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                                @Override
                                public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                                    cargarMedico(position, adapterMedico17);
                                }

                                @Override
                                public void onNothingSelected(AdapterView<?> parent) {

                                }
                            });
                            break;
                        case 18:
                            Spinner spnMedico18 = (Spinner) getActivity().findViewById(R.id.spnMedico18);
                            spnMedico18.setEnabled(false);
                            spnMedico18.setAdapter(adapterMedico18);
                            /*for (int i = 0; i < adapterMedico18.getCount(); i++) {
                                if (adapterMedico18.getItem(i).getIdMedico().intValue() == ((CssfvApp)getActivity().getApplication()).getInfoSessionWSDTO().getUserId()) {
                                    posicionMedico = i;
                                    //medicoEncontrado = adapterMedico1.getItem(i);
                                }
                            }*/
                            spnMedico18.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                                @Override
                                public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                                    cargarMedico(position, adapterMedico18);
                                }

                                @Override
                                public void onNothingSelected(AdapterView<?> parent) {

                                }
                            });
                            break;
                        case 19:
                            Spinner spnMedico19 = (Spinner) getActivity().findViewById(R.id.spnMedico19);
                            spnMedico19.setEnabled(false);
                            spnMedico19.setAdapter(adapterMedico19);
                            /*for (int i = 0; i < adapterMedico19.getCount(); i++) {
                                if (adapterMedico19.getItem(i).getIdMedico().intValue() == ((CssfvApp)getActivity().getApplication()).getInfoSessionWSDTO().getUserId()) {
                                    posicionMedico = i;
                                    //medicoEncontrado = adapterMedico1.getItem(i);
                                }
                            }*/
                            spnMedico19.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                                @Override
                                public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                                    cargarMedico(position, adapterMedico19);
                                }

                                @Override
                                public void onNothingSelected(AdapterView<?> parent) {

                                }
                            });
                            break;
                        case 20:
                            Spinner spnMedico20 = (Spinner) getActivity().findViewById(R.id.spnMedico20);
                            spnMedico20.setEnabled(false);
                            spnMedico20.setAdapter(adapterMedico20);
                            /*for (int i = 0; i < adapterMedico20.getCount(); i++) {
                                if (adapterMedico20.getItem(i).getIdMedico().intValue() == ((CssfvApp)getActivity().getApplication()).getInfoSessionWSDTO().getUserId()) {
                                    posicionMedico = i;
                                    //medicoEncontrado = adapterMedico1.getItem(i);
                                }
                            }*/
                            spnMedico20.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                                @Override
                                public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                                    cargarMedico(position, adapterMedico20);
                                }

                                @Override
                                public void onNothingSelected(AdapterView<?> parent) {

                                }
                            });
                            break;
                        case 21:
                            Spinner spnMedico21 = (Spinner) getActivity().findViewById(R.id.spnMedico21);
                            spnMedico21.setEnabled(false);
                            spnMedico21.setAdapter(adapterMedico21);
                            /*for (int i = 0; i < adapterMedico21.getCount(); i++) {
                                if (adapterMedico21.getItem(i).getIdMedico().intValue() == ((CssfvApp)getActivity().getApplication()).getInfoSessionWSDTO().getUserId()) {
                                    posicionMedico = i;
                                    //medicoEncontrado = adapterMedico1.getItem(i);
                                }
                            }*/
                            spnMedico21.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                                @Override
                                public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                                    cargarMedico(position, adapterMedico21);
                                }

                                @Override
                                public void onNothingSelected(AdapterView<?> parent) {

                                }
                            });
                            break;
                        case 22:
                            Spinner spnMedico22 = (Spinner) getActivity().findViewById(R.id.spnMedico22);
                            spnMedico22.setEnabled(false);
                            spnMedico22.setAdapter(adapterMedico22);
                            /*for (int i = 0; i < adapterMedico22.getCount(); i++) {
                                if (adapterMedico22.getItem(i).getIdMedico().intValue() == ((CssfvApp)getActivity().getApplication()).getInfoSessionWSDTO().getUserId()) {
                                    posicionMedico = i;
                                    //medicoEncontrado = adapterMedico1.getItem(i);
                                }
                            }*/
                            spnMedico22.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                                @Override
                                public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                                    cargarMedico(position, adapterMedico22);
                                }

                                @Override
                                public void onNothingSelected(AdapterView<?> parent) {

                                }
                            });
                            break;
                        case 23:
                            Spinner spnMedico23 = (Spinner) getActivity().findViewById(R.id.spnMedico23);
                            spnMedico23.setEnabled(false);
                            spnMedico23.setAdapter(adapterMedico23);
                            /*for (int i = 0; i < adapterMedico23.getCount(); i++) {
                                if (adapterMedico23.getItem(i).getIdMedico().intValue() == ((CssfvApp)getActivity().getApplication()).getInfoSessionWSDTO().getUserId()) {
                                    posicionMedico = i;
                                    //medicoEncontrado = adapterMedico1.getItem(i);
                                }
                            }*/
                            spnMedico23.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                                @Override
                                public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                                    cargarMedico(position, adapterMedico23);
                                }

                                @Override
                                public void onNothingSelected(AdapterView<?> parent) {

                                }
                            });
                            break;
                        case 24:
                            Spinner spnMedico24 = (Spinner) getActivity().findViewById(R.id.spnMedico24);
                            spnMedico24.setEnabled(false);
                            spnMedico24.setAdapter(adapterMedico24);
                            /*for (int i = 0; i < adapterMedico24.getCount(); i++) {
                                if (adapterMedico24.getItem(i).getIdMedico().intValue() == ((CssfvApp)getActivity().getApplication()).getInfoSessionWSDTO().getUserId()) {
                                    posicionMedico = i;
                                    //medicoEncontrado = adapterMedico1.getItem(i);
                                }
                            }*/
                            spnMedico24.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                                @Override
                                public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                                    cargarMedico(position, adapterMedico24);
                                }

                                @Override
                                public void onNothingSelected(AdapterView<?> parent) {

                                }
                            });
                            break;
                        case 25:
                            Spinner spnMedico25 = (Spinner) getActivity().findViewById(R.id.spnMedico25);
                            spnMedico25.setEnabled(false);
                            spnMedico25.setAdapter(adapterMedico25);
                            /*for (int i = 0; i < adapterMedico25.getCount(); i++) {
                                if (adapterMedico25.getItem(i).getIdMedico().intValue() == ((CssfvApp)getActivity().getApplication()).getInfoSessionWSDTO().getUserId()) {
                                    posicionMedico = i;
                                    //medicoEncontrado = adapterMedico1.getItem(i);
                                }
                            }*/
                            spnMedico25.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                                @Override
                                public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                                    cargarMedico(position, adapterMedico25);
                                }

                                @Override
                                public void onNothingSelected(AdapterView<?> parent) {

                                }
                            });
                            break;
                        case 26:
                            Spinner spnMedico26 = (Spinner) getActivity().findViewById(R.id.spnMedico26);
                            spnMedico26.setEnabled(false);
                            spnMedico26.setAdapter(adapterMedico26);
                            /*for (int i = 0; i < adapterMedico26.getCount(); i++) {
                                if (adapterMedico26.getItem(i).getIdMedico().intValue() == ((CssfvApp)getActivity().getApplication()).getInfoSessionWSDTO().getUserId()) {
                                    posicionMedico = i;
                                    //medicoEncontrado = adapterMedico1.getItem(i);
                                }
                            }*/
                            spnMedico26.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                                @Override
                                public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                                    cargarMedico(position, adapterMedico26);
                                }

                                @Override
                                public void onNothingSelected(AdapterView<?> parent) {

                                }
                            });
                            break;
                        case 27:
                            Spinner spnMedico27 = (Spinner) getActivity().findViewById(R.id.spnMedico27);
                            spnMedico27.setEnabled(false);
                            spnMedico27.setAdapter(adapterMedico27);
                            /*for (int i = 0; i < adapterMedico27.getCount(); i++) {
                                if (adapterMedico27.getItem(i).getIdMedico().intValue() == ((CssfvApp)getActivity().getApplication()).getInfoSessionWSDTO().getUserId()) {
                                    posicionMedico = i;
                                    //medicoEncontrado = adapterMedico1.getItem(i);
                                }
                            }*/
                            spnMedico27.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                                @Override
                                public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                                    cargarMedico(position, adapterMedico27);
                                }

                                @Override
                                public void onNothingSelected(AdapterView<?> parent) {

                                }
                            });
                            break;
                        case 28:
                            Spinner spnMedico28 = (Spinner) getActivity().findViewById(R.id.spnMedico28);
                            spnMedico28.setEnabled(false);
                            spnMedico28.setAdapter(adapterMedico28);
                            /*for (int i = 0; i < adapterMedico28.getCount(); i++) {
                                if (adapterMedico28.getItem(i).getIdMedico().intValue() == ((CssfvApp)getActivity().getApplication()).getInfoSessionWSDTO().getUserId()) {
                                    posicionMedico = i;
                                    //medicoEncontrado = adapterMedico1.getItem(i);
                                }
                            }*/
                            spnMedico28.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                                @Override
                                public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                                    cargarMedico(position, adapterMedico28);
                                }

                                @Override
                                public void onNothingSelected(AdapterView<?> parent) {

                                }
                            });
                            break;
                    }
                    //posicionMedico = 0;
                }
            }

            public void cargarMedico(int position, ArrayAdapter<MedicosDTO> medicoAdapter) {
                SeguimientoInfluenzaDTO seguimientoInfluenza = obtenerNuevoSeguimientoPorDia(mPage);
                if (seguimientoInfluenza != null) {
                    seguimientoInfluenza.setUsuarioMedico((medicoAdapter.getItem(position).getIdMedico().intValue() > 0) ?
                            medicoAdapter.getItem(position).getIdMedico() : 0);
                } else if (medicoAdapter.getItem(position).getIdMedico().intValue() > 0) {
                    seguimientoInfluenza = new SeguimientoInfluenzaDTO();
                    seguimientoInfluenza.setControlDia(mPage);
                    seguimientoInfluenza.setUsuarioMedico(medicoAdapter.getItem(position).getIdMedico());
                    mSeguimientoInfluenzaActivity.nuevaListaSegInfluenza.add(seguimientoInfluenza);
                }
            }

            public void cargarIU(SeguimientoInfluenzaDTO seguimientoInfluenza, boolean habilitar) {
                switch (mPage) {
                    case 1:
                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento1)).setText(seguimientoInfluenza.getFechaSeguimiento());
                        getActivity().findViewById(R.id.edtxtFechaSeguimiento1).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila1)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getConsultaInicial())) ?
                                seguimientoInfluenza.getConsultaInicial().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia1Fila1).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila2)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFiebre())) ?
                                seguimientoInfluenza.getFiebre().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia1Fila2).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila3)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getTos())) ?
                                seguimientoInfluenza.getTos().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia1Fila3).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila4)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getSecrecionNasal())) ?
                                seguimientoInfluenza.getSecrecionNasal().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia1Fila4).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila5)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorGarganta())) ?
                                seguimientoInfluenza.getDolorGarganta().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia1Fila5).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila6)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCongestionNasa())) ?
                                seguimientoInfluenza.getCongestionNasa().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia1Fila6).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila7)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorCabeza())) ?
                                seguimientoInfluenza.getDolorCabeza().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia1Fila7).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila8)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFaltaApetito())) ?
                                seguimientoInfluenza.getFaltaApetito().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia1Fila8).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila9)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorMuscular())) ?
                                seguimientoInfluenza.getDolorMuscular().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia1Fila9).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila10)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorArticular())) ?
                                seguimientoInfluenza.getDolorArticular().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia1Fila10).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila11)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorOido())) ?
                                seguimientoInfluenza.getDolorOido().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia1Fila11).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila12)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getRespiracionRapida())) ?
                                seguimientoInfluenza.getRespiracionRapida().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia1Fila12).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila13)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDificultadRespirar())) ?
                                seguimientoInfluenza.getDificultadRespirar().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia1Fila13).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila14)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFaltaEscuela())) ?
                                seguimientoInfluenza.getFaltaEscuela().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia1Fila14).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila15)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getQuedoEnCama())) ?
                                seguimientoInfluenza.getQuedoEnCama().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia1Fila15).setEnabled(habilitar);

                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila16)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCuadroConfusional())) ?
                                seguimientoInfluenza.getCuadroConfusional().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia1Fila16).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila17)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCuadroNeurologico())) ?
                                seguimientoInfluenza.getCuadroNeurologico().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia1Fila17).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila18)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getConfusionMental())) ?
                                seguimientoInfluenza.getConfusionMental().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia1Fila18).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila19)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getAnosmia())) ?
                                seguimientoInfluenza.getAnosmia().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia1Fila19).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila20)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getAgeusia())) ?
                                seguimientoInfluenza.getAgeusia().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia1Fila20).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila21)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getMareo())) ?
                                seguimientoInfluenza.getMareo().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia1Fila21).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila22)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getIctus())) ?
                                seguimientoInfluenza.getIctus().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia1Fila22).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila23)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getSincope())) ?
                                seguimientoInfluenza.getSincope().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia1Fila23).setEnabled(habilitar);



                        /*((Spinner) getActivity().findViewById(R.id.spnDia1Fila14)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition(( seguimientoInfluenza.getFaltaEscuela() != null) ?
                                seguimientoInfluenza.getFaltaEscuela().trim() : ""));
                        getActivity().findViewById(R.id.spnDia1Fila14).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila15)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((seguimientoInfluenza.getQuedoEnCama() != null) ?
                                seguimientoInfluenza.getQuedoEnCama().trim() : ""));*/
                        setMedico(seguimientoInfluenza.getUsuarioMedico());
                        getActivity().findViewById(R.id.spnMedico1).setEnabled(false);
                        getActivity().findViewById(R.id.imgBusquedaMedico1).setEnabled(false);
                        getActivity().findViewById(R.id.imgLimpiarSeguimiento1).setEnabled(habilitar);

                        getActivity().findViewById(R.id.txtvPosSegFlu1).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvNegSegFlu1).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvDesSegFlu1).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvNoAplicaSegFlu1).setEnabled(habilitar);
                        break;
                    case 2:
                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento2)).setText(seguimientoInfluenza.getFechaSeguimiento());
                        getActivity().findViewById(R.id.edtxtFechaSeguimiento2).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila1)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getConsultaInicial())) ?
                                seguimientoInfluenza.getConsultaInicial().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia2Fila1).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila2)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFiebre())) ?
                                seguimientoInfluenza.getFiebre().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia2Fila2).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila3)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getTos())) ?
                                seguimientoInfluenza.getTos().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia2Fila3).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila4)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getSecrecionNasal())) ?
                                seguimientoInfluenza.getSecrecionNasal().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia2Fila4).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila5)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorGarganta())) ?
                                seguimientoInfluenza.getDolorGarganta().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia2Fila5).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila6)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCongestionNasa())) ?
                                seguimientoInfluenza.getCongestionNasa().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia2Fila6).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila7)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorCabeza())) ?
                                seguimientoInfluenza.getDolorCabeza().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia2Fila7).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila8)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFaltaApetito())) ?
                                seguimientoInfluenza.getFaltaApetito().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia2Fila8).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila9)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorMuscular())) ?
                                seguimientoInfluenza.getDolorMuscular().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia2Fila9).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila10)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorArticular())) ?
                                seguimientoInfluenza.getDolorArticular().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia2Fila10).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila11)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorOido())) ?
                                seguimientoInfluenza.getDolorOido().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia2Fila11).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila12)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getRespiracionRapida())) ?
                                seguimientoInfluenza.getRespiracionRapida().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia2Fila12).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila13)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDificultadRespirar())) ?
                                seguimientoInfluenza.getDificultadRespirar().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia2Fila13).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila14)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFaltaEscuela())) ?
                                seguimientoInfluenza.getFaltaEscuela().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia2Fila14).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila15)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getQuedoEnCama())) ?
                                seguimientoInfluenza.getQuedoEnCama().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia2Fila15).setEnabled(habilitar);

                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila16)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCuadroConfusional())) ?
                                seguimientoInfluenza.getCuadroConfusional().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia2Fila16).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila17)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCuadroNeurologico())) ?
                                seguimientoInfluenza.getCuadroNeurologico().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia2Fila17).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila18)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getConfusionMental())) ?
                                seguimientoInfluenza.getConfusionMental().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia2Fila18).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila19)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getAnosmia())) ?
                                seguimientoInfluenza.getAnosmia().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia2Fila19).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila20)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getAgeusia())) ?
                                seguimientoInfluenza.getAgeusia().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia2Fila20).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila21)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getMareo())) ?
                                seguimientoInfluenza.getMareo().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia2Fila21).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila22)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getIctus())) ?
                                seguimientoInfluenza.getIctus().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia2Fila22).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila23)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getSincope())) ?
                                seguimientoInfluenza.getSincope().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia2Fila23).setEnabled(habilitar);
                        /*((Spinner) getActivity().findViewById(R.id.spnDia2Fila14)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((seguimientoInfluenza.getFaltaEscuela() != null) ?
                                seguimientoInfluenza.getFaltaEscuela().trim() : ""));
                        getActivity().findViewById(R.id.spnDia2Fila14).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila15)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((seguimientoInfluenza.getQuedoEnCama() != null) ?
                                seguimientoInfluenza.getQuedoEnCama().trim() : ""));*/
                        setMedico(seguimientoInfluenza.getUsuarioMedico());
                        getActivity().findViewById(R.id.spnMedico2).setEnabled(false);
                        getActivity().findViewById(R.id.imgBusquedaMedico2).setEnabled(false);
                        getActivity().findViewById(R.id.imgLimpiarSeguimiento2).setEnabled(habilitar);

                        getActivity().findViewById(R.id.txtvPosSegFlu2).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvNegSegFlu2).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvDesSegFlu2).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvNoAplicaSegFlu2).setEnabled(habilitar);
                        break;
                    case 3:
                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento3)).setText(seguimientoInfluenza.getFechaSeguimiento());
                        getActivity().findViewById(R.id.edtxtFechaSeguimiento3).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila1)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getConsultaInicial())) ?
                                seguimientoInfluenza.getConsultaInicial().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia3Fila1).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila2)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFiebre())) ?
                                seguimientoInfluenza.getFiebre().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia3Fila2).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila3)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getTos())) ?
                                seguimientoInfluenza.getTos().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia3Fila3).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila4)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getSecrecionNasal())) ?
                                seguimientoInfluenza.getSecrecionNasal().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia3Fila4).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila5)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorGarganta())) ?
                                seguimientoInfluenza.getDolorGarganta().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia3Fila5).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila6)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCongestionNasa())) ?
                                seguimientoInfluenza.getCongestionNasa().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia3Fila6).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila7)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorCabeza())) ?
                                seguimientoInfluenza.getDolorCabeza().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia3Fila7).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila8)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFaltaApetito())) ?
                                seguimientoInfluenza.getFaltaApetito().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia3Fila8).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila9)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorMuscular())) ?
                                seguimientoInfluenza.getDolorMuscular().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia3Fila9).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila10)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorArticular())) ?
                                seguimientoInfluenza.getDolorArticular().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia3Fila10).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila11)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorOido())) ?
                                seguimientoInfluenza.getDolorOido().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia3Fila11).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila12)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getRespiracionRapida())) ?
                                seguimientoInfluenza.getRespiracionRapida().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia3Fila12).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila13)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDificultadRespirar())) ?
                                seguimientoInfluenza.getDificultadRespirar().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia3Fila13).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila14)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFaltaEscuela())) ?
                                seguimientoInfluenza.getFaltaEscuela().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia3Fila14).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila15)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getQuedoEnCama())) ?
                                seguimientoInfluenza.getQuedoEnCama().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia3Fila15).setEnabled(habilitar);

                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila16)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCuadroConfusional())) ?
                                seguimientoInfluenza.getCuadroConfusional().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia3Fila16).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila17)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCuadroNeurologico())) ?
                                seguimientoInfluenza.getCuadroNeurologico().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia3Fila17).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila18)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getConfusionMental())) ?
                                seguimientoInfluenza.getConfusionMental().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia3Fila18).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila19)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getAnosmia())) ?
                                seguimientoInfluenza.getAnosmia().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia3Fila19).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila20)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getAgeusia())) ?
                                seguimientoInfluenza.getAgeusia().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia3Fila20).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila21)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getMareo())) ?
                                seguimientoInfluenza.getMareo().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia3Fila21).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila22)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getIctus())) ?
                                seguimientoInfluenza.getIctus().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia3Fila22).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila23)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getSincope())) ?
                                seguimientoInfluenza.getSincope().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia3Fila23).setEnabled(habilitar);
                     /*   ((Spinner) getActivity().findViewById(R.id.spnDia3Fila14)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((seguimientoInfluenza.getFaltaEscuela() != null) ?
                                seguimientoInfluenza.getFaltaEscuela().trim() : ""));
                        getActivity().findViewById(R.id.spnDia3Fila14).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila15)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((seguimientoInfluenza.getQuedoEnCama() != null) ?
                                seguimientoInfluenza.getQuedoEnCama().trim() : ""));*/
                        setMedico(seguimientoInfluenza.getUsuarioMedico());
                        getActivity().findViewById(R.id.spnMedico3).setEnabled(false);
                        getActivity().findViewById(R.id.imgBusquedaMedico3).setEnabled(false);
                        getActivity().findViewById(R.id.imgLimpiarSeguimiento3).setEnabled(habilitar);

                        getActivity().findViewById(R.id.txtvPosSegFlu3).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvNegSegFlu3).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvDesSegFlu3).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvNoAplicaSegFlu3).setEnabled(habilitar);
                        break;
                    case 4:
                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento4)).setText(seguimientoInfluenza.getFechaSeguimiento());
                        getActivity().findViewById(R.id.edtxtFechaSeguimiento4).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila1)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getConsultaInicial())) ?
                                seguimientoInfluenza.getConsultaInicial().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia4Fila1).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila2)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFiebre())) ?
                                seguimientoInfluenza.getFiebre().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia4Fila2).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila3)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getTos())) ?
                                seguimientoInfluenza.getTos().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia4Fila3).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila4)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getSecrecionNasal())) ?
                                seguimientoInfluenza.getSecrecionNasal().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia4Fila4).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila5)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorGarganta())) ?
                                seguimientoInfluenza.getDolorGarganta().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia4Fila5).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila6)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCongestionNasa())) ?
                                seguimientoInfluenza.getCongestionNasa().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia4Fila6).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila7)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorCabeza())) ?
                                seguimientoInfluenza.getDolorCabeza().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia4Fila7).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila8)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFaltaApetito())) ?
                                seguimientoInfluenza.getFaltaApetito().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia4Fila8).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila9)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorMuscular())) ?
                                seguimientoInfluenza.getDolorMuscular().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia4Fila9).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila10)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorArticular())) ?
                                seguimientoInfluenza.getDolorArticular().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia4Fila10).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila11)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorOido())) ?
                                seguimientoInfluenza.getDolorOido().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia4Fila11).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila12)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getRespiracionRapida())) ?
                                seguimientoInfluenza.getRespiracionRapida().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia4Fila12).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila13)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDificultadRespirar())) ?
                                seguimientoInfluenza.getDificultadRespirar().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia4Fila13).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila14)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFaltaEscuela())) ?
                                seguimientoInfluenza.getFaltaEscuela().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia4Fila14).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila15)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getQuedoEnCama())) ?
                                seguimientoInfluenza.getQuedoEnCama().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia4Fila15).setEnabled(habilitar);

                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila16)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCuadroConfusional())) ?
                                seguimientoInfluenza.getCuadroConfusional().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia4Fila16).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila17)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCuadroNeurologico())) ?
                                seguimientoInfluenza.getCuadroNeurologico().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia4Fila17).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila18)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getConfusionMental())) ?
                                seguimientoInfluenza.getConfusionMental().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia4Fila18).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila19)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getAnosmia())) ?
                                seguimientoInfluenza.getAnosmia().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia4Fila19).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila20)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getAgeusia())) ?
                                seguimientoInfluenza.getAgeusia().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia4Fila20).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila21)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getMareo())) ?
                                seguimientoInfluenza.getMareo().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia4Fila21).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila22)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getIctus())) ?
                                seguimientoInfluenza.getIctus().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia4Fila22).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila23)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getSincope())) ?
                                seguimientoInfluenza.getSincope().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia4Fila23).setEnabled(habilitar);
                        /*((Spinner) getActivity().findViewById(R.id.spnDia4Fila14)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition(seguimientoInfluenza.getFaltaEscuela().trim()));
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila14)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((seguimientoInfluenza.getFaltaEscuela() != null) ?
                                seguimientoInfluenza.getFaltaEscuela().trim() : ""));
                        getActivity().findViewById(R.id.spnDia4Fila14).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila15)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((seguimientoInfluenza.getQuedoEnCama() != null) ?
                                seguimientoInfluenza.getQuedoEnCama().trim() : ""));*/
                        setMedico(seguimientoInfluenza.getUsuarioMedico());
                        getActivity().findViewById(R.id.spnMedico4).setEnabled(false);
                        getActivity().findViewById(R.id.imgBusquedaMedico4).setEnabled(false);
                        getActivity().findViewById(R.id.imgLimpiarSeguimiento4).setEnabled(habilitar);

                        getActivity().findViewById(R.id.txtvPosSegFlu4).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvNegSegFlu4).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvDesSegFlu4).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvNoAplicaSegFlu4).setEnabled(habilitar);
                        break;
                    case 5:
                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento5)).setText(seguimientoInfluenza.getFechaSeguimiento());
                        getActivity().findViewById(R.id.edtxtFechaSeguimiento5).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila1)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getConsultaInicial())) ?
                                seguimientoInfluenza.getConsultaInicial().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia5Fila1).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila2)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFiebre())) ?
                                seguimientoInfluenza.getFiebre().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia5Fila2).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila3)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getTos())) ?
                                seguimientoInfluenza.getTos().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia5Fila3).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila4)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getSecrecionNasal())) ?
                                seguimientoInfluenza.getSecrecionNasal().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia5Fila4).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila5)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorGarganta())) ?
                                seguimientoInfluenza.getDolorGarganta().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia5Fila5).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila6)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCongestionNasa())) ?
                                seguimientoInfluenza.getCongestionNasa().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia5Fila6).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila7)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorCabeza())) ?
                                seguimientoInfluenza.getDolorCabeza().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia5Fila7).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila8)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFaltaApetito())) ?
                                seguimientoInfluenza.getFaltaApetito().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia5Fila8).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila9)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorMuscular())) ?
                                seguimientoInfluenza.getDolorMuscular().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia5Fila9).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila10)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorArticular())) ?
                                seguimientoInfluenza.getDolorArticular().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia5Fila10).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila11)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorOido())) ?
                                seguimientoInfluenza.getDolorOido().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia5Fila11).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila12)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getRespiracionRapida())) ?
                                seguimientoInfluenza.getRespiracionRapida().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia5Fila12).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila13)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDificultadRespirar())) ?
                                seguimientoInfluenza.getDificultadRespirar().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia5Fila13).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila14)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFaltaEscuela())) ?
                                seguimientoInfluenza.getFaltaEscuela().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia5Fila14).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila15)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getQuedoEnCama())) ?
                                seguimientoInfluenza.getQuedoEnCama().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia5Fila15).setEnabled(habilitar);

                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila16)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCuadroConfusional())) ?
                                seguimientoInfluenza.getCuadroConfusional().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia5Fila16).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila17)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCuadroNeurologico())) ?
                                seguimientoInfluenza.getCuadroNeurologico().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia5Fila17).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila18)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getConfusionMental())) ?
                                seguimientoInfluenza.getConfusionMental().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia5Fila18).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila19)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getAnosmia())) ?
                                seguimientoInfluenza.getAnosmia().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia5Fila19).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila20)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getAgeusia())) ?
                                seguimientoInfluenza.getAgeusia().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia5Fila20).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila21)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getMareo())) ?
                                seguimientoInfluenza.getMareo().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia5Fila21).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila22)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getIctus())) ?
                                seguimientoInfluenza.getIctus().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia5Fila22).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila23)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getSincope())) ?
                                seguimientoInfluenza.getSincope().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia5Fila23).setEnabled(habilitar);
                        /*((Spinner) getActivity().findViewById(R.id.spnDia5Fila14)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition(seguimientoInfluenza.getFaltaEscuela().trim()));
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila14)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((seguimientoInfluenza.getFaltaEscuela() != null) ?
                                seguimientoInfluenza.getFaltaEscuela().trim() : ""));
                        getActivity().findViewById(R.id.spnDia5Fila14).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila15)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((seguimientoInfluenza.getQuedoEnCama() != null) ?
                                seguimientoInfluenza.getQuedoEnCama().trim() : ""));*/
                        setMedico(seguimientoInfluenza.getUsuarioMedico());
                        getActivity().findViewById(R.id.spnMedico5).setEnabled(false);
                        getActivity().findViewById(R.id.imgBusquedaMedico5).setEnabled(false);
                        getActivity().findViewById(R.id.imgLimpiarSeguimiento5).setEnabled(habilitar);

                        getActivity().findViewById(R.id.txtvPosSegFlu5).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvNegSegFlu5).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvDesSegFlu5).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvNoAplicaSegFlu5).setEnabled(habilitar);
                        break;
                    case 6:
                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento6)).setText(seguimientoInfluenza.getFechaSeguimiento());
                        getActivity().findViewById(R.id.edtxtFechaSeguimiento6).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila1)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getConsultaInicial())) ?
                                seguimientoInfluenza.getConsultaInicial().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia6Fila1).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila2)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFiebre())) ?
                                seguimientoInfluenza.getFiebre().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia6Fila2).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila3)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getTos())) ?
                                seguimientoInfluenza.getTos().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia6Fila3).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila4)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getSecrecionNasal())) ?
                                seguimientoInfluenza.getSecrecionNasal().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia6Fila4).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila5)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorGarganta())) ?
                                seguimientoInfluenza.getDolorGarganta().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia6Fila5).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila6)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCongestionNasa())) ?
                                seguimientoInfluenza.getCongestionNasa().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia6Fila6).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila7)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorCabeza())) ?
                                seguimientoInfluenza.getDolorCabeza().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia6Fila7).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila8)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFaltaApetito())) ?
                                seguimientoInfluenza.getFaltaApetito().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia6Fila8).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila9)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorMuscular())) ?
                                seguimientoInfluenza.getDolorMuscular().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia6Fila9).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila10)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorArticular())) ?
                                seguimientoInfluenza.getDolorArticular().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia6Fila10).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila11)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorOido())) ?
                                seguimientoInfluenza.getDolorOido().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia6Fila11).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila12)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getRespiracionRapida())) ?
                                seguimientoInfluenza.getRespiracionRapida().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia6Fila12).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila13)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDificultadRespirar())) ?
                                seguimientoInfluenza.getDificultadRespirar().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia6Fila13).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila14)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFaltaEscuela())) ?
                                seguimientoInfluenza.getFaltaEscuela().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia6Fila14).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila15)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getQuedoEnCama())) ?
                                seguimientoInfluenza.getQuedoEnCama().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia6Fila15).setEnabled(habilitar);

                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila16)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCuadroConfusional())) ?
                                seguimientoInfluenza.getCuadroConfusional().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia6Fila16).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila17)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCuadroNeurologico())) ?
                                seguimientoInfluenza.getCuadroNeurologico().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia6Fila17).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila18)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getConfusionMental())) ?
                                seguimientoInfluenza.getConfusionMental().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia6Fila18).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila19)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getAnosmia())) ?
                                seguimientoInfluenza.getAnosmia().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia6Fila19).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila20)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getAgeusia())) ?
                                seguimientoInfluenza.getAgeusia().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia6Fila20).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila21)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getMareo())) ?
                                seguimientoInfluenza.getMareo().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia6Fila21).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila22)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getIctus())) ?
                                seguimientoInfluenza.getIctus().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia6Fila22).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila23)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getSincope())) ?
                                seguimientoInfluenza.getSincope().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia6Fila23).setEnabled(habilitar);
                        /*((Spinner) getActivity().findViewById(R.id.spnDia6Fila14)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition(seguimientoInfluenza.getFaltaEscuela().trim()));
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila14)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((seguimientoInfluenza.getFaltaEscuela() != null) ?
                                seguimientoInfluenza.getFaltaEscuela().trim() : ""));
                        getActivity().findViewById(R.id.spnDia6Fila14).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila15)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((seguimientoInfluenza.getQuedoEnCama() != null) ?
                                seguimientoInfluenza.getQuedoEnCama().trim() : ""));*/
                        setMedico(seguimientoInfluenza.getUsuarioMedico());
                        getActivity().findViewById(R.id.spnMedico6).setEnabled(false);
                        getActivity().findViewById(R.id.imgBusquedaMedico6).setEnabled(false);
                        getActivity().findViewById(R.id.imgLimpiarSeguimiento6).setEnabled(habilitar);

                        getActivity().findViewById(R.id.txtvPosSegFlu6).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvNegSegFlu6).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvDesSegFlu6).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvNoAplicaSegFlu6).setEnabled(habilitar);
                        break;
                    case 7:
                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento7)).setText(seguimientoInfluenza.getFechaSeguimiento());
                        getActivity().findViewById(R.id.edtxtFechaSeguimiento7).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila1)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getConsultaInicial())) ?
                                seguimientoInfluenza.getConsultaInicial().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia7Fila1).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila2)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFiebre())) ?
                                seguimientoInfluenza.getFiebre().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia7Fila2).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila3)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getTos())) ?
                                seguimientoInfluenza.getTos().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia7Fila3).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila4)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getSecrecionNasal())) ?
                                seguimientoInfluenza.getSecrecionNasal().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia7Fila4).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila5)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorGarganta())) ?
                                seguimientoInfluenza.getDolorGarganta().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia7Fila5).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila6)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCongestionNasa())) ?
                                seguimientoInfluenza.getCongestionNasa().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia7Fila6).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila7)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorCabeza())) ?
                                seguimientoInfluenza.getDolorCabeza().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia7Fila7).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila8)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFaltaApetito())) ?
                                seguimientoInfluenza.getFaltaApetito().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia7Fila8).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila9)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorMuscular())) ?
                                seguimientoInfluenza.getDolorMuscular().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia7Fila9).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila10)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorArticular())) ?
                                seguimientoInfluenza.getDolorArticular().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia7Fila10).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila11)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorOido())) ?
                                seguimientoInfluenza.getDolorOido().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia7Fila11).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila12)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getRespiracionRapida())) ?
                                seguimientoInfluenza.getRespiracionRapida().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia7Fila12).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila13)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDificultadRespirar())) ?
                                seguimientoInfluenza.getDificultadRespirar().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia7Fila13).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila14)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFaltaEscuela())) ?
                                seguimientoInfluenza.getFaltaEscuela().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia7Fila14).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila15)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getQuedoEnCama())) ?
                                seguimientoInfluenza.getQuedoEnCama().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia7Fila15).setEnabled(habilitar);

                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila16)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCuadroConfusional())) ?
                                seguimientoInfluenza.getCuadroConfusional().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia7Fila16).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila17)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCuadroNeurologico())) ?
                                seguimientoInfluenza.getCuadroNeurologico().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia7Fila17).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila18)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getConfusionMental())) ?
                                seguimientoInfluenza.getConfusionMental().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia7Fila18).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila19)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getAnosmia())) ?
                                seguimientoInfluenza.getAnosmia().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia7Fila19).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila20)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getAgeusia())) ?
                                seguimientoInfluenza.getAgeusia().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia7Fila20).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila21)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getMareo())) ?
                                seguimientoInfluenza.getMareo().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia7Fila21).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila22)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getIctus())) ?
                                seguimientoInfluenza.getIctus().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia7Fila22).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila23)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getSincope())) ?
                                seguimientoInfluenza.getSincope().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia7Fila23).setEnabled(habilitar);
                        /*((Spinner) getActivity().findViewById(R.id.spnDia7Fila14)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition(seguimientoInfluenza.getFaltaEscuela().trim()));
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila14)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((seguimientoInfluenza.getFaltaEscuela() != null) ?
                                seguimientoInfluenza.getFaltaEscuela().trim() : ""));
                        getActivity().findViewById(R.id.spnDia7Fila14).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila15)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((seguimientoInfluenza.getQuedoEnCama() != null) ?
                                seguimientoInfluenza.getQuedoEnCama().trim() : ""));;*/
                        setMedico(seguimientoInfluenza.getUsuarioMedico());
                        getActivity().findViewById(R.id.spnMedico7).setEnabled(false);
                        getActivity().findViewById(R.id.imgBusquedaMedico7).setEnabled(false);
                        getActivity().findViewById(R.id.imgLimpiarSeguimiento7).setEnabled(habilitar);

                        getActivity().findViewById(R.id.txtvPosSegFlu7).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvNegSegFlu7).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvDesSegFlu7).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvNoAplicaSegFlu7).setEnabled(habilitar);
                        break;

                    case 8:
                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento8)).setText(seguimientoInfluenza.getFechaSeguimiento());
                        getActivity().findViewById(R.id.edtxtFechaSeguimiento8).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila1)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getConsultaInicial())) ?
                                seguimientoInfluenza.getConsultaInicial().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia8Fila1).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila2)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFiebre())) ?
                                seguimientoInfluenza.getFiebre().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia8Fila2).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila3)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getTos())) ?
                                seguimientoInfluenza.getTos().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia8Fila3).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila4)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getSecrecionNasal())) ?
                                seguimientoInfluenza.getSecrecionNasal().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia8Fila4).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila5)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorGarganta())) ?
                                seguimientoInfluenza.getDolorGarganta().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia8Fila5).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila6)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCongestionNasa())) ?
                                seguimientoInfluenza.getCongestionNasa().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia8Fila6).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila7)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorCabeza())) ?
                                seguimientoInfluenza.getDolorCabeza().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia8Fila7).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila8)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFaltaApetito())) ?
                                seguimientoInfluenza.getFaltaApetito().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia8Fila8).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila9)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorMuscular())) ?
                                seguimientoInfluenza.getDolorMuscular().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia8Fila9).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila10)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorArticular())) ?
                                seguimientoInfluenza.getDolorArticular().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia8Fila10).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila11)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorOido())) ?
                                seguimientoInfluenza.getDolorOido().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia8Fila11).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila12)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getRespiracionRapida())) ?
                                seguimientoInfluenza.getRespiracionRapida().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia8Fila12).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila13)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDificultadRespirar())) ?
                                seguimientoInfluenza.getDificultadRespirar().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia8Fila13).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila14)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFaltaEscuela())) ?
                                seguimientoInfluenza.getFaltaEscuela().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia8Fila14).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila15)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getQuedoEnCama())) ?
                                seguimientoInfluenza.getQuedoEnCama().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia8Fila15).setEnabled(habilitar);

                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila16)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCuadroConfusional())) ?
                                seguimientoInfluenza.getCuadroConfusional().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia8Fila16).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila17)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCuadroNeurologico())) ?
                                seguimientoInfluenza.getCuadroNeurologico().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia8Fila17).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila18)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getConfusionMental())) ?
                                seguimientoInfluenza.getConfusionMental().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia8Fila18).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila19)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getAnosmia())) ?
                                seguimientoInfluenza.getAnosmia().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia8Fila19).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila20)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getAgeusia())) ?
                                seguimientoInfluenza.getAgeusia().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia8Fila20).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila21)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getMareo())) ?
                                seguimientoInfluenza.getMareo().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia8Fila21).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila22)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getIctus())) ?
                                seguimientoInfluenza.getIctus().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia8Fila22).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila23)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getSincope())) ?
                                seguimientoInfluenza.getSincope().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia8Fila23).setEnabled(habilitar);

                        setMedico(seguimientoInfluenza.getUsuarioMedico());
                        getActivity().findViewById(R.id.spnMedico8).setEnabled(false);
                        getActivity().findViewById(R.id.imgBusquedaMedico8).setEnabled(false);
                        getActivity().findViewById(R.id.imgLimpiarSeguimiento8).setEnabled(habilitar);

                        getActivity().findViewById(R.id.txtvPosSegFlu8).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvNegSegFlu8).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvDesSegFlu8).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvNoAplicaSegFlu8).setEnabled(habilitar);
                        break;

                    case 9:
                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento9)).setText(seguimientoInfluenza.getFechaSeguimiento());
                        getActivity().findViewById(R.id.edtxtFechaSeguimiento9).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila1)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getConsultaInicial())) ?
                                seguimientoInfluenza.getConsultaInicial().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia9Fila1).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila2)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFiebre())) ?
                                seguimientoInfluenza.getFiebre().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia9Fila2).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila3)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getTos())) ?
                                seguimientoInfluenza.getTos().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia9Fila3).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila4)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getSecrecionNasal())) ?
                                seguimientoInfluenza.getSecrecionNasal().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia9Fila4).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila5)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorGarganta())) ?
                                seguimientoInfluenza.getDolorGarganta().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia9Fila5).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila6)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCongestionNasa())) ?
                                seguimientoInfluenza.getCongestionNasa().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia9Fila6).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila7)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorCabeza())) ?
                                seguimientoInfluenza.getDolorCabeza().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia9Fila7).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila8)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFaltaApetito())) ?
                                seguimientoInfluenza.getFaltaApetito().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia9Fila8).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila9)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorMuscular())) ?
                                seguimientoInfluenza.getDolorMuscular().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia9Fila9).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila10)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorArticular())) ?
                                seguimientoInfluenza.getDolorArticular().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia9Fila10).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila11)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorOido())) ?
                                seguimientoInfluenza.getDolorOido().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia9Fila11).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila12)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getRespiracionRapida())) ?
                                seguimientoInfluenza.getRespiracionRapida().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia9Fila12).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila13)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDificultadRespirar())) ?
                                seguimientoInfluenza.getDificultadRespirar().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia9Fila13).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila14)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFaltaEscuela())) ?
                                seguimientoInfluenza.getFaltaEscuela().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia9Fila14).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila15)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getQuedoEnCama())) ?
                                seguimientoInfluenza.getQuedoEnCama().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia9Fila15).setEnabled(habilitar);

                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila16)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCuadroConfusional())) ?
                                seguimientoInfluenza.getCuadroConfusional().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia9Fila16).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila17)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCuadroNeurologico())) ?
                                seguimientoInfluenza.getCuadroNeurologico().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia9Fila17).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila18)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getConfusionMental())) ?
                                seguimientoInfluenza.getConfusionMental().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia9Fila18).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila19)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getAnosmia())) ?
                                seguimientoInfluenza.getAnosmia().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia9Fila19).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila20)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getAgeusia())) ?
                                seguimientoInfluenza.getAgeusia().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia9Fila20).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila21)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getMareo())) ?
                                seguimientoInfluenza.getMareo().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia9Fila21).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila22)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getIctus())) ?
                                seguimientoInfluenza.getIctus().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia9Fila22).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila23)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getSincope())) ?
                                seguimientoInfluenza.getSincope().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia9Fila23).setEnabled(habilitar);

                        setMedico(seguimientoInfluenza.getUsuarioMedico());
                        getActivity().findViewById(R.id.spnMedico9).setEnabled(false);
                        getActivity().findViewById(R.id.imgBusquedaMedico9).setEnabled(false);
                        getActivity().findViewById(R.id.imgLimpiarSeguimiento9).setEnabled(habilitar);

                        getActivity().findViewById(R.id.txtvPosSegFlu9).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvNegSegFlu9).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvDesSegFlu9).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvNoAplicaSegFlu9).setEnabled(habilitar);
                        break;

                    case 10:
                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento10)).setText(seguimientoInfluenza.getFechaSeguimiento());
                        getActivity().findViewById(R.id.edtxtFechaSeguimiento10).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila1)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getConsultaInicial())) ?
                                seguimientoInfluenza.getConsultaInicial().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia10Fila1).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila2)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFiebre())) ?
                                seguimientoInfluenza.getFiebre().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia10Fila2).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila3)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getTos())) ?
                                seguimientoInfluenza.getTos().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia10Fila3).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila4)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getSecrecionNasal())) ?
                                seguimientoInfluenza.getSecrecionNasal().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia10Fila4).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila5)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorGarganta())) ?
                                seguimientoInfluenza.getDolorGarganta().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia10Fila5).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila6)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCongestionNasa())) ?
                                seguimientoInfluenza.getCongestionNasa().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia10Fila6).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila7)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorCabeza())) ?
                                seguimientoInfluenza.getDolorCabeza().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia10Fila7).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila8)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFaltaApetito())) ?
                                seguimientoInfluenza.getFaltaApetito().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia10Fila8).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila9)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorMuscular())) ?
                                seguimientoInfluenza.getDolorMuscular().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia10Fila9).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila10)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorArticular())) ?
                                seguimientoInfluenza.getDolorArticular().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia10Fila10).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila11)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorOido())) ?
                                seguimientoInfluenza.getDolorOido().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia10Fila11).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila12)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getRespiracionRapida())) ?
                                seguimientoInfluenza.getRespiracionRapida().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia10Fila12).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila13)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDificultadRespirar())) ?
                                seguimientoInfluenza.getDificultadRespirar().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia10Fila13).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila14)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFaltaEscuela())) ?
                                seguimientoInfluenza.getFaltaEscuela().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia10Fila14).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila15)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getQuedoEnCama())) ?
                                seguimientoInfluenza.getQuedoEnCama().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia10Fila15).setEnabled(habilitar);

                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila16)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCuadroConfusional())) ?
                                seguimientoInfluenza.getCuadroConfusional().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia10Fila16).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila17)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCuadroNeurologico())) ?
                                seguimientoInfluenza.getCuadroNeurologico().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia10Fila17).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila18)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getConfusionMental())) ?
                                seguimientoInfluenza.getConfusionMental().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia10Fila18).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila19)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getAnosmia())) ?
                                seguimientoInfluenza.getAnosmia().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia10Fila19).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila20)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getAgeusia())) ?
                                seguimientoInfluenza.getAgeusia().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia10Fila20).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila21)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getMareo())) ?
                                seguimientoInfluenza.getMareo().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia10Fila21).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila22)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getIctus())) ?
                                seguimientoInfluenza.getIctus().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia10Fila22).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila23)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getSincope())) ?
                                seguimientoInfluenza.getSincope().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia10Fila23).setEnabled(habilitar);


                        setMedico(seguimientoInfluenza.getUsuarioMedico());
                        getActivity().findViewById(R.id.spnMedico10).setEnabled(false);
                        getActivity().findViewById(R.id.imgBusquedaMedico10).setEnabled(false);
                        getActivity().findViewById(R.id.imgLimpiarSeguimiento10).setEnabled(habilitar);

                        getActivity().findViewById(R.id.txtvPosSegFlu10).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvNegSegFlu10).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvDesSegFlu10).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvNoAplicaSegFlu10).setEnabled(habilitar);
                        break;

                    case 11:
                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento11)).setText(seguimientoInfluenza.getFechaSeguimiento());
                        getActivity().findViewById(R.id.edtxtFechaSeguimiento11).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila1)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getConsultaInicial())) ?
                                seguimientoInfluenza.getConsultaInicial().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia11Fila1).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila2)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFiebre())) ?
                                seguimientoInfluenza.getFiebre().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia11Fila2).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila3)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getTos())) ?
                                seguimientoInfluenza.getTos().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia11Fila3).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila4)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getSecrecionNasal())) ?
                                seguimientoInfluenza.getSecrecionNasal().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia11Fila4).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila5)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorGarganta())) ?
                                seguimientoInfluenza.getDolorGarganta().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia11Fila5).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila6)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCongestionNasa())) ?
                                seguimientoInfluenza.getCongestionNasa().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia11Fila6).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila7)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorCabeza())) ?
                                seguimientoInfluenza.getDolorCabeza().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia11Fila7).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila8)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFaltaApetito())) ?
                                seguimientoInfluenza.getFaltaApetito().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia11Fila8).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila9)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorMuscular())) ?
                                seguimientoInfluenza.getDolorMuscular().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia11Fila9).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila10)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorArticular())) ?
                                seguimientoInfluenza.getDolorArticular().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia11Fila10).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila11)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorOido())) ?
                                seguimientoInfluenza.getDolorOido().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia11Fila11).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila12)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getRespiracionRapida())) ?
                                seguimientoInfluenza.getRespiracionRapida().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia11Fila12).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila13)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDificultadRespirar())) ?
                                seguimientoInfluenza.getDificultadRespirar().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia11Fila13).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila14)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFaltaEscuela())) ?
                                seguimientoInfluenza.getFaltaEscuela().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia11Fila14).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila15)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getQuedoEnCama())) ?
                                seguimientoInfluenza.getQuedoEnCama().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia11Fila15).setEnabled(habilitar);

                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila16)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCuadroConfusional())) ?
                                seguimientoInfluenza.getCuadroConfusional().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia11Fila16).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila17)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCuadroNeurologico())) ?
                                seguimientoInfluenza.getCuadroNeurologico().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia11Fila17).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila18)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getConfusionMental())) ?
                                seguimientoInfluenza.getConfusionMental().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia11Fila18).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila19)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getAnosmia())) ?
                                seguimientoInfluenza.getAnosmia().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia11Fila19).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila20)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getAgeusia())) ?
                                seguimientoInfluenza.getAgeusia().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia11Fila20).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila21)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getMareo())) ?
                                seguimientoInfluenza.getMareo().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia11Fila21).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila22)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getIctus())) ?
                                seguimientoInfluenza.getIctus().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia11Fila22).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila23)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getSincope())) ?
                                seguimientoInfluenza.getSincope().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia11Fila23).setEnabled(habilitar);


                        setMedico(seguimientoInfluenza.getUsuarioMedico());
                        getActivity().findViewById(R.id.spnMedico11).setEnabled(false);
                        getActivity().findViewById(R.id.imgBusquedaMedico11).setEnabled(false);
                        getActivity().findViewById(R.id.imgLimpiarSeguimiento11).setEnabled(habilitar);

                        getActivity().findViewById(R.id.txtvPosSegFlu11).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvNegSegFlu11).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvDesSegFlu11).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvNoAplicaSegFlu11).setEnabled(habilitar);
                        break;

                    case 12:
                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento12)).setText(seguimientoInfluenza.getFechaSeguimiento());
                        getActivity().findViewById(R.id.edtxtFechaSeguimiento12).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila1)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getConsultaInicial())) ?
                                seguimientoInfluenza.getConsultaInicial().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia12Fila1).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila2)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFiebre())) ?
                                seguimientoInfluenza.getFiebre().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia12Fila2).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila3)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getTos())) ?
                                seguimientoInfluenza.getTos().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia12Fila3).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila4)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getSecrecionNasal())) ?
                                seguimientoInfluenza.getSecrecionNasal().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia12Fila4).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila5)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorGarganta())) ?
                                seguimientoInfluenza.getDolorGarganta().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia12Fila5).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila6)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCongestionNasa())) ?
                                seguimientoInfluenza.getCongestionNasa().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia12Fila6).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila7)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorCabeza())) ?
                                seguimientoInfluenza.getDolorCabeza().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia12Fila7).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila8)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFaltaApetito())) ?
                                seguimientoInfluenza.getFaltaApetito().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia12Fila8).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila9)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorMuscular())) ?
                                seguimientoInfluenza.getDolorMuscular().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia12Fila9).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila10)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorArticular())) ?
                                seguimientoInfluenza.getDolorArticular().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia12Fila10).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila11)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorOido())) ?
                                seguimientoInfluenza.getDolorOido().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia12Fila11).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila12)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getRespiracionRapida())) ?
                                seguimientoInfluenza.getRespiracionRapida().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia12Fila12).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila13)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDificultadRespirar())) ?
                                seguimientoInfluenza.getDificultadRespirar().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia12Fila13).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila14)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFaltaEscuela())) ?
                                seguimientoInfluenza.getFaltaEscuela().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia12Fila14).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila15)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getQuedoEnCama())) ?
                                seguimientoInfluenza.getQuedoEnCama().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia12Fila15).setEnabled(habilitar);

                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila16)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCuadroConfusional())) ?
                                seguimientoInfluenza.getCuadroConfusional().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia12Fila16).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila17)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCuadroNeurologico())) ?
                                seguimientoInfluenza.getCuadroNeurologico().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia12Fila17).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila18)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getConfusionMental())) ?
                                seguimientoInfluenza.getConfusionMental().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia12Fila18).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila19)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getAnosmia())) ?
                                seguimientoInfluenza.getAnosmia().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia12Fila19).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila20)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getAgeusia())) ?
                                seguimientoInfluenza.getAgeusia().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia12Fila20).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila21)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getMareo())) ?
                                seguimientoInfluenza.getMareo().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia12Fila21).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila22)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getIctus())) ?
                                seguimientoInfluenza.getIctus().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia12Fila22).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila23)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getSincope())) ?
                                seguimientoInfluenza.getSincope().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia12Fila23).setEnabled(habilitar);


                        setMedico(seguimientoInfluenza.getUsuarioMedico());
                        getActivity().findViewById(R.id.spnMedico12).setEnabled(false);
                        getActivity().findViewById(R.id.imgBusquedaMedico12).setEnabled(false);
                        getActivity().findViewById(R.id.imgLimpiarSeguimiento12).setEnabled(habilitar);

                        getActivity().findViewById(R.id.txtvPosSegFlu12).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvNegSegFlu12).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvDesSegFlu12).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvNoAplicaSegFlu12).setEnabled(habilitar);
                        break;

                    case 13:
                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento13)).setText(seguimientoInfluenza.getFechaSeguimiento());
                        getActivity().findViewById(R.id.edtxtFechaSeguimiento13).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila1)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getConsultaInicial())) ?
                                seguimientoInfluenza.getConsultaInicial().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia13Fila1).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila2)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFiebre())) ?
                                seguimientoInfluenza.getFiebre().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia13Fila2).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila3)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getTos())) ?
                                seguimientoInfluenza.getTos().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia13Fila3).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila4)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getSecrecionNasal())) ?
                                seguimientoInfluenza.getSecrecionNasal().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia13Fila4).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila5)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorGarganta())) ?
                                seguimientoInfluenza.getDolorGarganta().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia13Fila5).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila6)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCongestionNasa())) ?
                                seguimientoInfluenza.getCongestionNasa().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia13Fila6).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila7)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorCabeza())) ?
                                seguimientoInfluenza.getDolorCabeza().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia13Fila7).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila8)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFaltaApetito())) ?
                                seguimientoInfluenza.getFaltaApetito().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia13Fila8).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila9)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorMuscular())) ?
                                seguimientoInfluenza.getDolorMuscular().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia13Fila9).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila10)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorArticular())) ?
                                seguimientoInfluenza.getDolorArticular().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia13Fila10).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila11)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorOido())) ?
                                seguimientoInfluenza.getDolorOido().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia13Fila11).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila12)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getRespiracionRapida())) ?
                                seguimientoInfluenza.getRespiracionRapida().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia13Fila12).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila13)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDificultadRespirar())) ?
                                seguimientoInfluenza.getDificultadRespirar().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia13Fila13).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila14)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFaltaEscuela())) ?
                                seguimientoInfluenza.getFaltaEscuela().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia13Fila14).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila15)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getQuedoEnCama())) ?
                                seguimientoInfluenza.getQuedoEnCama().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia13Fila15).setEnabled(habilitar);

                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila16)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCuadroConfusional())) ?
                                seguimientoInfluenza.getCuadroConfusional().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia13Fila16).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila17)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCuadroNeurologico())) ?
                                seguimientoInfluenza.getCuadroNeurologico().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia13Fila17).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila18)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getConfusionMental())) ?
                                seguimientoInfluenza.getConfusionMental().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia13Fila18).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila19)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getAnosmia())) ?
                                seguimientoInfluenza.getAnosmia().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia13Fila19).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila20)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getAgeusia())) ?
                                seguimientoInfluenza.getAgeusia().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia13Fila20).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila21)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getMareo())) ?
                                seguimientoInfluenza.getMareo().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia13Fila21).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila22)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getIctus())) ?
                                seguimientoInfluenza.getIctus().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia13Fila22).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila23)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getSincope())) ?
                                seguimientoInfluenza.getSincope().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia13Fila23).setEnabled(habilitar);


                        setMedico(seguimientoInfluenza.getUsuarioMedico());
                        getActivity().findViewById(R.id.spnMedico13).setEnabled(false);
                        getActivity().findViewById(R.id.imgBusquedaMedico13).setEnabled(false);
                        getActivity().findViewById(R.id.imgLimpiarSeguimiento13).setEnabled(habilitar);

                        getActivity().findViewById(R.id.txtvPosSegFlu13).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvNegSegFlu13).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvDesSegFlu13).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvNoAplicaSegFlu13).setEnabled(habilitar);
                        break;

                    case 14:
                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento14)).setText(seguimientoInfluenza.getFechaSeguimiento());
                        getActivity().findViewById(R.id.edtxtFechaSeguimiento14).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila1)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getConsultaInicial())) ?
                                seguimientoInfluenza.getConsultaInicial().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia14Fila1).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila2)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFiebre())) ?
                                seguimientoInfluenza.getFiebre().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia14Fila2).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila3)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getTos())) ?
                                seguimientoInfluenza.getTos().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia14Fila3).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila4)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getSecrecionNasal())) ?
                                seguimientoInfluenza.getSecrecionNasal().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia14Fila4).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila5)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorGarganta())) ?
                                seguimientoInfluenza.getDolorGarganta().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia14Fila5).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila6)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCongestionNasa())) ?
                                seguimientoInfluenza.getCongestionNasa().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia14Fila6).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila7)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorCabeza())) ?
                                seguimientoInfluenza.getDolorCabeza().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia14Fila7).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila8)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFaltaApetito())) ?
                                seguimientoInfluenza.getFaltaApetito().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia14Fila8).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila9)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorMuscular())) ?
                                seguimientoInfluenza.getDolorMuscular().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia14Fila9).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila10)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorArticular())) ?
                                seguimientoInfluenza.getDolorArticular().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia14Fila10).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila11)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorOido())) ?
                                seguimientoInfluenza.getDolorOido().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia14Fila11).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila12)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getRespiracionRapida())) ?
                                seguimientoInfluenza.getRespiracionRapida().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia14Fila12).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila13)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDificultadRespirar())) ?
                                seguimientoInfluenza.getDificultadRespirar().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia14Fila13).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila14)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFaltaEscuela())) ?
                                seguimientoInfluenza.getFaltaEscuela().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia14Fila14).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila15)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getQuedoEnCama())) ?
                                seguimientoInfluenza.getQuedoEnCama().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia14Fila15).setEnabled(habilitar);

                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila16)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCuadroConfusional())) ?
                                seguimientoInfluenza.getCuadroConfusional().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia14Fila16).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila17)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCuadroNeurologico())) ?
                                seguimientoInfluenza.getCuadroNeurologico().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia14Fila17).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila18)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getConfusionMental())) ?
                                seguimientoInfluenza.getConfusionMental().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia14Fila18).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila19)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getAnosmia())) ?
                                seguimientoInfluenza.getAnosmia().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia14Fila19).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila20)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getAgeusia())) ?
                                seguimientoInfluenza.getAgeusia().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia14Fila20).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila21)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getMareo())) ?
                                seguimientoInfluenza.getMareo().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia14Fila21).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila22)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getIctus())) ?
                                seguimientoInfluenza.getIctus().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia14Fila22).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila23)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getSincope())) ?
                                seguimientoInfluenza.getSincope().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia14Fila23).setEnabled(habilitar);


                        setMedico(seguimientoInfluenza.getUsuarioMedico());
                        getActivity().findViewById(R.id.spnMedico14).setEnabled(false);
                        getActivity().findViewById(R.id.imgBusquedaMedico14).setEnabled(false);
                        getActivity().findViewById(R.id.imgLimpiarSeguimiento14).setEnabled(habilitar);

                        getActivity().findViewById(R.id.txtvPosSegFlu14).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvNegSegFlu14).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvDesSegFlu14).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvNoAplicaSegFlu14).setEnabled(habilitar);
                        break;

                    case 15:
                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento15)).setText(seguimientoInfluenza.getFechaSeguimiento());
                        getActivity().findViewById(R.id.edtxtFechaSeguimiento15).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila1)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getConsultaInicial())) ?
                                seguimientoInfluenza.getConsultaInicial().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia15Fila1).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila2)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFiebre())) ?
                                seguimientoInfluenza.getFiebre().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia15Fila2).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila3)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getTos())) ?
                                seguimientoInfluenza.getTos().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia15Fila3).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila4)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getSecrecionNasal())) ?
                                seguimientoInfluenza.getSecrecionNasal().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia15Fila4).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila5)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorGarganta())) ?
                                seguimientoInfluenza.getDolorGarganta().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia15Fila5).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila6)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCongestionNasa())) ?
                                seguimientoInfluenza.getCongestionNasa().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia15Fila6).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila7)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorCabeza())) ?
                                seguimientoInfluenza.getDolorCabeza().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia15Fila7).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila8)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFaltaApetito())) ?
                                seguimientoInfluenza.getFaltaApetito().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia15Fila8).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila9)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorMuscular())) ?
                                seguimientoInfluenza.getDolorMuscular().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia15Fila9).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila10)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorArticular())) ?
                                seguimientoInfluenza.getDolorArticular().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia15Fila10).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila11)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorOido())) ?
                                seguimientoInfluenza.getDolorOido().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia15Fila11).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila12)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getRespiracionRapida())) ?
                                seguimientoInfluenza.getRespiracionRapida().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia15Fila12).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila13)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDificultadRespirar())) ?
                                seguimientoInfluenza.getDificultadRespirar().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia15Fila13).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila14)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFaltaEscuela())) ?
                                seguimientoInfluenza.getFaltaEscuela().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia15Fila14).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila15)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getQuedoEnCama())) ?
                                seguimientoInfluenza.getQuedoEnCama().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia15Fila15).setEnabled(habilitar);

                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila16)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCuadroConfusional())) ?
                                seguimientoInfluenza.getCuadroConfusional().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia15Fila16).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila17)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCuadroNeurologico())) ?
                                seguimientoInfluenza.getCuadroNeurologico().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia15Fila17).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila18)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getConfusionMental())) ?
                                seguimientoInfluenza.getConfusionMental().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia15Fila18).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila19)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getAnosmia())) ?
                                seguimientoInfluenza.getAnosmia().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia15Fila19).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila20)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getAgeusia())) ?
                                seguimientoInfluenza.getAgeusia().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia15Fila20).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila21)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getMareo())) ?
                                seguimientoInfluenza.getMareo().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia15Fila21).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila22)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getIctus())) ?
                                seguimientoInfluenza.getIctus().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia15Fila22).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila23)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getSincope())) ?
                                seguimientoInfluenza.getSincope().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia15Fila23).setEnabled(habilitar);


                        setMedico(seguimientoInfluenza.getUsuarioMedico());
                        getActivity().findViewById(R.id.spnMedico15).setEnabled(false);
                        getActivity().findViewById(R.id.imgBusquedaMedico15).setEnabled(false);
                        getActivity().findViewById(R.id.imgLimpiarSeguimiento15).setEnabled(habilitar);

                        getActivity().findViewById(R.id.txtvPosSegFlu15).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvNegSegFlu15).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvDesSegFlu15).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvNoAplicaSegFlu15).setEnabled(habilitar);
                        break;

                    case 16:
                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento16)).setText(seguimientoInfluenza.getFechaSeguimiento());
                        getActivity().findViewById(R.id.edtxtFechaSeguimiento16).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila1)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getConsultaInicial())) ?
                                seguimientoInfluenza.getConsultaInicial().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia16Fila1).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila2)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFiebre())) ?
                                seguimientoInfluenza.getFiebre().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia16Fila2).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila3)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getTos())) ?
                                seguimientoInfluenza.getTos().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia16Fila3).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila4)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getSecrecionNasal())) ?
                                seguimientoInfluenza.getSecrecionNasal().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia16Fila4).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila5)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorGarganta())) ?
                                seguimientoInfluenza.getDolorGarganta().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia16Fila5).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila6)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCongestionNasa())) ?
                                seguimientoInfluenza.getCongestionNasa().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia16Fila6).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila7)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorCabeza())) ?
                                seguimientoInfluenza.getDolorCabeza().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia16Fila7).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila8)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFaltaApetito())) ?
                                seguimientoInfluenza.getFaltaApetito().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia16Fila8).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila9)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorMuscular())) ?
                                seguimientoInfluenza.getDolorMuscular().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia16Fila9).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila10)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorArticular())) ?
                                seguimientoInfluenza.getDolorArticular().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia16Fila10).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila11)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorOido())) ?
                                seguimientoInfluenza.getDolorOido().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia16Fila11).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila12)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getRespiracionRapida())) ?
                                seguimientoInfluenza.getRespiracionRapida().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia16Fila12).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila13)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDificultadRespirar())) ?
                                seguimientoInfluenza.getDificultadRespirar().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia16Fila13).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila14)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFaltaEscuela())) ?
                                seguimientoInfluenza.getFaltaEscuela().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia16Fila14).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila15)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getQuedoEnCama())) ?
                                seguimientoInfluenza.getQuedoEnCama().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia16Fila15).setEnabled(habilitar);

                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila16)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCuadroConfusional())) ?
                                seguimientoInfluenza.getCuadroConfusional().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia16Fila16).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila17)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCuadroNeurologico())) ?
                                seguimientoInfluenza.getCuadroNeurologico().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia16Fila17).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila18)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getConfusionMental())) ?
                                seguimientoInfluenza.getConfusionMental().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia16Fila18).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila19)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getAnosmia())) ?
                                seguimientoInfluenza.getAnosmia().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia16Fila19).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila20)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getAgeusia())) ?
                                seguimientoInfluenza.getAgeusia().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia16Fila20).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila21)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getMareo())) ?
                                seguimientoInfluenza.getMareo().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia16Fila21).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila22)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getIctus())) ?
                                seguimientoInfluenza.getIctus().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia16Fila22).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila23)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getSincope())) ?
                                seguimientoInfluenza.getSincope().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia16Fila23).setEnabled(habilitar);


                        setMedico(seguimientoInfluenza.getUsuarioMedico());
                        getActivity().findViewById(R.id.spnMedico16).setEnabled(false);
                        getActivity().findViewById(R.id.imgBusquedaMedico16).setEnabled(false);
                        getActivity().findViewById(R.id.imgLimpiarSeguimiento16).setEnabled(habilitar);

                        getActivity().findViewById(R.id.txtvPosSegFlu16).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvNegSegFlu16).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvDesSegFlu16).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvNoAplicaSegFlu16).setEnabled(habilitar);
                        break;

                    case 17:
                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento17)).setText(seguimientoInfluenza.getFechaSeguimiento());
                        getActivity().findViewById(R.id.edtxtFechaSeguimiento17).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila1)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getConsultaInicial())) ?
                                seguimientoInfluenza.getConsultaInicial().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia17Fila1).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila2)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFiebre())) ?
                                seguimientoInfluenza.getFiebre().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia17Fila2).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila3)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getTos())) ?
                                seguimientoInfluenza.getTos().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia17Fila3).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila4)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getSecrecionNasal())) ?
                                seguimientoInfluenza.getSecrecionNasal().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia17Fila4).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila5)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorGarganta())) ?
                                seguimientoInfluenza.getDolorGarganta().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia17Fila5).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila6)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCongestionNasa())) ?
                                seguimientoInfluenza.getCongestionNasa().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia17Fila6).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila7)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorCabeza())) ?
                                seguimientoInfluenza.getDolorCabeza().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia17Fila7).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila8)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFaltaApetito())) ?
                                seguimientoInfluenza.getFaltaApetito().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia17Fila8).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila9)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorMuscular())) ?
                                seguimientoInfluenza.getDolorMuscular().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia17Fila9).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila10)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorArticular())) ?
                                seguimientoInfluenza.getDolorArticular().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia17Fila10).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila11)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorOido())) ?
                                seguimientoInfluenza.getDolorOido().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia17Fila11).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila12)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getRespiracionRapida())) ?
                                seguimientoInfluenza.getRespiracionRapida().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia17Fila12).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila13)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDificultadRespirar())) ?
                                seguimientoInfluenza.getDificultadRespirar().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia17Fila13).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila14)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFaltaEscuela())) ?
                                seguimientoInfluenza.getFaltaEscuela().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia17Fila14).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila15)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getQuedoEnCama())) ?
                                seguimientoInfluenza.getQuedoEnCama().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia17Fila15).setEnabled(habilitar);

                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila16)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCuadroConfusional())) ?
                                seguimientoInfluenza.getCuadroConfusional().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia17Fila16).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila17)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCuadroNeurologico())) ?
                                seguimientoInfluenza.getCuadroNeurologico().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia17Fila17).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila18)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getConfusionMental())) ?
                                seguimientoInfluenza.getConfusionMental().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia17Fila18).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila19)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getAnosmia())) ?
                                seguimientoInfluenza.getAnosmia().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia17Fila19).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila20)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getAgeusia())) ?
                                seguimientoInfluenza.getAgeusia().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia17Fila20).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila21)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getMareo())) ?
                                seguimientoInfluenza.getMareo().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia17Fila21).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila22)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getIctus())) ?
                                seguimientoInfluenza.getIctus().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia17Fila22).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila23)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getSincope())) ?
                                seguimientoInfluenza.getSincope().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia17Fila23).setEnabled(habilitar);


                        setMedico(seguimientoInfluenza.getUsuarioMedico());
                        getActivity().findViewById(R.id.spnMedico17).setEnabled(false);
                        getActivity().findViewById(R.id.imgBusquedaMedico17).setEnabled(false);
                        getActivity().findViewById(R.id.imgLimpiarSeguimiento17).setEnabled(habilitar);

                        getActivity().findViewById(R.id.txtvPosSegFlu17).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvNegSegFlu17).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvDesSegFlu17).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvNoAplicaSegFlu17).setEnabled(habilitar);
                        break;

                    case 18:
                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento18)).setText(seguimientoInfluenza.getFechaSeguimiento());
                        getActivity().findViewById(R.id.edtxtFechaSeguimiento18).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila1)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getConsultaInicial())) ?
                                seguimientoInfluenza.getConsultaInicial().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia18Fila1).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila2)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFiebre())) ?
                                seguimientoInfluenza.getFiebre().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia18Fila2).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila3)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getTos())) ?
                                seguimientoInfluenza.getTos().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia18Fila3).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila4)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getSecrecionNasal())) ?
                                seguimientoInfluenza.getSecrecionNasal().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia18Fila4).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila5)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorGarganta())) ?
                                seguimientoInfluenza.getDolorGarganta().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia18Fila5).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila6)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCongestionNasa())) ?
                                seguimientoInfluenza.getCongestionNasa().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia18Fila6).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila7)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorCabeza())) ?
                                seguimientoInfluenza.getDolorCabeza().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia18Fila7).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila8)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFaltaApetito())) ?
                                seguimientoInfluenza.getFaltaApetito().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia18Fila8).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila9)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorMuscular())) ?
                                seguimientoInfluenza.getDolorMuscular().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia18Fila9).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila10)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorArticular())) ?
                                seguimientoInfluenza.getDolorArticular().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia18Fila10).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila11)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorOido())) ?
                                seguimientoInfluenza.getDolorOido().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia18Fila11).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila12)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getRespiracionRapida())) ?
                                seguimientoInfluenza.getRespiracionRapida().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia18Fila12).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila13)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDificultadRespirar())) ?
                                seguimientoInfluenza.getDificultadRespirar().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia18Fila13).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila14)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFaltaEscuela())) ?
                                seguimientoInfluenza.getFaltaEscuela().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia18Fila14).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila15)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getQuedoEnCama())) ?
                                seguimientoInfluenza.getQuedoEnCama().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia18Fila15).setEnabled(habilitar);

                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila16)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCuadroConfusional())) ?
                                seguimientoInfluenza.getCuadroConfusional().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia18Fila16).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila17)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCuadroNeurologico())) ?
                                seguimientoInfluenza.getCuadroNeurologico().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia18Fila17).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila18)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getConfusionMental())) ?
                                seguimientoInfluenza.getConfusionMental().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia18Fila18).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila19)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getAnosmia())) ?
                                seguimientoInfluenza.getAnosmia().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia18Fila19).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila20)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getAgeusia())) ?
                                seguimientoInfluenza.getAgeusia().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia18Fila20).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila21)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getMareo())) ?
                                seguimientoInfluenza.getMareo().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia18Fila21).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila22)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getIctus())) ?
                                seguimientoInfluenza.getIctus().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia18Fila22).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila23)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getSincope())) ?
                                seguimientoInfluenza.getSincope().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia18Fila23).setEnabled(habilitar);


                        setMedico(seguimientoInfluenza.getUsuarioMedico());
                        getActivity().findViewById(R.id.spnMedico18).setEnabled(false);
                        getActivity().findViewById(R.id.imgBusquedaMedico18).setEnabled(false);
                        getActivity().findViewById(R.id.imgLimpiarSeguimiento18).setEnabled(habilitar);

                        getActivity().findViewById(R.id.txtvPosSegFlu18).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvNegSegFlu18).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvDesSegFlu18).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvNoAplicaSegFlu18).setEnabled(habilitar);
                        break;

                    case 19:
                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento19)).setText(seguimientoInfluenza.getFechaSeguimiento());
                        getActivity().findViewById(R.id.edtxtFechaSeguimiento19).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila1)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getConsultaInicial())) ?
                                seguimientoInfluenza.getConsultaInicial().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia19Fila1).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila2)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFiebre())) ?
                                seguimientoInfluenza.getFiebre().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia19Fila2).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila3)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getTos())) ?
                                seguimientoInfluenza.getTos().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia19Fila3).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila4)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getSecrecionNasal())) ?
                                seguimientoInfluenza.getSecrecionNasal().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia19Fila4).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila5)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorGarganta())) ?
                                seguimientoInfluenza.getDolorGarganta().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia19Fila5).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila6)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCongestionNasa())) ?
                                seguimientoInfluenza.getCongestionNasa().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia19Fila6).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila7)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorCabeza())) ?
                                seguimientoInfluenza.getDolorCabeza().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia19Fila7).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila8)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFaltaApetito())) ?
                                seguimientoInfluenza.getFaltaApetito().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia19Fila8).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila9)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorMuscular())) ?
                                seguimientoInfluenza.getDolorMuscular().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia19Fila9).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila10)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorArticular())) ?
                                seguimientoInfluenza.getDolorArticular().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia19Fila10).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila11)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorOido())) ?
                                seguimientoInfluenza.getDolorOido().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia19Fila11).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila12)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getRespiracionRapida())) ?
                                seguimientoInfluenza.getRespiracionRapida().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia19Fila12).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila13)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDificultadRespirar())) ?
                                seguimientoInfluenza.getDificultadRespirar().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia19Fila13).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila14)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFaltaEscuela())) ?
                                seguimientoInfluenza.getFaltaEscuela().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia19Fila14).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila15)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getQuedoEnCama())) ?
                                seguimientoInfluenza.getQuedoEnCama().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia19Fila15).setEnabled(habilitar);

                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila16)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCuadroConfusional())) ?
                                seguimientoInfluenza.getCuadroConfusional().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia19Fila16).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila17)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCuadroNeurologico())) ?
                                seguimientoInfluenza.getCuadroNeurologico().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia19Fila17).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila18)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getConfusionMental())) ?
                                seguimientoInfluenza.getConfusionMental().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia19Fila18).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila19)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getAnosmia())) ?
                                seguimientoInfluenza.getAnosmia().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia19Fila19).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila20)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getAgeusia())) ?
                                seguimientoInfluenza.getAgeusia().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia19Fila20).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila21)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getMareo())) ?
                                seguimientoInfluenza.getMareo().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia19Fila21).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila22)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getIctus())) ?
                                seguimientoInfluenza.getIctus().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia19Fila22).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila23)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getSincope())) ?
                                seguimientoInfluenza.getSincope().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia19Fila23).setEnabled(habilitar);


                        setMedico(seguimientoInfluenza.getUsuarioMedico());
                        getActivity().findViewById(R.id.spnMedico19).setEnabled(false);
                        getActivity().findViewById(R.id.imgBusquedaMedico19).setEnabled(false);
                        getActivity().findViewById(R.id.imgLimpiarSeguimiento19).setEnabled(habilitar);

                        getActivity().findViewById(R.id.txtvPosSegFlu19).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvNegSegFlu19).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvDesSegFlu19).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvNoAplicaSegFlu19).setEnabled(habilitar);
                        break;

                    case 20:
                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento20)).setText(seguimientoInfluenza.getFechaSeguimiento());
                        getActivity().findViewById(R.id.edtxtFechaSeguimiento20).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila1)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getConsultaInicial())) ?
                                seguimientoInfluenza.getConsultaInicial().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia20Fila1).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila2)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFiebre())) ?
                                seguimientoInfluenza.getFiebre().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia20Fila2).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila3)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getTos())) ?
                                seguimientoInfluenza.getTos().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia20Fila3).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila4)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getSecrecionNasal())) ?
                                seguimientoInfluenza.getSecrecionNasal().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia20Fila4).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila5)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorGarganta())) ?
                                seguimientoInfluenza.getDolorGarganta().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia20Fila5).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila6)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCongestionNasa())) ?
                                seguimientoInfluenza.getCongestionNasa().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia20Fila6).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila7)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorCabeza())) ?
                                seguimientoInfluenza.getDolorCabeza().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia20Fila7).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila8)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFaltaApetito())) ?
                                seguimientoInfluenza.getFaltaApetito().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia20Fila8).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila9)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorMuscular())) ?
                                seguimientoInfluenza.getDolorMuscular().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia20Fila9).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila10)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorArticular())) ?
                                seguimientoInfluenza.getDolorArticular().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia20Fila10).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila11)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorOido())) ?
                                seguimientoInfluenza.getDolorOido().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia20Fila11).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila12)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getRespiracionRapida())) ?
                                seguimientoInfluenza.getRespiracionRapida().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia20Fila12).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila13)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDificultadRespirar())) ?
                                seguimientoInfluenza.getDificultadRespirar().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia20Fila13).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila14)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFaltaEscuela())) ?
                                seguimientoInfluenza.getFaltaEscuela().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia20Fila14).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila15)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getQuedoEnCama())) ?
                                seguimientoInfluenza.getQuedoEnCama().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia20Fila15).setEnabled(habilitar);

                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila16)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCuadroConfusional())) ?
                                seguimientoInfluenza.getCuadroConfusional().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia20Fila16).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila17)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCuadroNeurologico())) ?
                                seguimientoInfluenza.getCuadroNeurologico().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia20Fila17).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila18)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getConfusionMental())) ?
                                seguimientoInfluenza.getConfusionMental().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia20Fila18).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila19)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getAnosmia())) ?
                                seguimientoInfluenza.getAnosmia().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia20Fila19).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila20)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getAgeusia())) ?
                                seguimientoInfluenza.getAgeusia().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia20Fila20).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila21)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getMareo())) ?
                                seguimientoInfluenza.getMareo().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia20Fila21).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila22)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getIctus())) ?
                                seguimientoInfluenza.getIctus().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia20Fila22).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila23)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getSincope())) ?
                                seguimientoInfluenza.getSincope().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia20Fila23).setEnabled(habilitar);


                        setMedico(seguimientoInfluenza.getUsuarioMedico());
                        getActivity().findViewById(R.id.spnMedico20).setEnabled(false);
                        getActivity().findViewById(R.id.imgBusquedaMedico20).setEnabled(false);
                        getActivity().findViewById(R.id.imgLimpiarSeguimiento20).setEnabled(habilitar);

                        getActivity().findViewById(R.id.txtvPosSegFlu20).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvNegSegFlu20).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvDesSegFlu20).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvNoAplicaSegFlu20).setEnabled(habilitar);
                        break;

                    case 21:
                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento21)).setText(seguimientoInfluenza.getFechaSeguimiento());
                        getActivity().findViewById(R.id.edtxtFechaSeguimiento21).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila1)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getConsultaInicial())) ?
                                seguimientoInfluenza.getConsultaInicial().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia21Fila1).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila2)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFiebre())) ?
                                seguimientoInfluenza.getFiebre().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia21Fila2).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila3)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getTos())) ?
                                seguimientoInfluenza.getTos().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia21Fila3).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila4)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getSecrecionNasal())) ?
                                seguimientoInfluenza.getSecrecionNasal().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia21Fila4).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila5)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorGarganta())) ?
                                seguimientoInfluenza.getDolorGarganta().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia21Fila5).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila6)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCongestionNasa())) ?
                                seguimientoInfluenza.getCongestionNasa().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia21Fila6).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila7)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorCabeza())) ?
                                seguimientoInfluenza.getDolorCabeza().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia21Fila7).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila8)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFaltaApetito())) ?
                                seguimientoInfluenza.getFaltaApetito().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia21Fila8).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila9)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorMuscular())) ?
                                seguimientoInfluenza.getDolorMuscular().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia21Fila9).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila10)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorArticular())) ?
                                seguimientoInfluenza.getDolorArticular().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia21Fila10).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila11)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorOido())) ?
                                seguimientoInfluenza.getDolorOido().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia21Fila11).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila12)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getRespiracionRapida())) ?
                                seguimientoInfluenza.getRespiracionRapida().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia21Fila12).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila13)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDificultadRespirar())) ?
                                seguimientoInfluenza.getDificultadRespirar().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia21Fila13).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila14)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFaltaEscuela())) ?
                                seguimientoInfluenza.getFaltaEscuela().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia21Fila14).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila15)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getQuedoEnCama())) ?
                                seguimientoInfluenza.getQuedoEnCama().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia21Fila15).setEnabled(habilitar);

                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila16)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCuadroConfusional())) ?
                                seguimientoInfluenza.getCuadroConfusional().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia21Fila16).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila17)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCuadroNeurologico())) ?
                                seguimientoInfluenza.getCuadroNeurologico().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia21Fila17).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila18)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getConfusionMental())) ?
                                seguimientoInfluenza.getConfusionMental().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia21Fila18).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila19)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getAnosmia())) ?
                                seguimientoInfluenza.getAnosmia().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia21Fila19).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila20)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getAgeusia())) ?
                                seguimientoInfluenza.getAgeusia().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia21Fila20).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila21)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getMareo())) ?
                                seguimientoInfluenza.getMareo().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia21Fila21).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila22)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getIctus())) ?
                                seguimientoInfluenza.getIctus().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia21Fila22).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila23)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getSincope())) ?
                                seguimientoInfluenza.getSincope().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia21Fila23).setEnabled(habilitar);


                        setMedico(seguimientoInfluenza.getUsuarioMedico());
                        getActivity().findViewById(R.id.spnMedico21).setEnabled(false);
                        getActivity().findViewById(R.id.imgBusquedaMedico21).setEnabled(false);
                        getActivity().findViewById(R.id.imgLimpiarSeguimiento21).setEnabled(habilitar);

                        getActivity().findViewById(R.id.txtvPosSegFlu21).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvNegSegFlu21).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvDesSegFlu21).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvNoAplicaSegFlu21).setEnabled(habilitar);
                        break;

                    case 22:
                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento22)).setText(seguimientoInfluenza.getFechaSeguimiento());
                        getActivity().findViewById(R.id.edtxtFechaSeguimiento22).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila1)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getConsultaInicial())) ?
                                seguimientoInfluenza.getConsultaInicial().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia22Fila1).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila2)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFiebre())) ?
                                seguimientoInfluenza.getFiebre().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia22Fila2).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila3)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getTos())) ?
                                seguimientoInfluenza.getTos().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia22Fila3).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila4)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getSecrecionNasal())) ?
                                seguimientoInfluenza.getSecrecionNasal().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia22Fila4).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila5)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorGarganta())) ?
                                seguimientoInfluenza.getDolorGarganta().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia22Fila5).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila6)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCongestionNasa())) ?
                                seguimientoInfluenza.getCongestionNasa().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia22Fila6).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila7)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorCabeza())) ?
                                seguimientoInfluenza.getDolorCabeza().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia22Fila7).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila8)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFaltaApetito())) ?
                                seguimientoInfluenza.getFaltaApetito().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia22Fila8).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila9)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorMuscular())) ?
                                seguimientoInfluenza.getDolorMuscular().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia22Fila9).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila10)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorArticular())) ?
                                seguimientoInfluenza.getDolorArticular().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia22Fila10).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila11)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorOido())) ?
                                seguimientoInfluenza.getDolorOido().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia22Fila11).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila12)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getRespiracionRapida())) ?
                                seguimientoInfluenza.getRespiracionRapida().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia22Fila12).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila13)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDificultadRespirar())) ?
                                seguimientoInfluenza.getDificultadRespirar().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia22Fila13).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila14)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFaltaEscuela())) ?
                                seguimientoInfluenza.getFaltaEscuela().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia22Fila14).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila15)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getQuedoEnCama())) ?
                                seguimientoInfluenza.getQuedoEnCama().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia22Fila15).setEnabled(habilitar);

                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila16)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCuadroConfusional())) ?
                                seguimientoInfluenza.getCuadroConfusional().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia22Fila16).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila17)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCuadroNeurologico())) ?
                                seguimientoInfluenza.getCuadroNeurologico().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia22Fila17).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila18)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getConfusionMental())) ?
                                seguimientoInfluenza.getConfusionMental().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia22Fila18).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila19)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getAnosmia())) ?
                                seguimientoInfluenza.getAnosmia().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia22Fila19).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila20)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getAgeusia())) ?
                                seguimientoInfluenza.getAgeusia().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia22Fila20).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila21)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getMareo())) ?
                                seguimientoInfluenza.getMareo().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia22Fila21).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila22)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getIctus())) ?
                                seguimientoInfluenza.getIctus().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia22Fila22).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila23)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getSincope())) ?
                                seguimientoInfluenza.getSincope().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia22Fila23).setEnabled(habilitar);


                        setMedico(seguimientoInfluenza.getUsuarioMedico());
                        getActivity().findViewById(R.id.spnMedico22).setEnabled(false);
                        getActivity().findViewById(R.id.imgBusquedaMedico22).setEnabled(false);
                        getActivity().findViewById(R.id.imgLimpiarSeguimiento22).setEnabled(habilitar);

                        getActivity().findViewById(R.id.txtvPosSegFlu22).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvNegSegFlu22).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvDesSegFlu22).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvNoAplicaSegFlu22).setEnabled(habilitar);
                        break;

                    case 23:
                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento23)).setText(seguimientoInfluenza.getFechaSeguimiento());
                        getActivity().findViewById(R.id.edtxtFechaSeguimiento23).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila1)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getConsultaInicial())) ?
                                seguimientoInfluenza.getConsultaInicial().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia23Fila1).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila2)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFiebre())) ?
                                seguimientoInfluenza.getFiebre().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia23Fila2).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila3)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getTos())) ?
                                seguimientoInfluenza.getTos().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia23Fila3).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila4)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getSecrecionNasal())) ?
                                seguimientoInfluenza.getSecrecionNasal().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia23Fila4).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila5)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorGarganta())) ?
                                seguimientoInfluenza.getDolorGarganta().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia23Fila5).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila6)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCongestionNasa())) ?
                                seguimientoInfluenza.getCongestionNasa().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia23Fila6).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila7)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorCabeza())) ?
                                seguimientoInfluenza.getDolorCabeza().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia23Fila7).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila8)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFaltaApetito())) ?
                                seguimientoInfluenza.getFaltaApetito().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia23Fila8).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila9)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorMuscular())) ?
                                seguimientoInfluenza.getDolorMuscular().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia23Fila9).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila10)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorArticular())) ?
                                seguimientoInfluenza.getDolorArticular().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia23Fila10).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila11)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorOido())) ?
                                seguimientoInfluenza.getDolorOido().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia23Fila11).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila12)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getRespiracionRapida())) ?
                                seguimientoInfluenza.getRespiracionRapida().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia23Fila12).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila13)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDificultadRespirar())) ?
                                seguimientoInfluenza.getDificultadRespirar().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia23Fila13).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila14)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFaltaEscuela())) ?
                                seguimientoInfluenza.getFaltaEscuela().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia23Fila14).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila15)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getQuedoEnCama())) ?
                                seguimientoInfluenza.getQuedoEnCama().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia23Fila15).setEnabled(habilitar);

                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila16)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCuadroConfusional())) ?
                                seguimientoInfluenza.getCuadroConfusional().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia23Fila16).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila17)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCuadroNeurologico())) ?
                                seguimientoInfluenza.getCuadroNeurologico().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia23Fila17).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila18)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getConfusionMental())) ?
                                seguimientoInfluenza.getConfusionMental().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia23Fila18).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila19)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getAnosmia())) ?
                                seguimientoInfluenza.getAnosmia().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia23Fila19).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila20)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getAgeusia())) ?
                                seguimientoInfluenza.getAgeusia().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia23Fila20).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila21)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getMareo())) ?
                                seguimientoInfluenza.getMareo().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia23Fila21).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila22)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getIctus())) ?
                                seguimientoInfluenza.getIctus().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia23Fila22).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila23)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getSincope())) ?
                                seguimientoInfluenza.getSincope().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia23Fila23).setEnabled(habilitar);


                        setMedico(seguimientoInfluenza.getUsuarioMedico());
                        getActivity().findViewById(R.id.spnMedico23).setEnabled(false);
                        getActivity().findViewById(R.id.imgBusquedaMedico23).setEnabled(false);
                        getActivity().findViewById(R.id.imgLimpiarSeguimiento23).setEnabled(habilitar);

                        getActivity().findViewById(R.id.txtvPosSegFlu23).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvNegSegFlu23).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvDesSegFlu23).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvNoAplicaSegFlu23).setEnabled(habilitar);
                        break;

                    case 24:
                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento24)).setText(seguimientoInfluenza.getFechaSeguimiento());
                        getActivity().findViewById(R.id.edtxtFechaSeguimiento24).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila1)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getConsultaInicial())) ?
                                seguimientoInfluenza.getConsultaInicial().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia24Fila1).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila2)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFiebre())) ?
                                seguimientoInfluenza.getFiebre().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia24Fila2).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila3)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getTos())) ?
                                seguimientoInfluenza.getTos().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia24Fila3).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila4)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getSecrecionNasal())) ?
                                seguimientoInfluenza.getSecrecionNasal().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia24Fila4).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila5)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorGarganta())) ?
                                seguimientoInfluenza.getDolorGarganta().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia24Fila5).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila6)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCongestionNasa())) ?
                                seguimientoInfluenza.getCongestionNasa().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia24Fila6).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila7)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorCabeza())) ?
                                seguimientoInfluenza.getDolorCabeza().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia24Fila7).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila8)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFaltaApetito())) ?
                                seguimientoInfluenza.getFaltaApetito().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia24Fila8).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila9)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorMuscular())) ?
                                seguimientoInfluenza.getDolorMuscular().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia24Fila9).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila10)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorArticular())) ?
                                seguimientoInfluenza.getDolorArticular().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia24Fila10).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila11)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorOido())) ?
                                seguimientoInfluenza.getDolorOido().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia24Fila11).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila12)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getRespiracionRapida())) ?
                                seguimientoInfluenza.getRespiracionRapida().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia24Fila12).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila13)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDificultadRespirar())) ?
                                seguimientoInfluenza.getDificultadRespirar().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia24Fila13).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila14)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFaltaEscuela())) ?
                                seguimientoInfluenza.getFaltaEscuela().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia24Fila14).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila15)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getQuedoEnCama())) ?
                                seguimientoInfluenza.getQuedoEnCama().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia24Fila15).setEnabled(habilitar);

                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila16)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCuadroConfusional())) ?
                                seguimientoInfluenza.getCuadroConfusional().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia24Fila16).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila17)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCuadroNeurologico())) ?
                                seguimientoInfluenza.getCuadroNeurologico().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia24Fila17).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila18)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getConfusionMental())) ?
                                seguimientoInfluenza.getConfusionMental().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia24Fila18).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila19)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getAnosmia())) ?
                                seguimientoInfluenza.getAnosmia().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia24Fila19).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila20)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getAgeusia())) ?
                                seguimientoInfluenza.getAgeusia().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia24Fila20).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila21)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getMareo())) ?
                                seguimientoInfluenza.getMareo().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia24Fila21).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila22)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getIctus())) ?
                                seguimientoInfluenza.getIctus().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia24Fila22).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila23)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getSincope())) ?
                                seguimientoInfluenza.getSincope().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia24Fila23).setEnabled(habilitar);


                        setMedico(seguimientoInfluenza.getUsuarioMedico());
                        getActivity().findViewById(R.id.spnMedico24).setEnabled(false);
                        getActivity().findViewById(R.id.imgBusquedaMedico24).setEnabled(false);
                        getActivity().findViewById(R.id.imgLimpiarSeguimiento24).setEnabled(habilitar);

                        getActivity().findViewById(R.id.txtvPosSegFlu24).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvNegSegFlu24).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvDesSegFlu24).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvNoAplicaSegFlu24).setEnabled(habilitar);
                        break;

                    case 25:
                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento25)).setText(seguimientoInfluenza.getFechaSeguimiento());
                        getActivity().findViewById(R.id.edtxtFechaSeguimiento25).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila1)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getConsultaInicial())) ?
                                seguimientoInfluenza.getConsultaInicial().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia25Fila1).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila2)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFiebre())) ?
                                seguimientoInfluenza.getFiebre().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia25Fila2).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila3)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getTos())) ?
                                seguimientoInfluenza.getTos().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia25Fila3).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila4)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getSecrecionNasal())) ?
                                seguimientoInfluenza.getSecrecionNasal().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia25Fila4).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila5)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorGarganta())) ?
                                seguimientoInfluenza.getDolorGarganta().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia25Fila5).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila6)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCongestionNasa())) ?
                                seguimientoInfluenza.getCongestionNasa().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia25Fila6).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila7)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorCabeza())) ?
                                seguimientoInfluenza.getDolorCabeza().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia25Fila7).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila8)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFaltaApetito())) ?
                                seguimientoInfluenza.getFaltaApetito().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia25Fila8).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila9)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorMuscular())) ?
                                seguimientoInfluenza.getDolorMuscular().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia25Fila9).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila10)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorArticular())) ?
                                seguimientoInfluenza.getDolorArticular().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia25Fila10).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila11)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorOido())) ?
                                seguimientoInfluenza.getDolorOido().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia25Fila11).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila12)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getRespiracionRapida())) ?
                                seguimientoInfluenza.getRespiracionRapida().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia25Fila12).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila13)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDificultadRespirar())) ?
                                seguimientoInfluenza.getDificultadRespirar().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia25Fila13).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila14)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFaltaEscuela())) ?
                                seguimientoInfluenza.getFaltaEscuela().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia25Fila14).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila15)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getQuedoEnCama())) ?
                                seguimientoInfluenza.getQuedoEnCama().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia25Fila15).setEnabled(habilitar);

                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila16)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCuadroConfusional())) ?
                                seguimientoInfluenza.getCuadroConfusional().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia25Fila16).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila17)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCuadroNeurologico())) ?
                                seguimientoInfluenza.getCuadroNeurologico().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia25Fila17).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila18)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getConfusionMental())) ?
                                seguimientoInfluenza.getConfusionMental().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia25Fila18).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila19)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getAnosmia())) ?
                                seguimientoInfluenza.getAnosmia().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia25Fila19).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila20)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getAgeusia())) ?
                                seguimientoInfluenza.getAgeusia().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia25Fila20).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila21)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getMareo())) ?
                                seguimientoInfluenza.getMareo().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia25Fila21).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila22)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getIctus())) ?
                                seguimientoInfluenza.getIctus().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia25Fila22).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila23)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getSincope())) ?
                                seguimientoInfluenza.getSincope().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia25Fila23).setEnabled(habilitar);


                        setMedico(seguimientoInfluenza.getUsuarioMedico());
                        getActivity().findViewById(R.id.spnMedico25).setEnabled(false);
                        getActivity().findViewById(R.id.imgBusquedaMedico25).setEnabled(false);
                        getActivity().findViewById(R.id.imgLimpiarSeguimiento25).setEnabled(habilitar);

                        getActivity().findViewById(R.id.txtvPosSegFlu25).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvNegSegFlu25).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvDesSegFlu25).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvNoAplicaSegFlu25).setEnabled(habilitar);
                        break;

                    case 26:
                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento26)).setText(seguimientoInfluenza.getFechaSeguimiento());
                        getActivity().findViewById(R.id.edtxtFechaSeguimiento26).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila1)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getConsultaInicial())) ?
                                seguimientoInfluenza.getConsultaInicial().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia26Fila1).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila2)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFiebre())) ?
                                seguimientoInfluenza.getFiebre().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia26Fila2).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila3)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getTos())) ?
                                seguimientoInfluenza.getTos().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia26Fila3).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila4)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getSecrecionNasal())) ?
                                seguimientoInfluenza.getSecrecionNasal().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia26Fila4).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila5)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorGarganta())) ?
                                seguimientoInfluenza.getDolorGarganta().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia26Fila5).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila6)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCongestionNasa())) ?
                                seguimientoInfluenza.getCongestionNasa().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia26Fila6).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila7)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorCabeza())) ?
                                seguimientoInfluenza.getDolorCabeza().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia26Fila7).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila8)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFaltaApetito())) ?
                                seguimientoInfluenza.getFaltaApetito().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia26Fila8).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila9)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorMuscular())) ?
                                seguimientoInfluenza.getDolorMuscular().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia26Fila9).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila10)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorArticular())) ?
                                seguimientoInfluenza.getDolorArticular().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia26Fila10).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila11)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorOido())) ?
                                seguimientoInfluenza.getDolorOido().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia26Fila11).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila12)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getRespiracionRapida())) ?
                                seguimientoInfluenza.getRespiracionRapida().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia26Fila12).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila13)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDificultadRespirar())) ?
                                seguimientoInfluenza.getDificultadRespirar().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia26Fila13).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila14)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFaltaEscuela())) ?
                                seguimientoInfluenza.getFaltaEscuela().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia26Fila14).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila15)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getQuedoEnCama())) ?
                                seguimientoInfluenza.getQuedoEnCama().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia26Fila15).setEnabled(habilitar);

                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila16)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCuadroConfusional())) ?
                                seguimientoInfluenza.getCuadroConfusional().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia26Fila16).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila17)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCuadroNeurologico())) ?
                                seguimientoInfluenza.getCuadroNeurologico().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia26Fila17).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila18)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getConfusionMental())) ?
                                seguimientoInfluenza.getConfusionMental().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia26Fila18).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila19)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getAnosmia())) ?
                                seguimientoInfluenza.getAnosmia().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia26Fila19).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila20)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getAgeusia())) ?
                                seguimientoInfluenza.getAgeusia().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia26Fila20).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila21)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getMareo())) ?
                                seguimientoInfluenza.getMareo().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia26Fila21).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila22)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getIctus())) ?
                                seguimientoInfluenza.getIctus().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia26Fila22).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila23)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getSincope())) ?
                                seguimientoInfluenza.getSincope().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia26Fila23).setEnabled(habilitar);


                        setMedico(seguimientoInfluenza.getUsuarioMedico());
                        getActivity().findViewById(R.id.spnMedico26).setEnabled(false);
                        getActivity().findViewById(R.id.imgBusquedaMedico26).setEnabled(false);
                        getActivity().findViewById(R.id.imgLimpiarSeguimiento26).setEnabled(habilitar);

                        getActivity().findViewById(R.id.txtvPosSegFlu26).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvNegSegFlu26).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvDesSegFlu26).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvNoAplicaSegFlu26).setEnabled(habilitar);
                        break;

                    case 27:
                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento27)).setText(seguimientoInfluenza.getFechaSeguimiento());
                        getActivity().findViewById(R.id.edtxtFechaSeguimiento27).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila1)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getConsultaInicial())) ?
                                seguimientoInfluenza.getConsultaInicial().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia27Fila1).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila2)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFiebre())) ?
                                seguimientoInfluenza.getFiebre().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia27Fila2).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila3)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getTos())) ?
                                seguimientoInfluenza.getTos().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia27Fila3).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila4)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getSecrecionNasal())) ?
                                seguimientoInfluenza.getSecrecionNasal().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia27Fila4).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila5)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorGarganta())) ?
                                seguimientoInfluenza.getDolorGarganta().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia27Fila5).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila6)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCongestionNasa())) ?
                                seguimientoInfluenza.getCongestionNasa().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia27Fila6).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila7)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorCabeza())) ?
                                seguimientoInfluenza.getDolorCabeza().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia27Fila7).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila8)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFaltaApetito())) ?
                                seguimientoInfluenza.getFaltaApetito().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia27Fila8).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila9)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorMuscular())) ?
                                seguimientoInfluenza.getDolorMuscular().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia27Fila9).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila10)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorArticular())) ?
                                seguimientoInfluenza.getDolorArticular().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia27Fila10).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila11)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorOido())) ?
                                seguimientoInfluenza.getDolorOido().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia27Fila11).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila12)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getRespiracionRapida())) ?
                                seguimientoInfluenza.getRespiracionRapida().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia27Fila12).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila13)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDificultadRespirar())) ?
                                seguimientoInfluenza.getDificultadRespirar().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia27Fila13).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila14)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFaltaEscuela())) ?
                                seguimientoInfluenza.getFaltaEscuela().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia27Fila14).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila15)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getQuedoEnCama())) ?
                                seguimientoInfluenza.getQuedoEnCama().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia27Fila15).setEnabled(habilitar);

                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila16)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCuadroConfusional())) ?
                                seguimientoInfluenza.getCuadroConfusional().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia27Fila16).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila17)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCuadroNeurologico())) ?
                                seguimientoInfluenza.getCuadroNeurologico().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia27Fila17).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila18)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getConfusionMental())) ?
                                seguimientoInfluenza.getConfusionMental().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia27Fila18).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila19)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getAnosmia())) ?
                                seguimientoInfluenza.getAnosmia().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia27Fila19).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila20)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getAgeusia())) ?
                                seguimientoInfluenza.getAgeusia().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia27Fila20).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila21)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getMareo())) ?
                                seguimientoInfluenza.getMareo().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia27Fila21).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila22)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getIctus())) ?
                                seguimientoInfluenza.getIctus().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia27Fila22).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila23)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getSincope())) ?
                                seguimientoInfluenza.getSincope().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia27Fila23).setEnabled(habilitar);


                        setMedico(seguimientoInfluenza.getUsuarioMedico());
                        getActivity().findViewById(R.id.spnMedico27).setEnabled(false);
                        getActivity().findViewById(R.id.imgBusquedaMedico27).setEnabled(false);
                        getActivity().findViewById(R.id.imgLimpiarSeguimiento27).setEnabled(habilitar);

                        getActivity().findViewById(R.id.txtvPosSegFlu27).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvNegSegFlu27).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvDesSegFlu27).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvNoAplicaSegFlu27).setEnabled(habilitar);
                        break;

                    case 28:
                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento28)).setText(seguimientoInfluenza.getFechaSeguimiento());
                        getActivity().findViewById(R.id.edtxtFechaSeguimiento28).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila1)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getConsultaInicial())) ?
                                seguimientoInfluenza.getConsultaInicial().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia28Fila1).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila2)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFiebre())) ?
                                seguimientoInfluenza.getFiebre().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia28Fila2).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila3)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getTos())) ?
                                seguimientoInfluenza.getTos().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia28Fila3).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila4)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getSecrecionNasal())) ?
                                seguimientoInfluenza.getSecrecionNasal().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia28Fila4).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila5)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorGarganta())) ?
                                seguimientoInfluenza.getDolorGarganta().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia28Fila5).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila6)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCongestionNasa())) ?
                                seguimientoInfluenza.getCongestionNasa().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia28Fila6).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila7)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorCabeza())) ?
                                seguimientoInfluenza.getDolorCabeza().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia28Fila7).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila8)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFaltaApetito())) ?
                                seguimientoInfluenza.getFaltaApetito().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia28Fila8).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila9)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorMuscular())) ?
                                seguimientoInfluenza.getDolorMuscular().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia28Fila9).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila10)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorArticular())) ?
                                seguimientoInfluenza.getDolorArticular().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia28Fila10).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila11)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDolorOido())) ?
                                seguimientoInfluenza.getDolorOido().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia28Fila11).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila12)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getRespiracionRapida())) ?
                                seguimientoInfluenza.getRespiracionRapida().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia28Fila12).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila13)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getDificultadRespirar())) ?
                                seguimientoInfluenza.getDificultadRespirar().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia28Fila13).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila14)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getFaltaEscuela())) ?
                                seguimientoInfluenza.getFaltaEscuela().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia28Fila14).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila15)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getQuedoEnCama())) ?
                                seguimientoInfluenza.getQuedoEnCama().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia28Fila15).setEnabled(habilitar);

                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila16)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCuadroConfusional())) ?
                                seguimientoInfluenza.getCuadroConfusional().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia28Fila16).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila17)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getCuadroNeurologico())) ?
                                seguimientoInfluenza.getCuadroNeurologico().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia28Fila17).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila18)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getConfusionMental())) ?
                                seguimientoInfluenza.getConfusionMental().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia28Fila18).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila19)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getAnosmia())) ?
                                seguimientoInfluenza.getAnosmia().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia28Fila19).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila20)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getAgeusia())) ?
                                seguimientoInfluenza.getAgeusia().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia28Fila20).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila21)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getMareo())) ?
                                seguimientoInfluenza.getMareo().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia28Fila21).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila22)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getIctus())) ?
                                seguimientoInfluenza.getIctus().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia28Fila22).setEnabled(habilitar);
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila23)).setSelection(mSeguimientoInfluenzaActivity.adapter.getPosition((!StringUtils.isNullOrEmpty(seguimientoInfluenza.getSincope())) ?
                                seguimientoInfluenza.getSincope().trim() : "Seleccione"));
                        getActivity().findViewById(R.id.spnDia28Fila23).setEnabled(habilitar);


                        setMedico(seguimientoInfluenza.getUsuarioMedico());
                        getActivity().findViewById(R.id.spnMedico28).setEnabled(false);
                        getActivity().findViewById(R.id.imgBusquedaMedico28).setEnabled(false);
                        getActivity().findViewById(R.id.imgLimpiarSeguimiento28).setEnabled(habilitar);

                        getActivity().findViewById(R.id.txtvPosSegFlu28).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvNegSegFlu28).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvDesSegFlu28).setEnabled(habilitar);
                        getActivity().findViewById(R.id.txtvNoAplicaSegFlu28).setEnabled(habilitar);
                        break;
                }
            }

            /***
             * Metodo para seleccionar la fecha seguimiento del dia especifico.
             * @param view, Edittext de fecha seguimiento.
             */
            public void showDatePickerDialogFechaSeguimiento(View view, final int viewId) {
                DialogFragment newFragment = new DatePickerFragment() {
                    @Override
                    public void onDateSet(DatePicker view, int year, int monthOfYear, int dayOfMonth) {
                        Calendar calendar = Calendar.getInstance();
                        calendar.set(year, monthOfYear, dayOfMonth);
                        if (esMayorFechaAnterior(calendar)) {
                            ((EditText) getActivity().findViewById(viewId)).setError((mPage != 1) ?
                                    getString(R.string.msj_fecha_seguimiento_menor_anterior) :
                                    getString(R.string.msj_fecha_seguimiento_menor_fis));
                            ((EditText) getActivity().findViewById(viewId)).setText("");
                        } else if (DateUtils.esMayorFechaHoy(calendar)) {
                            ((EditText) getActivity().findViewById(viewId)).setError(getString(R.string.msj_fecha_mayor_hoy));
                            ((EditText) getActivity().findViewById(viewId)).setText("");
                        } else if (!esUnicaFechaSeguimiento(new SimpleDateFormat("dd/MM/yyyy").format(calendar.getTime()), viewId)) {
                            ((EditText) getActivity().findViewById(viewId)).setError(getString(R.string.msj_no_unica_fecha_seguimiento));
                            ((EditText) getActivity().findViewById(viewId)).setText("");
                        } else {
                            if (((EditText) getActivity().findViewById(viewId)).getError() != null) {
                                ((EditText) getActivity().findViewById(viewId)).setError(null);
                                ((EditText) getActivity().findViewById(viewId)).setCompoundDrawablesWithIntrinsicBounds(0, 0, R.drawable.calendar, 0);
                            }
                            ((EditText) getActivity().findViewById(viewId)).setText(new SimpleDateFormat("dd/MM/yyyy").format(calendar.getTime()));
                            cargarFechaSeguimiento(new SimpleDateFormat("dd/MM/yyyy").format(calendar.getTime()));
                        }
                    }
                };
                newFragment.show(getActivity().getSupportFragmentManager(), getString(R.string.title_date_picker));
            }

            public void cargarFechaSeguimiento(String fecha) {
                if (!StringUtils.isNullOrEmpty(fecha)) {
                    SeguimientoInfluenzaDTO seguimientoInfluenza = obtenerNuevoSeguimientoPorDia(mPage);
                    if (seguimientoInfluenza != null) {
                        seguimientoInfluenza.setFechaSeguimiento(fecha);
                    } else {
                        seguimientoInfluenza = new SeguimientoInfluenzaDTO();
                        seguimientoInfluenza.setControlDia(mPage);
                        seguimientoInfluenza.setFechaSeguimiento(fecha);
                        mSeguimientoInfluenzaActivity.nuevaListaSegInfluenza.add(seguimientoInfluenza);
                    }
                }
            }

            /***
             * Metodo que limpia los datos al utilizar el boton cleaner.
             */
            public void limpiarControlesTab() {
                switch (mPage) {
                    case 1:
                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento1)).setText("");
                        //setMedico(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila1)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila2)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila3)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila4)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila5)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila6)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila7)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila8)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila9)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila10)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila11)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila12)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila13)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila14)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila15)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila16)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila17)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila18)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila19)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila20)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila21)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila22)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia1Fila23)).setSelection(0);

                        break;
                    case 2:
                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento2)).setText("");
                        //setMedico(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila1)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila2)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila3)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila4)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila5)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila6)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila7)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila8)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila9)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila10)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila11)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila12)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila13)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila14)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila15)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila16)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila17)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila18)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila19)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila20)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila21)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila22)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia2Fila23)).setSelection(0);
                        break;
                    case 3:
                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento3)).setText("");
                        //setMedico(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila1)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila2)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila3)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila4)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila5)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila6)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila7)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila8)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila9)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila10)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila11)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila12)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila13)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila14)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila15)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila16)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila17)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila18)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila19)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila20)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila21)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila22)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia3Fila23)).setSelection(0);
                        break;
                    case 4:
                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento4)).setText("");
                        //setMedico(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila1)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila2)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila3)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila4)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila5)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila6)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila7)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila8)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila9)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila10)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila11)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila12)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila13)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila14)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila15)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila16)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila17)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila18)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila19)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila20)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila21)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila22)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia4Fila23)).setSelection(0);
                        break;
                    case 5:
                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento5)).setText("");
                        //setMedico(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila1)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila2)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila3)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila4)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila5)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila6)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila7)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila8)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila9)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila10)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila11)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila12)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila13)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila14)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila15)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila16)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila17)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila18)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila19)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila20)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila21)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila22)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia5Fila23)).setSelection(0);
                        break;
                    case 6:
                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento6)).setText("");
                        //setMedico(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila1)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila2)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila3)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila4)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila5)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila6)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila7)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila8)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila9)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila10)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila11)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila12)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila13)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila14)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila15)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila16)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila17)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila18)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila19)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila20)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila21)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila22)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia6Fila23)).setSelection(0);

                        break;
                    case 7:
                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento7)).setText("");
                        //setMedico(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila1)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila2)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila3)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila4)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila5)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila6)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila7)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila8)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila9)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila10)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila11)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila12)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila13)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila14)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila15)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila16)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila17)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila18)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila19)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila20)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila21)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila22)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia7Fila23)).setSelection(0);
                        break;
                    case 8:
                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento8)).setText("");
                        //setMedico(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila1)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila2)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila3)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila4)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila5)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila6)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila7)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila8)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila9)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila10)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila11)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila12)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila13)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila14)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila15)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila16)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila17)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila18)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila19)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila20)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila21)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila22)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia8Fila23)).setSelection(0);
                        break;
                    case 9:
                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento9)).setText("");
                        //setMedico(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila1)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila2)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila3)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila4)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila5)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila6)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila7)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila8)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila9)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila10)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila11)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila12)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila13)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila14)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila15)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila16)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila17)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila18)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila19)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila20)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila21)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila22)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia9Fila23)).setSelection(0);
                        break;
                    case 10:
                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento10)).setText("");
                        //setMedico(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila1)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila2)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila3)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila4)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila5)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila6)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila7)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila8)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila9)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila10)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila11)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila12)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila13)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila14)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila15)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila16)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila17)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila18)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila19)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila20)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila21)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila22)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia10Fila23)).setSelection(0);
                        break;
                    case 11:
                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento11)).setText("");
                        //setMedico(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila1)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila2)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila3)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila4)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila5)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila6)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila7)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila8)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila9)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila10)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila11)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila12)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila13)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila14)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila15)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila16)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila17)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila18)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila19)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila20)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila21)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila22)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia11Fila23)).setSelection(0);
                        break;
                    case 12:
                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento12)).setText("");
                        //setMedico(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila1)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila2)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila3)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila4)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila5)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila6)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila7)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila8)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila9)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila10)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila11)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila12)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila13)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila14)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila15)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila16)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila17)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila18)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila19)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila20)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila21)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila22)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia12Fila23)).setSelection(0);
                        break;
                    case 13:
                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento13)).setText("");
                        //setMedico(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila1)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila2)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila3)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila4)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila5)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila6)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila7)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila8)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila9)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila10)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila11)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila12)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila13)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila14)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila15)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila16)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila17)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila18)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila19)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila20)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila21)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila22)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia13Fila23)).setSelection(0);
                        break;
                    case 14:
                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento14)).setText("");
                        //setMedico(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila1)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila2)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila3)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila4)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila5)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila6)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila7)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila8)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila9)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila10)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila11)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila12)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila13)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila14)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila15)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila16)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila17)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila18)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila19)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila20)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila21)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila22)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia14Fila23)).setSelection(0);
                        break;
                    case 15:
                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento15)).setText("");
                        //setMedico(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila1)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila2)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila3)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila4)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila5)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila6)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila7)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila8)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila9)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila10)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila11)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila12)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila13)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila14)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila15)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila16)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila17)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila18)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila19)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila20)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila21)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila22)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia15Fila23)).setSelection(0);
                        break;
                    case 16:
                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento16)).setText("");
                        //setMedico(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila1)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila2)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila3)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila4)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila5)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila6)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila7)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila8)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila9)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila10)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila11)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila12)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila13)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila14)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila15)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila16)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila17)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila18)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila19)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila20)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila21)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila22)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia16Fila23)).setSelection(0);
                        break;
                    case 17:
                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento17)).setText("");
                        //setMedico(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila1)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila2)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila3)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila4)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila5)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila6)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila7)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila8)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila9)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila10)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila11)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila12)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila13)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila14)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila15)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila16)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila17)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila18)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila19)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila20)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila21)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila22)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia17Fila23)).setSelection(0);
                        break;
                    case 18:
                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento18)).setText("");
                        //setMedico(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila1)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila2)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila3)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila4)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila5)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila6)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila7)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila8)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila9)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila10)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila11)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila12)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila13)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila14)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila15)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila16)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila17)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila18)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila19)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila20)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila21)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila22)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia18Fila23)).setSelection(0);
                        break;
                    case 19:
                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento19)).setText("");
                        //setMedico(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila1)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila2)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila3)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila4)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila5)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila6)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila7)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila8)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila9)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila10)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila11)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila12)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila13)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila14)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila15)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila16)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila17)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila18)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila19)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila20)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila21)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila22)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia19Fila23)).setSelection(0);
                        break;
                    case 20:
                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento20)).setText("");
                        //setMedico(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila1)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila2)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila3)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila4)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila5)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila6)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila7)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila8)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila9)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila10)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila11)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila12)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila13)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila14)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila15)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila16)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila17)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila18)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila19)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila20)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila21)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila22)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia20Fila23)).setSelection(0);
                        break;
                    case 21:
                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento21)).setText("");
                        //setMedico(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila1)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila2)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila3)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila4)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila5)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila6)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila7)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila8)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila9)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila10)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila11)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila12)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila13)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila14)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila15)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila16)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila17)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila18)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila19)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila20)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila21)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila22)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia21Fila23)).setSelection(0);
                        break;
                    case 22:
                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento22)).setText("");
                        //setMedico(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila1)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila2)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila3)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila4)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila5)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila6)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila7)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila8)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila9)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila10)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila11)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila12)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila13)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila14)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila15)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila16)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila17)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila18)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila19)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila20)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila21)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila22)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia22Fila23)).setSelection(0);
                        break;
                    case 23:
                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento23)).setText("");
                        //setMedico(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila1)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila2)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila3)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila4)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila5)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila6)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila7)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila8)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila9)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila10)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila11)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila12)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila13)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila14)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila15)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila16)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila17)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila18)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila19)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila20)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila21)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila22)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia23Fila23)).setSelection(0);
                        break;
                    case 24:
                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento24)).setText("");
                        //setMedico(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila1)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila2)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila3)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila4)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila5)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila6)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila7)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila8)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila9)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila10)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila11)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila12)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila13)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila14)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila15)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila16)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila17)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila18)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila19)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila20)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila21)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila22)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia24Fila23)).setSelection(0);
                        break;
                    case 25:
                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento25)).setText("");
                        //setMedico(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila1)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila2)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila3)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila4)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila5)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila6)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila7)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila8)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila9)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila10)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila11)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila12)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila13)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila14)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila15)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila16)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila17)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila18)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila19)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila20)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila21)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila22)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia25Fila23)).setSelection(0);
                        break;
                    case 26:
                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento26)).setText("");
                        //setMedico(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila1)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila2)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila3)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila4)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila5)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila6)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila7)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila8)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila9)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila10)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila11)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila12)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila13)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila14)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila15)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila16)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila17)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila18)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila19)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila20)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila21)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila22)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia26Fila23)).setSelection(0);
                        break;
                    case 27:
                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento27)).setText("");
                        //setMedico(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila1)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila2)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila3)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila4)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila5)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila6)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila7)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila8)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila9)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila10)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila11)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila12)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila13)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila14)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila15)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila16)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila17)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila18)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila19)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila20)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila21)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila22)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia27Fila23)).setSelection(0);
                        break;
                    case 28:
                        ((EditText) getActivity().findViewById(R.id.edtxtFechaSeguimiento28)).setText("");
                        //setMedico(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila1)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila2)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila3)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila4)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila5)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila6)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila7)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila8)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila9)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila10)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila11)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila12)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila13)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila14)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila15)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila16)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila17)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila18)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila19)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila20)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila21)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila22)).setSelection(0);
                        ((Spinner) getActivity().findViewById(R.id.spnDia28Fila23)).setSelection(0);
                        break;
                }
                removerNuevoSeguimientoPorDia(mPage);
            }

            /***
             * Metodo para validar que la fecha seguimeinto ingresada, no se encuentra repetida.
             * @param fecha, Fecha seleccionada
             * @param viewId, Edittext al que se ingresa la informacion.
             * @return True si no existe la fecha.
             */
            private boolean esUnicaFechaSeguimiento(String fecha, int viewId) {
                if (viewId != R.id.edtxtFechaSeguimiento1) {

                    SeguimientoInfluenzaDTO seguimiento = (obtenerSeguimientoPorDia(1) != null) ? obtenerSeguimientoPorDia(1) :
                            obtenerNuevoSeguimientoPorDia(1);

                    if (seguimiento != null && !StringUtils.isNullOrEmpty(seguimiento.getFechaSeguimiento()) &&
                            seguimiento.getFechaSeguimiento().compareTo(fecha) == 0) {
                        return false;
                    }
                }

                if (viewId != R.id.edtxtFechaSeguimiento2) {
                    SeguimientoInfluenzaDTO seguimiento = (obtenerSeguimientoPorDia(2) != null) ? obtenerSeguimientoPorDia(2) :
                            obtenerNuevoSeguimientoPorDia(2);

                    if (seguimiento != null && !StringUtils.isNullOrEmpty(seguimiento.getFechaSeguimiento()) &&
                            seguimiento.getFechaSeguimiento().compareTo(fecha) == 0) {
                        return false;
                    }
                }

                if (viewId != R.id.edtxtFechaSeguimiento3) {
                    SeguimientoInfluenzaDTO seguimiento = (obtenerSeguimientoPorDia(3) != null) ? obtenerSeguimientoPorDia(3) :
                            obtenerNuevoSeguimientoPorDia(3);

                    if (seguimiento != null && !StringUtils.isNullOrEmpty(seguimiento.getFechaSeguimiento()) &&
                            seguimiento.getFechaSeguimiento().compareTo(fecha) == 0) {
                        return false;
                    }
                }

                if (viewId != R.id.edtxtFechaSeguimiento4) {
                    SeguimientoInfluenzaDTO seguimiento = (obtenerSeguimientoPorDia(4) != null) ? obtenerSeguimientoPorDia(4) :
                            obtenerNuevoSeguimientoPorDia(4);

                    if (seguimiento != null && !StringUtils.isNullOrEmpty(seguimiento.getFechaSeguimiento()) &&
                            seguimiento.getFechaSeguimiento().compareTo(fecha) == 0) {
                        return false;
                    }
                }

                if (viewId != R.id.edtxtFechaSeguimiento5) {
                    SeguimientoInfluenzaDTO seguimiento = (obtenerSeguimientoPorDia(5) != null) ? obtenerSeguimientoPorDia(5) :
                            obtenerNuevoSeguimientoPorDia(5);

                    if (seguimiento != null && !StringUtils.isNullOrEmpty(seguimiento.getFechaSeguimiento()) &&
                            seguimiento.getFechaSeguimiento().compareTo(fecha) == 0) {
                        return false;
                    }
                }

                if (viewId != R.id.edtxtFechaSeguimiento6) {
                    SeguimientoInfluenzaDTO seguimiento = (obtenerSeguimientoPorDia(6) != null) ? obtenerSeguimientoPorDia(6) :
                            obtenerNuevoSeguimientoPorDia(6);

                    if (seguimiento != null && !StringUtils.isNullOrEmpty(seguimiento.getFechaSeguimiento()) &&
                            seguimiento.getFechaSeguimiento().compareTo(fecha) == 0) {
                        return false;
                    }
                }

                if (viewId != R.id.edtxtFechaSeguimiento7) {
                    SeguimientoInfluenzaDTO seguimiento = (obtenerSeguimientoPorDia(7) != null) ? obtenerSeguimientoPorDia(7) :
                            obtenerNuevoSeguimientoPorDia(7);

                    if (seguimiento != null && !StringUtils.isNullOrEmpty(seguimiento.getFechaSeguimiento()) &&
                            seguimiento.getFechaSeguimiento().compareTo(fecha) == 0) {
                        return false;
                    }
                }

                if (viewId != R.id.edtxtFechaSeguimiento8) {
                    SeguimientoInfluenzaDTO seguimiento = (obtenerSeguimientoPorDia(8) != null) ? obtenerSeguimientoPorDia(8) :
                            obtenerNuevoSeguimientoPorDia(8);

                    if (seguimiento != null && !StringUtils.isNullOrEmpty(seguimiento.getFechaSeguimiento()) &&
                            seguimiento.getFechaSeguimiento().compareTo(fecha) == 0) {
                        return false;
                    }
                }

                if (viewId != R.id.edtxtFechaSeguimiento9) {
                    SeguimientoInfluenzaDTO seguimiento = (obtenerSeguimientoPorDia(9) != null) ? obtenerSeguimientoPorDia(9) :
                            obtenerNuevoSeguimientoPorDia(9);

                    if (seguimiento != null && !StringUtils.isNullOrEmpty(seguimiento.getFechaSeguimiento()) &&
                            seguimiento.getFechaSeguimiento().compareTo(fecha) == 0) {
                        return false;
                    }
                }

                if (viewId != R.id.edtxtFechaSeguimiento10) {
                    SeguimientoInfluenzaDTO seguimiento = (obtenerSeguimientoPorDia(10) != null) ? obtenerSeguimientoPorDia(10) :
                            obtenerNuevoSeguimientoPorDia(10);

                    if (seguimiento != null && !StringUtils.isNullOrEmpty(seguimiento.getFechaSeguimiento()) &&
                            seguimiento.getFechaSeguimiento().compareTo(fecha) == 0) {
                        return false;
                    }
                }

                if (viewId != R.id.edtxtFechaSeguimiento11) {
                    SeguimientoInfluenzaDTO seguimiento = (obtenerSeguimientoPorDia(11) != null) ? obtenerSeguimientoPorDia(11) :
                            obtenerNuevoSeguimientoPorDia(11);

                    if (seguimiento != null && !StringUtils.isNullOrEmpty(seguimiento.getFechaSeguimiento()) &&
                            seguimiento.getFechaSeguimiento().compareTo(fecha) == 0) {
                        return false;
                    }
                }

                if (viewId != R.id.edtxtFechaSeguimiento12) {
                    SeguimientoInfluenzaDTO seguimiento = (obtenerSeguimientoPorDia(12) != null) ? obtenerSeguimientoPorDia(12) :
                            obtenerNuevoSeguimientoPorDia(12);

                    if (seguimiento != null && !StringUtils.isNullOrEmpty(seguimiento.getFechaSeguimiento()) &&
                            seguimiento.getFechaSeguimiento().compareTo(fecha) == 0) {
                        return false;
                    }
                }

                if (viewId != R.id.edtxtFechaSeguimiento13) {
                    SeguimientoInfluenzaDTO seguimiento = (obtenerSeguimientoPorDia(13) != null) ? obtenerSeguimientoPorDia(13) :
                            obtenerNuevoSeguimientoPorDia(13);

                    if (seguimiento != null && !StringUtils.isNullOrEmpty(seguimiento.getFechaSeguimiento()) &&
                            seguimiento.getFechaSeguimiento().compareTo(fecha) == 0) {
                        return false;
                    }
                }

                if (viewId != R.id.edtxtFechaSeguimiento14) {
                    SeguimientoInfluenzaDTO seguimiento = (obtenerSeguimientoPorDia(14) != null) ? obtenerSeguimientoPorDia(14) :
                            obtenerNuevoSeguimientoPorDia(14);

                    if (seguimiento != null && !StringUtils.isNullOrEmpty(seguimiento.getFechaSeguimiento()) &&
                            seguimiento.getFechaSeguimiento().compareTo(fecha) == 0) {
                        return false;
                    }
                }

                if (viewId != R.id.edtxtFechaSeguimiento15) {
                    SeguimientoInfluenzaDTO seguimiento = (obtenerSeguimientoPorDia(15) != null) ? obtenerSeguimientoPorDia(15) :
                            obtenerNuevoSeguimientoPorDia(15);

                    if (seguimiento != null && !StringUtils.isNullOrEmpty(seguimiento.getFechaSeguimiento()) &&
                            seguimiento.getFechaSeguimiento().compareTo(fecha) == 0) {
                        return false;
                    }
                }

                if (viewId != R.id.edtxtFechaSeguimiento16) {
                    SeguimientoInfluenzaDTO seguimiento = (obtenerSeguimientoPorDia(16) != null) ? obtenerSeguimientoPorDia(16) :
                            obtenerNuevoSeguimientoPorDia(16);

                    if (seguimiento != null && !StringUtils.isNullOrEmpty(seguimiento.getFechaSeguimiento()) &&
                            seguimiento.getFechaSeguimiento().compareTo(fecha) == 0) {
                        return false;
                    }
                }

                if (viewId != R.id.edtxtFechaSeguimiento17) {
                    SeguimientoInfluenzaDTO seguimiento = (obtenerSeguimientoPorDia(17) != null) ? obtenerSeguimientoPorDia(17) :
                            obtenerNuevoSeguimientoPorDia(17);

                    if (seguimiento != null && !StringUtils.isNullOrEmpty(seguimiento.getFechaSeguimiento()) &&
                            seguimiento.getFechaSeguimiento().compareTo(fecha) == 0) {
                        return false;
                    }
                }

                if (viewId != R.id.edtxtFechaSeguimiento18) {
                    SeguimientoInfluenzaDTO seguimiento = (obtenerSeguimientoPorDia(18) != null) ? obtenerSeguimientoPorDia(18) :
                            obtenerNuevoSeguimientoPorDia(18);

                    if (seguimiento != null && !StringUtils.isNullOrEmpty(seguimiento.getFechaSeguimiento()) &&
                            seguimiento.getFechaSeguimiento().compareTo(fecha) == 0) {
                        return false;
                    }
                }

                if (viewId != R.id.edtxtFechaSeguimiento19) {
                    SeguimientoInfluenzaDTO seguimiento = (obtenerSeguimientoPorDia(19) != null) ? obtenerSeguimientoPorDia(19) :
                            obtenerNuevoSeguimientoPorDia(19);

                    if (seguimiento != null && !StringUtils.isNullOrEmpty(seguimiento.getFechaSeguimiento()) &&
                            seguimiento.getFechaSeguimiento().compareTo(fecha) == 0) {
                        return false;
                    }
                }

                if (viewId != R.id.edtxtFechaSeguimiento20) {
                    SeguimientoInfluenzaDTO seguimiento = (obtenerSeguimientoPorDia(20) != null) ? obtenerSeguimientoPorDia(20) :
                            obtenerNuevoSeguimientoPorDia(20);

                    if (seguimiento != null && !StringUtils.isNullOrEmpty(seguimiento.getFechaSeguimiento()) &&
                            seguimiento.getFechaSeguimiento().compareTo(fecha) == 0) {
                        return false;
                    }
                }

                if (viewId != R.id.edtxtFechaSeguimiento21) {
                    SeguimientoInfluenzaDTO seguimiento = (obtenerSeguimientoPorDia(21) != null) ? obtenerSeguimientoPorDia(21) :
                            obtenerNuevoSeguimientoPorDia(21);

                    if (seguimiento != null && !StringUtils.isNullOrEmpty(seguimiento.getFechaSeguimiento()) &&
                            seguimiento.getFechaSeguimiento().compareTo(fecha) == 0) {
                        return false;
                    }
                }

                if (viewId != R.id.edtxtFechaSeguimiento22) {
                    SeguimientoInfluenzaDTO seguimiento = (obtenerSeguimientoPorDia(22) != null) ? obtenerSeguimientoPorDia(22) :
                            obtenerNuevoSeguimientoPorDia(22);

                    if (seguimiento != null && !StringUtils.isNullOrEmpty(seguimiento.getFechaSeguimiento()) &&
                            seguimiento.getFechaSeguimiento().compareTo(fecha) == 0) {
                        return false;
                    }
                }

                if (viewId != R.id.edtxtFechaSeguimiento23) {
                    SeguimientoInfluenzaDTO seguimiento = (obtenerSeguimientoPorDia(23) != null) ? obtenerSeguimientoPorDia(23) :
                            obtenerNuevoSeguimientoPorDia(23);

                    if (seguimiento != null && !StringUtils.isNullOrEmpty(seguimiento.getFechaSeguimiento()) &&
                            seguimiento.getFechaSeguimiento().compareTo(fecha) == 0) {
                        return false;
                    }
                }

                if (viewId != R.id.edtxtFechaSeguimiento24) {
                    SeguimientoInfluenzaDTO seguimiento = (obtenerSeguimientoPorDia(24) != null) ? obtenerSeguimientoPorDia(24) :
                            obtenerNuevoSeguimientoPorDia(24);

                    if (seguimiento != null && !StringUtils.isNullOrEmpty(seguimiento.getFechaSeguimiento()) &&
                            seguimiento.getFechaSeguimiento().compareTo(fecha) == 0) {
                        return false;
                    }
                }

                if (viewId != R.id.edtxtFechaSeguimiento25) {
                    SeguimientoInfluenzaDTO seguimiento = (obtenerSeguimientoPorDia(25) != null) ? obtenerSeguimientoPorDia(25) :
                            obtenerNuevoSeguimientoPorDia(25);

                    if (seguimiento != null && !StringUtils.isNullOrEmpty(seguimiento.getFechaSeguimiento()) &&
                            seguimiento.getFechaSeguimiento().compareTo(fecha) == 0) {
                        return false;
                    }
                }

                if (viewId != R.id.edtxtFechaSeguimiento26) {
                    SeguimientoInfluenzaDTO seguimiento = (obtenerSeguimientoPorDia(26) != null) ? obtenerSeguimientoPorDia(26) :
                            obtenerNuevoSeguimientoPorDia(26);

                    if (seguimiento != null && !StringUtils.isNullOrEmpty(seguimiento.getFechaSeguimiento()) &&
                            seguimiento.getFechaSeguimiento().compareTo(fecha) == 0) {
                        return false;
                    }
                }

                if (viewId != R.id.edtxtFechaSeguimiento27) {
                    SeguimientoInfluenzaDTO seguimiento = (obtenerSeguimientoPorDia(27) != null) ? obtenerSeguimientoPorDia(27) :
                            obtenerNuevoSeguimientoPorDia(27);

                    if (seguimiento != null && !StringUtils.isNullOrEmpty(seguimiento.getFechaSeguimiento()) &&
                            seguimiento.getFechaSeguimiento().compareTo(fecha) == 0) {
                        return false;
                    }
                }

                if (viewId != R.id.edtxtFechaSeguimiento28) {
                    SeguimientoInfluenzaDTO seguimiento = (obtenerSeguimientoPorDia(28) != null) ? obtenerSeguimientoPorDia(28) :
                            obtenerNuevoSeguimientoPorDia(28);

                    if (seguimiento != null && !StringUtils.isNullOrEmpty(seguimiento.getFechaSeguimiento()) &&
                            seguimiento.getFechaSeguimiento().compareTo(fecha) == 0) {
                        return false;
                    }
                }
                return true;
            }

            /***
             * Metodo para validar que la fecha de seguimiento ingresada no se menor a la anterior
             * @param fecha, Fecha Ingresada
             * @return True si anterior es mayor.
             */
            private boolean esMayorFechaAnterior(Calendar fecha) {
                try {
                    SeguimientoInfluenzaDTO seguimiento = null;
                    switch (mPage) {
                        case 1:
                            if (!StringUtils.isNullOrEmpty(((EditText) getActivity().findViewById(R.id.edtxtFIS)).getText().toString())) {
                                SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                                Calendar fechaAnterior = Calendar.getInstance();
                                fechaAnterior.setTime(sdf.parse(((EditText) getActivity().findViewById(R.id.edtxtFIS)).getText().toString()));

                                if (fechaAnterior.after(fecha)) {
                                    return true;
                                }
                            }
                            break;
                        case 2:
                            seguimiento = (obtenerSeguimientoPorDia(1) != null) ? obtenerSeguimientoPorDia(1) :
                                    obtenerNuevoSeguimientoPorDia(1);

                            if (seguimiento != null && !StringUtils.isNullOrEmpty(seguimiento.getFechaSeguimiento())) {
                                SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                                Calendar fechaAnterior = Calendar.getInstance();
                                fechaAnterior.setTime(sdf.parse(seguimiento.getFechaSeguimiento()));

                                if (fechaAnterior.after(fecha)) {
                                    return true;
                                }
                            }
                            break;
                        case 3:
                            seguimiento = (obtenerSeguimientoPorDia(2) != null) ? obtenerSeguimientoPorDia(2) :
                                    obtenerNuevoSeguimientoPorDia(2);

                            if (seguimiento != null && !StringUtils.isNullOrEmpty(seguimiento.getFechaSeguimiento())) {
                                SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                                Calendar fechaAnterior = Calendar.getInstance();
                                fechaAnterior.setTime(sdf.parse(seguimiento.getFechaSeguimiento()));

                                if (fechaAnterior.after(fecha)) {
                                    return true;
                                }
                            }
                            break;
                        case 4:
                            seguimiento = (obtenerSeguimientoPorDia(3) != null) ? obtenerSeguimientoPorDia(3) :
                                    obtenerNuevoSeguimientoPorDia(3);

                            if (seguimiento != null && !StringUtils.isNullOrEmpty(seguimiento.getFechaSeguimiento())) {
                                SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                                Calendar fechaAnterior = Calendar.getInstance();
                                fechaAnterior.setTime(sdf.parse(seguimiento.getFechaSeguimiento()));

                                if (fechaAnterior.after(fecha)) {
                                    return true;
                                }
                            }
                            break;
                        case 5:
                            seguimiento = (obtenerSeguimientoPorDia(4) != null) ? obtenerSeguimientoPorDia(4) :
                                    obtenerNuevoSeguimientoPorDia(4);

                            if (seguimiento != null && !StringUtils.isNullOrEmpty(seguimiento.getFechaSeguimiento())) {
                                SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                                Calendar fechaAnterior = Calendar.getInstance();
                                fechaAnterior.setTime(sdf.parse(seguimiento.getFechaSeguimiento()));

                                if (fechaAnterior.after(fecha)) {
                                    return true;
                                }
                            }
                            break;
                        case 6:
                            seguimiento = (obtenerSeguimientoPorDia(5) != null) ? obtenerSeguimientoPorDia(5) :
                                    obtenerNuevoSeguimientoPorDia(5);

                            if (seguimiento != null && !StringUtils.isNullOrEmpty(seguimiento.getFechaSeguimiento())) {
                                SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                                Calendar fechaAnterior = Calendar.getInstance();
                                fechaAnterior.setTime(sdf.parse(seguimiento.getFechaSeguimiento()));

                                if (fechaAnterior.after(fecha)) {
                                    return true;
                                }
                            }
                            break;
                        case 7:
                            seguimiento = (obtenerSeguimientoPorDia(6) != null) ? obtenerSeguimientoPorDia(6) :
                                    obtenerNuevoSeguimientoPorDia(6);

                            if (seguimiento != null && !StringUtils.isNullOrEmpty(seguimiento.getFechaSeguimiento())) {
                                SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                                Calendar fechaAnterior = Calendar.getInstance();
                                fechaAnterior.setTime(sdf.parse(seguimiento.getFechaSeguimiento()));

                                if (fechaAnterior.after(fecha)) {
                                    return true;
                                }
                            }
                            break;

                        case 8:
                            seguimiento = (obtenerSeguimientoPorDia(7) != null) ? obtenerSeguimientoPorDia(7) :
                                    obtenerNuevoSeguimientoPorDia(7);

                            if (seguimiento != null && !StringUtils.isNullOrEmpty(seguimiento.getFechaSeguimiento())) {
                                SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                                Calendar fechaAnterior = Calendar.getInstance();
                                fechaAnterior.setTime(sdf.parse(seguimiento.getFechaSeguimiento()));

                                if (fechaAnterior.after(fecha)) {
                                    return true;
                                }
                            }
                            break;

                        case 9:
                            seguimiento = (obtenerSeguimientoPorDia(8) != null) ? obtenerSeguimientoPorDia(8) :
                                    obtenerNuevoSeguimientoPorDia(8);

                            if (seguimiento != null && !StringUtils.isNullOrEmpty(seguimiento.getFechaSeguimiento())) {
                                SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                                Calendar fechaAnterior = Calendar.getInstance();
                                fechaAnterior.setTime(sdf.parse(seguimiento.getFechaSeguimiento()));

                                if (fechaAnterior.after(fecha)) {
                                    return true;
                                }
                            }
                            break;

                        case 10:
                            seguimiento = (obtenerSeguimientoPorDia(9) != null) ? obtenerSeguimientoPorDia(9) :
                                    obtenerNuevoSeguimientoPorDia(9);

                            if (seguimiento != null && !StringUtils.isNullOrEmpty(seguimiento.getFechaSeguimiento())) {
                                SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                                Calendar fechaAnterior = Calendar.getInstance();
                                fechaAnterior.setTime(sdf.parse(seguimiento.getFechaSeguimiento()));

                                if (fechaAnterior.after(fecha)) {
                                    return true;
                                }
                            }
                            break;

                        case 11:
                            seguimiento = (obtenerSeguimientoPorDia(10) != null) ? obtenerSeguimientoPorDia(10) :
                                    obtenerNuevoSeguimientoPorDia(10);

                            if (seguimiento != null && !StringUtils.isNullOrEmpty(seguimiento.getFechaSeguimiento())) {
                                SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                                Calendar fechaAnterior = Calendar.getInstance();
                                fechaAnterior.setTime(sdf.parse(seguimiento.getFechaSeguimiento()));

                                if (fechaAnterior.after(fecha)) {
                                    return true;
                                }
                            }
                            break;

                        case 12:
                            seguimiento = (obtenerSeguimientoPorDia(11) != null) ? obtenerSeguimientoPorDia(11) :
                                    obtenerNuevoSeguimientoPorDia(11);

                            if (seguimiento != null && !StringUtils.isNullOrEmpty(seguimiento.getFechaSeguimiento())) {
                                SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                                Calendar fechaAnterior = Calendar.getInstance();
                                fechaAnterior.setTime(sdf.parse(seguimiento.getFechaSeguimiento()));

                                if (fechaAnterior.after(fecha)) {
                                    return true;
                                }
                            }
                            break;
                        case 13:
                            seguimiento = (obtenerSeguimientoPorDia(12) != null) ? obtenerSeguimientoPorDia(12) :
                                    obtenerNuevoSeguimientoPorDia(12);

                            if (seguimiento != null && !StringUtils.isNullOrEmpty(seguimiento.getFechaSeguimiento())) {
                                SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                                Calendar fechaAnterior = Calendar.getInstance();
                                fechaAnterior.setTime(sdf.parse(seguimiento.getFechaSeguimiento()));

                                if (fechaAnterior.after(fecha)) {
                                    return true;
                                }
                            }
                            break;
                        case 14:
                            seguimiento = (obtenerSeguimientoPorDia(13) != null) ? obtenerSeguimientoPorDia(13) :
                                    obtenerNuevoSeguimientoPorDia(13);

                            if (seguimiento != null && !StringUtils.isNullOrEmpty(seguimiento.getFechaSeguimiento())) {
                                SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                                Calendar fechaAnterior = Calendar.getInstance();
                                fechaAnterior.setTime(sdf.parse(seguimiento.getFechaSeguimiento()));

                                if (fechaAnterior.after(fecha)) {
                                    return true;
                                }
                            }
                            break;
                        case 15:
                            seguimiento = (obtenerSeguimientoPorDia(14) != null) ? obtenerSeguimientoPorDia(14) :
                                    obtenerNuevoSeguimientoPorDia(14);

                            if (seguimiento != null && !StringUtils.isNullOrEmpty(seguimiento.getFechaSeguimiento())) {
                                SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                                Calendar fechaAnterior = Calendar.getInstance();
                                fechaAnterior.setTime(sdf.parse(seguimiento.getFechaSeguimiento()));

                                if (fechaAnterior.after(fecha)) {
                                    return true;
                                }
                            }
                            break;
                        case 16:
                            seguimiento = (obtenerSeguimientoPorDia(15) != null) ? obtenerSeguimientoPorDia(15) :
                                    obtenerNuevoSeguimientoPorDia(15);

                            if (seguimiento != null && !StringUtils.isNullOrEmpty(seguimiento.getFechaSeguimiento())) {
                                SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                                Calendar fechaAnterior = Calendar.getInstance();
                                fechaAnterior.setTime(sdf.parse(seguimiento.getFechaSeguimiento()));

                                if (fechaAnterior.after(fecha)) {
                                    return true;
                                }
                            }
                            break;
                        case 17:
                            seguimiento = (obtenerSeguimientoPorDia(16) != null) ? obtenerSeguimientoPorDia(16) :
                                    obtenerNuevoSeguimientoPorDia(16);

                            if (seguimiento != null && !StringUtils.isNullOrEmpty(seguimiento.getFechaSeguimiento())) {
                                SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                                Calendar fechaAnterior = Calendar.getInstance();
                                fechaAnterior.setTime(sdf.parse(seguimiento.getFechaSeguimiento()));

                                if (fechaAnterior.after(fecha)) {
                                    return true;
                                }
                            }
                            break;
                        case 18:
                            seguimiento = (obtenerSeguimientoPorDia(17) != null) ? obtenerSeguimientoPorDia(17) :
                                    obtenerNuevoSeguimientoPorDia(17);

                            if (seguimiento != null && !StringUtils.isNullOrEmpty(seguimiento.getFechaSeguimiento())) {
                                SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                                Calendar fechaAnterior = Calendar.getInstance();
                                fechaAnterior.setTime(sdf.parse(seguimiento.getFechaSeguimiento()));

                                if (fechaAnterior.after(fecha)) {
                                    return true;
                                }
                            }
                            break;
                        case 19:
                            seguimiento = (obtenerSeguimientoPorDia(18) != null) ? obtenerSeguimientoPorDia(18) :
                                    obtenerNuevoSeguimientoPorDia(18);

                            if (seguimiento != null && !StringUtils.isNullOrEmpty(seguimiento.getFechaSeguimiento())) {
                                SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                                Calendar fechaAnterior = Calendar.getInstance();
                                fechaAnterior.setTime(sdf.parse(seguimiento.getFechaSeguimiento()));

                                if (fechaAnterior.after(fecha)) {
                                    return true;
                                }
                            }
                            break;
                        case 20:
                            seguimiento = (obtenerSeguimientoPorDia(19) != null) ? obtenerSeguimientoPorDia(19) :
                                    obtenerNuevoSeguimientoPorDia(19);

                            if (seguimiento != null && !StringUtils.isNullOrEmpty(seguimiento.getFechaSeguimiento())) {
                                SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                                Calendar fechaAnterior = Calendar.getInstance();
                                fechaAnterior.setTime(sdf.parse(seguimiento.getFechaSeguimiento()));

                                if (fechaAnterior.after(fecha)) {
                                    return true;
                                }
                            }
                            break;
                        case 21:
                            seguimiento = (obtenerSeguimientoPorDia(20) != null) ? obtenerSeguimientoPorDia(20) :
                                    obtenerNuevoSeguimientoPorDia(20);

                            if (seguimiento != null && !StringUtils.isNullOrEmpty(seguimiento.getFechaSeguimiento())) {
                                SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                                Calendar fechaAnterior = Calendar.getInstance();
                                fechaAnterior.setTime(sdf.parse(seguimiento.getFechaSeguimiento()));

                                if (fechaAnterior.after(fecha)) {
                                    return true;
                                }
                            }
                            break;
                        case 22:
                            seguimiento = (obtenerSeguimientoPorDia(21) != null) ? obtenerSeguimientoPorDia(21) :
                                    obtenerNuevoSeguimientoPorDia(21);

                            if (seguimiento != null && !StringUtils.isNullOrEmpty(seguimiento.getFechaSeguimiento())) {
                                SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                                Calendar fechaAnterior = Calendar.getInstance();
                                fechaAnterior.setTime(sdf.parse(seguimiento.getFechaSeguimiento()));

                                if (fechaAnterior.after(fecha)) {
                                    return true;
                                }
                            }
                            break;
                        case 23:
                            seguimiento = (obtenerSeguimientoPorDia(22) != null) ? obtenerSeguimientoPorDia(22) :
                                    obtenerNuevoSeguimientoPorDia(22);

                            if (seguimiento != null && !StringUtils.isNullOrEmpty(seguimiento.getFechaSeguimiento())) {
                                SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                                Calendar fechaAnterior = Calendar.getInstance();
                                fechaAnterior.setTime(sdf.parse(seguimiento.getFechaSeguimiento()));

                                if (fechaAnterior.after(fecha)) {
                                    return true;
                                }
                            }
                            break;
                        case 24:
                            seguimiento = (obtenerSeguimientoPorDia(23) != null) ? obtenerSeguimientoPorDia(23) :
                                    obtenerNuevoSeguimientoPorDia(23);

                            if (seguimiento != null && !StringUtils.isNullOrEmpty(seguimiento.getFechaSeguimiento())) {
                                SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                                Calendar fechaAnterior = Calendar.getInstance();
                                fechaAnterior.setTime(sdf.parse(seguimiento.getFechaSeguimiento()));

                                if (fechaAnterior.after(fecha)) {
                                    return true;
                                }
                            }
                            break;
                        case 25:
                            seguimiento = (obtenerSeguimientoPorDia(24) != null) ? obtenerSeguimientoPorDia(24) :
                                    obtenerNuevoSeguimientoPorDia(24);

                            if (seguimiento != null && !StringUtils.isNullOrEmpty(seguimiento.getFechaSeguimiento())) {
                                SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                                Calendar fechaAnterior = Calendar.getInstance();
                                fechaAnterior.setTime(sdf.parse(seguimiento.getFechaSeguimiento()));

                                if (fechaAnterior.after(fecha)) {
                                    return true;
                                }
                            }
                            break;
                        case 26:
                            seguimiento = (obtenerSeguimientoPorDia(25) != null) ? obtenerSeguimientoPorDia(25) :
                                    obtenerNuevoSeguimientoPorDia(25);

                            if (seguimiento != null && !StringUtils.isNullOrEmpty(seguimiento.getFechaSeguimiento())) {
                                SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                                Calendar fechaAnterior = Calendar.getInstance();
                                fechaAnterior.setTime(sdf.parse(seguimiento.getFechaSeguimiento()));

                                if (fechaAnterior.after(fecha)) {
                                    return true;
                                }
                            }
                            break;
                        case 27:
                            seguimiento = (obtenerSeguimientoPorDia(26) != null) ? obtenerSeguimientoPorDia(26) :
                                    obtenerNuevoSeguimientoPorDia(26);

                            if (seguimiento != null && !StringUtils.isNullOrEmpty(seguimiento.getFechaSeguimiento())) {
                                SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                                Calendar fechaAnterior = Calendar.getInstance();
                                fechaAnterior.setTime(sdf.parse(seguimiento.getFechaSeguimiento()));

                                if (fechaAnterior.after(fecha)) {
                                    return true;
                                }
                            }
                            break;
                        case 28:
                            seguimiento = (obtenerSeguimientoPorDia(27) != null) ? obtenerSeguimientoPorDia(27) :
                                    obtenerNuevoSeguimientoPorDia(27);

                            if (seguimiento != null && !StringUtils.isNullOrEmpty(seguimiento.getFechaSeguimiento())) {
                                SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                                Calendar fechaAnterior = Calendar.getInstance();
                                fechaAnterior.setTime(sdf.parse(seguimiento.getFechaSeguimiento()));

                                if (fechaAnterior.after(fecha)) {
                                    return true;
                                }
                            }
                            break;
                    }
                } catch (ParseException e) {
                    e.printStackTrace();
                }
                return false;
            }

        /*    // Metodo para verificar que no se salten de dias en la hoja de influenza
            public boolean verificarDias() {
                SeguimientoInfluenzaDTO seguimiento1 = null;
                SeguimientoInfluenzaDTO seguimiento2 = null;
                SeguimientoInfluenzaDTO seguimiento3 = null;
                switch (mPage){
                    case 1:
                        seguimiento1 = (obtenerSeguimientoPorDia(1) != null) ? obtenerSeguimientoPorDia(1) : obtenerSeguimientoPorDia(1);
                        if(seguimiento1 == null && seguimiento2 != null) {
                            return false;
                        }
                        break;
                    case 2:
                        seguimiento2 = (obtenerSeguimientoPorDia(2) != null) ? obtenerSeguimientoPorDia(2) : obtenerSeguimientoPorDia(2);
                        if(seguimiento2 == null && seguimiento3 != null) {
                            return false;
                        }
                        break;
                    case 3:
                        seguimiento3 = (obtenerSeguimientoPorDia(3) != null) ? obtenerSeguimientoPorDia(3) : obtenerSeguimientoPorDia(3);
                        if(seguimiento3 == null && seguimiento2 != null) {
                            return false;
                        }
                        break;
                }
                return  true;
            }*/

            public void setMedico(int usuarioMedico) {
                MedicosDTO medicoEncontrado = new MedicosDTO();
                int posicion;

                switch (mPage) {
                    case 1:
                        for (int i = 0; i < adapterMedico1.getCount(); i++) {
                            if (adapterMedico1.getItem(i).getIdMedico().intValue() == usuarioMedico) {
                                medicoEncontrado = adapterMedico1.getItem(i);
                                break;
                            }
                        }
                        posicion = adapterMedico1.getPosition(medicoEncontrado);
                        ((Spinner) getActivity().findViewById(R.id.spnMedico1)).setSelection(posicion);
                        break;

                    case 2:
                        for (int i = 0; i < adapterMedico2.getCount(); i++) {
                            if (adapterMedico2.getItem(i).getIdMedico().intValue() == usuarioMedico) {
                                medicoEncontrado = adapterMedico2.getItem(i);
                                break;
                            }
                        }
                        posicion = adapterMedico2.getPosition(medicoEncontrado);
                        ((Spinner) getActivity().findViewById(R.id.spnMedico2)).setSelection(posicion);
                        break;

                    case 3:
                        for (int i = 0; i < adapterMedico3.getCount(); i++) {
                            if (adapterMedico3.getItem(i).getIdMedico().intValue() == usuarioMedico) {
                                medicoEncontrado = adapterMedico3.getItem(i);
                                break;
                            }
                        }
                        posicion = adapterMedico3.getPosition(medicoEncontrado);
                        ((Spinner) getActivity().findViewById(R.id.spnMedico3)).setSelection(posicion);
                        break;

                    case 4:
                        for (int i = 0; i < adapterMedico4.getCount(); i++) {
                            if (adapterMedico4.getItem(i).getIdMedico().intValue() == usuarioMedico) {
                                medicoEncontrado = adapterMedico1.getItem(i);
                                break;
                            }
                        }
                        posicion = adapterMedico4.getPosition(medicoEncontrado);
                        ((Spinner) getActivity().findViewById(R.id.spnMedico4)).setSelection(posicion);
                        break;

                    case 5:
                        for (int i = 0; i < adapterMedico5.getCount(); i++) {
                            if (adapterMedico5.getItem(i).getIdMedico().intValue() == usuarioMedico) {
                                medicoEncontrado = adapterMedico1.getItem(i);
                                break;
                            }
                        }
                        posicion = adapterMedico5.getPosition(medicoEncontrado);
                        ((Spinner) getActivity().findViewById(R.id.spnMedico5)).setSelection(posicion);
                        break;

                    case 6:
                        for (int i = 0; i < adapterMedico6.getCount(); i++) {
                            if (adapterMedico6.getItem(i).getIdMedico().intValue() == usuarioMedico) {
                                medicoEncontrado = adapterMedico1.getItem(i);
                                break;
                            }
                        }
                        posicion = adapterMedico6.getPosition(medicoEncontrado);
                        ((Spinner) getActivity().findViewById(R.id.spnMedico6)).setSelection(posicion);
                        break;

                    case 7:
                        for (int i = 0; i < adapterMedico7.getCount(); i++) {
                            if (adapterMedico7.getItem(i).getIdMedico().intValue() == usuarioMedico) {
                                medicoEncontrado = adapterMedico1.getItem(i);
                                break;
                            }
                        }
                        posicion = adapterMedico7.getPosition(medicoEncontrado);
                        ((Spinner) getActivity().findViewById(R.id.spnMedico7)).setSelection(posicion);
                        break;

                    case 8:
                        for (int i = 0; i < adapterMedico8.getCount(); i++) {
                            if (adapterMedico8.getItem(i).getIdMedico().intValue() == usuarioMedico) {
                                medicoEncontrado = adapterMedico1.getItem(i);
                                break;
                            }
                        }
                        posicion = adapterMedico8.getPosition(medicoEncontrado);
                        ((Spinner) getActivity().findViewById(R.id.spnMedico8)).setSelection(posicion);
                        break;

                    case 9:
                        for (int i = 0; i < adapterMedico9.getCount(); i++) {
                            if (adapterMedico9.getItem(i).getIdMedico().intValue() == usuarioMedico) {
                                medicoEncontrado = adapterMedico1.getItem(i);
                                break;
                            }
                        }
                        posicion = adapterMedico9.getPosition(medicoEncontrado);
                        ((Spinner) getActivity().findViewById(R.id.spnMedico9)).setSelection(posicion);
                        break;

                    case 10:
                        for (int i = 0; i < adapterMedico10.getCount(); i++) {
                            if (adapterMedico10.getItem(i).getIdMedico().intValue() == usuarioMedico) {
                                medicoEncontrado = adapterMedico1.getItem(i);
                                break;
                            }
                        }
                        posicion = adapterMedico10.getPosition(medicoEncontrado);
                        ((Spinner) getActivity().findViewById(R.id.spnMedico10)).setSelection(posicion);
                        break;

                    case 11:
                        for (int i = 0; i < adapterMedico11.getCount(); i++) {
                            if (adapterMedico11.getItem(i).getIdMedico().intValue() == usuarioMedico) {
                                medicoEncontrado = adapterMedico1.getItem(i);
                                break;
                            }
                        }
                        posicion = adapterMedico11.getPosition(medicoEncontrado);
                        ((Spinner) getActivity().findViewById(R.id.spnMedico11)).setSelection(posicion);
                        break;

                    case 12:
                        for (int i = 0; i < adapterMedico12.getCount(); i++) {
                            if (adapterMedico12.getItem(i).getIdMedico().intValue() == usuarioMedico) {
                                medicoEncontrado = adapterMedico1.getItem(i);
                                break;
                            }
                        }
                        posicion = adapterMedico12.getPosition(medicoEncontrado);
                        ((Spinner) getActivity().findViewById(R.id.spnMedico12)).setSelection(posicion);
                        break;
                    case 13:
                        for (int i = 0; i < adapterMedico13.getCount(); i++) {
                            if (adapterMedico13.getItem(i).getIdMedico().intValue() == usuarioMedico) {
                                medicoEncontrado = adapterMedico1.getItem(i);
                                break;
                            }
                        }
                        posicion = adapterMedico13.getPosition(medicoEncontrado);
                        ((Spinner) getActivity().findViewById(R.id.spnMedico13)).setSelection(posicion);
                        break;
                    case 14:
                        for (int i = 0; i < adapterMedico14.getCount(); i++) {
                            if (adapterMedico14.getItem(i).getIdMedico().intValue() == usuarioMedico) {
                                medicoEncontrado = adapterMedico1.getItem(i);
                                break;
                            }
                        }
                        posicion = adapterMedico14.getPosition(medicoEncontrado);
                        ((Spinner) getActivity().findViewById(R.id.spnMedico14)).setSelection(posicion);
                        break;
                    case 15:
                        for (int i = 0; i < adapterMedico15.getCount(); i++) {
                            if (adapterMedico15.getItem(i).getIdMedico().intValue() == usuarioMedico) {
                                medicoEncontrado = adapterMedico1.getItem(i);
                                break;
                            }
                        }
                        posicion = adapterMedico15.getPosition(medicoEncontrado);
                        ((Spinner) getActivity().findViewById(R.id.spnMedico15)).setSelection(posicion);
                        break;
                    case 16:
                        for (int i = 0; i < adapterMedico16.getCount(); i++) {
                            if (adapterMedico16.getItem(i).getIdMedico().intValue() == usuarioMedico) {
                                medicoEncontrado = adapterMedico1.getItem(i);
                                break;
                            }
                        }
                        posicion = adapterMedico16.getPosition(medicoEncontrado);
                        ((Spinner) getActivity().findViewById(R.id.spnMedico16)).setSelection(posicion);
                        break;
                    case 17:
                        for (int i = 0; i < adapterMedico17.getCount(); i++) {
                            if (adapterMedico17.getItem(i).getIdMedico().intValue() == usuarioMedico) {
                                medicoEncontrado = adapterMedico1.getItem(i);
                                break;
                            }
                        }
                        posicion = adapterMedico17.getPosition(medicoEncontrado);
                        ((Spinner) getActivity().findViewById(R.id.spnMedico17)).setSelection(posicion);
                        break;
                    case 18:
                        for (int i = 0; i < adapterMedico18.getCount(); i++) {
                            if (adapterMedico18.getItem(i).getIdMedico().intValue() == usuarioMedico) {
                                medicoEncontrado = adapterMedico1.getItem(i);
                                break;
                            }
                        }
                        posicion = adapterMedico18.getPosition(medicoEncontrado);
                        ((Spinner) getActivity().findViewById(R.id.spnMedico18)).setSelection(posicion);
                        break;
                    case 19:
                        for (int i = 0; i < adapterMedico19.getCount(); i++) {
                            if (adapterMedico19.getItem(i).getIdMedico().intValue() == usuarioMedico) {
                                medicoEncontrado = adapterMedico1.getItem(i);
                                break;
                            }
                        }
                        posicion = adapterMedico19.getPosition(medicoEncontrado);
                        ((Spinner) getActivity().findViewById(R.id.spnMedico19)).setSelection(posicion);
                        break;
                    case 20:
                        for (int i = 0; i < adapterMedico20.getCount(); i++) {
                            if (adapterMedico20.getItem(i).getIdMedico().intValue() == usuarioMedico) {
                                medicoEncontrado = adapterMedico1.getItem(i);
                                break;
                            }
                        }
                        posicion = adapterMedico20.getPosition(medicoEncontrado);
                        ((Spinner) getActivity().findViewById(R.id.spnMedico20)).setSelection(posicion);
                        break;
                    case 21:
                        for (int i = 0; i < adapterMedico21.getCount(); i++) {
                            if (adapterMedico21.getItem(i).getIdMedico().intValue() == usuarioMedico) {
                                medicoEncontrado = adapterMedico1.getItem(i);
                                break;
                            }
                        }
                        posicion = adapterMedico21.getPosition(medicoEncontrado);
                        ((Spinner) getActivity().findViewById(R.id.spnMedico21)).setSelection(posicion);
                        break;
                    case 22:
                        for (int i = 0; i < adapterMedico22.getCount(); i++) {
                            if (adapterMedico22.getItem(i).getIdMedico().intValue() == usuarioMedico) {
                                medicoEncontrado = adapterMedico1.getItem(i);
                                break;
                            }
                        }
                        posicion = adapterMedico22.getPosition(medicoEncontrado);
                        ((Spinner) getActivity().findViewById(R.id.spnMedico22)).setSelection(posicion);
                        break;
                    case 23:
                        for (int i = 0; i < adapterMedico23.getCount(); i++) {
                            if (adapterMedico23.getItem(i).getIdMedico().intValue() == usuarioMedico) {
                                medicoEncontrado = adapterMedico1.getItem(i);
                                break;
                            }
                        }
                        posicion = adapterMedico23.getPosition(medicoEncontrado);
                        ((Spinner) getActivity().findViewById(R.id.spnMedico23)).setSelection(posicion);
                        break;
                    case 24:
                        for (int i = 0; i < adapterMedico24.getCount(); i++) {
                            if (adapterMedico24.getItem(i).getIdMedico().intValue() == usuarioMedico) {
                                medicoEncontrado = adapterMedico1.getItem(i);
                                break;
                            }
                        }
                        posicion = adapterMedico24.getPosition(medicoEncontrado);
                        ((Spinner) getActivity().findViewById(R.id.spnMedico24)).setSelection(posicion);
                        break;
                    case 25:
                        for (int i = 0; i < adapterMedico25.getCount(); i++) {
                            if (adapterMedico25.getItem(i).getIdMedico().intValue() == usuarioMedico) {
                                medicoEncontrado = adapterMedico1.getItem(i);
                                break;
                            }
                        }
                        posicion = adapterMedico25.getPosition(medicoEncontrado);
                        ((Spinner) getActivity().findViewById(R.id.spnMedico25)).setSelection(posicion);
                        break;
                    case 26:
                        for (int i = 0; i < adapterMedico26.getCount(); i++) {
                            if (adapterMedico26.getItem(i).getIdMedico().intValue() == usuarioMedico) {
                                medicoEncontrado = adapterMedico1.getItem(i);
                                break;
                            }
                        }
                        posicion = adapterMedico26.getPosition(medicoEncontrado);
                        ((Spinner) getActivity().findViewById(R.id.spnMedico26)).setSelection(posicion);
                        break;
                    case 27:
                        for (int i = 0; i < adapterMedico27.getCount(); i++) {
                            if (adapterMedico27.getItem(i).getIdMedico().intValue() == usuarioMedico) {
                                medicoEncontrado = adapterMedico1.getItem(i);
                                break;
                            }
                        }
                        posicion = adapterMedico27.getPosition(medicoEncontrado);
                        ((Spinner) getActivity().findViewById(R.id.spnMedico27)).setSelection(posicion);
                        break;
                    case 28:
                        for (int i = 0; i < adapterMedico28.getCount(); i++) {
                            if (adapterMedico28.getItem(i).getIdMedico().intValue() == usuarioMedico) {
                                medicoEncontrado = adapterMedico1.getItem(i);
                                break;
                            }
                        }
                        posicion = adapterMedico28.getPosition(medicoEncontrado);
                        ((Spinner) getActivity().findViewById(R.id.spnMedico28)).setSelection(posicion);
                        break;
                }

            }

            public SeguimientoInfluenzaDTO obtenerSeguimientoPorDia(int dia) {
                for (SeguimientoInfluenzaDTO seguimientoInfluenza : mSeguimientoInfluenzaActivity.listaSegInfluenza) {
                    if (seguimientoInfluenza.getControlDia() != ' ' &&
                            Integer.parseInt("" + seguimientoInfluenza.getControlDia()) == dia) {
                        return seguimientoInfluenza;
                    }
                }
                return null;
            }

            public SeguimientoInfluenzaDTO obtenerNuevoSeguimientoPorDia(int dia) {
                if (mSeguimientoInfluenzaActivity.nuevaListaSegInfluenza != null) {
                    for (SeguimientoInfluenzaDTO seguimientoInfluenza : mSeguimientoInfluenzaActivity.nuevaListaSegInfluenza) {
                        if (seguimientoInfluenza.getControlDia() != ' ' &&
                                Integer.parseInt("" + seguimientoInfluenza.getControlDia()) == dia) {
                            return seguimientoInfluenza;
                        }
                    }
                }
                return null;
            }

            public void removerNuevoSeguimientoPorDia(int dia) {
                if (mSeguimientoInfluenzaActivity.nuevaListaSegInfluenza != null) {
                    for (SeguimientoInfluenzaDTO seguimientoInfluenza : mSeguimientoInfluenzaActivity.nuevaListaSegInfluenza) {
                        if (seguimientoInfluenza.getControlDia() != ' ' &&
                                Integer.parseInt("" + seguimientoInfluenza.getControlDia()) == dia) {
                            mSeguimientoInfluenzaActivity.nuevaListaSegInfluenza.remove(seguimientoInfluenza);
                            return;
                        }
                    }
                }
            }
        }

    }
}